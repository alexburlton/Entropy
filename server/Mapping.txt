help.FundamentalsGlossary -> a.a:
    java.lang.String panelName -> a
    javax.swing.JTextPane title -> b
    javax.swing.JTextPane paneOne -> c
    javax.swing.JTextPane[] textFields -> d
    50:66:void refresh() -> a
help.FundamentalsTheDeck -> a.b:
    java.lang.String clubString -> a
    java.lang.String diamondString -> b
    java.lang.String moonString -> c
    java.lang.String panelName -> d
    javax.swing.JTextPane title -> e
    javax.swing.JTextPane paneOne -> f
    javax.swing.JTextPane[] textFields -> g
    javax.swing.JLabel clubLabel -> h
    javax.swing.JLabel diamondLabel -> i
    javax.swing.JLabel heartLabel -> j
    javax.swing.JLabel moonLabel -> k
    javax.swing.JLabel spadeLabel -> l
    javax.swing.JLabel starLabel -> m
    javax.swing.JLabel label_3 -> n
    javax.swing.JLabel label_4 -> o
    javax.swing.JLabel label_5 -> p
    javax.swing.JLabel rightmostLabel -> q
    javax.swing.JLabel leftmostLabel -> r
    118:137:void setPaneOneText(boolean) -> b
    142:166:void fireAppearancePreferencesChange() -> b
    170:192:void refreshSuitRankingVisibility() -> d
    197:199:void refresh() -> a
help.HelpPanel -> a.c:
    java.lang.String panelName -> a
    java.lang.String nodeName -> b
    javax.swing.JTextPane[] textFields -> c
    37:66:boolean contains(java.lang.String) -> a
    71:115:void highlight(java.lang.String) -> b
    119:126:void setTextFieldsEditable(boolean) -> a
    130:199:void addMouseListeners(java.lang.String[]) -> a
    205:224:void mouseHovered(javax.swing.JTextPane,java.awt.event.MouseEvent,java.lang.String[]) -> a
    228:284:java.lang.String getWordFromPosition(java.lang.String,int) -> a
    289:289:boolean isLetter(java.lang.String) -> e
    296:334:void navigateToPageBasedOnKeyWord(java.lang.String) -> f
    340:347:java.lang.String getDocumentText(javax.swing.JTextPane) -> a
    353:366:boolean isKeyWord(java.lang.String,java.lang.String[]) -> a
    372:372:java.lang.String toString() -> toString
    377:377:java.lang.String getPanelName() -> c
    381:382:void setPanelName(java.lang.String) -> c
    385:386:void setNodeName(java.lang.String) -> d
    389:391:void setTextFields(javax.swing.JTextPane[]) -> a
    396:397:void fireAppearancePreferencesChange() -> b
    402:402:void refresh() -> a
    336:336:java.lang.String access$0(help.HelpPanel,javax.swing.JTextPane) -> a
    226:226:java.lang.String access$1(help.HelpPanel,java.lang.String,int) -> a
    351:351:boolean access$2(help.HelpPanel,java.lang.String,java.lang.String[]) -> a
    292:292:void access$3(help.HelpPanel,java.lang.String) -> a
    201:201:void access$4(help.HelpPanel,javax.swing.JTextPane,java.awt.event.MouseEvent,java.lang.String[]) -> a
help.HelpPanel$1 -> a.c$1:
    help.HelpPanel this$0 -> a
    javax.swing.JTextPane val$pane -> b
    java.lang.String[] val$wordsToExclude -> c
    143:158:void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    163:164:void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    170:170:void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    176:176:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    182:182:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
help.HelpPanel$2 -> a.c$2:
    help.HelpPanel this$0 -> a
    javax.swing.JTextPane val$pane -> b
    java.lang.String[] val$wordsToExclude -> c
    189:189:void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    194:195:void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
help.MiscBugReport -> a.d:
    java.lang.String panelName -> a
    javax.swing.JTextPane title -> b
    javax.swing.JTextPane paneIntro -> c
    javax.swing.JTextPane[] textFields -> d
help.MiscCheatCodes -> a.e:
    java.lang.String panelName -> a
    javax.swing.JTextPane title -> b
    javax.swing.JTextPane paneIntro -> c
    javax.swing.JTextPane paneOne -> d
    javax.swing.JTextPane[] textFields -> e
    java.lang.String cheatsText -> f
help.MiscClearingSaveData -> a.f:
    java.lang.String panelName -> a
    javax.swing.JTextPane title -> b
    javax.swing.JTextPane paneIntro -> c
    javax.swing.JTextPane paneOne -> d
    javax.swing.JTextPane[] textFields -> e
help.RulesEntropyBidding -> a.g:
    java.lang.String panelName -> a
    javax.swing.JTextPane title -> b
    javax.swing.JTextPane paneOne -> c
    javax.swing.JTextPane subtitle -> d
    javax.swing.JTextPane paneTwo -> e
    javax.swing.JTextPane[] textFields -> f
help.RulesEntropyChallenging -> a.h:
    java.lang.String panelName -> a
    javax.swing.JTextPane title -> b
    javax.swing.JTextPane paneOne -> c
    javax.swing.JTextPane[] textFields -> d
help.RulesEntropyIntroduction -> a.i:
    java.lang.String panelName -> a
    javax.swing.JTextPane title -> b
    javax.swing.JTextPane paneOne -> c
    javax.swing.JTextPane[] textFields -> d
help.RulesIllegal -> a.j:
    java.lang.String panelName -> a
    javax.swing.JTextPane title -> b
    javax.swing.JTextPane paneOne -> c
    javax.swing.JTextPane[] textFields -> d
help.RulesVectropyBidding -> a.k:
    java.lang.String panelName -> a
    javax.swing.JTextPane title -> b
    javax.swing.JTextPane paneOne -> c
    javax.swing.JTextPane subtitle -> d
    javax.swing.JTextPane paneTwo -> e
    javax.swing.JTextPane[] textFields -> f
    java.lang.String clubsColour -> g
    java.lang.String diamondsColour -> h
    71:74:void fireAppearancePreferencesChange() -> b
    79:80:void refresh() -> a
    84:103:void setPaneOneText() -> d
help.RulesVectropyChallenging -> a.l:
    java.lang.String panelName -> a
    javax.swing.JTextPane title -> b
    javax.swing.JTextPane paneOne -> c
    javax.swing.JTextPane[] textFields -> d
help.RulesVectropyIntroduction -> a.m:
    java.lang.String panelName -> a
    javax.swing.JTextPane title -> b
    javax.swing.JTextPane paneOne -> c
    javax.swing.JTextPane[] textFields -> d
help.ToolsGameplaySettings -> a.n:
    java.lang.String panelName -> a
    javax.swing.JTextPane title -> b
    javax.swing.JLabel bulletThree -> c
    javax.swing.JLabel bulletFour -> d
    javax.swing.JLabel playBlindImage -> e
    javax.swing.JTextPane txtpnOneTitle -> f
    javax.swing.JTextPane txtpnOneExplanation -> g
    javax.swing.JTextPane txtpnTwoTitle -> h
    javax.swing.JTextPane txtpnTwoExplanation -> i
    javax.swing.JTextPane txtpnThreeTitle -> j
    javax.swing.JTextPane txtpnThreeExplanation -> k
    javax.swing.JTextPane txtpnTickbox -> l
    javax.swing.JTextPane txtpnFourTitle -> m
    javax.swing.JTextPane txtpnIfThisIs -> n
    javax.swing.JTextPane txtpnHandicap_1 -> o
    javax.swing.JTextPane txtpnWithThisTicked_1 -> p
    javax.swing.JTextPane[] textFields -> q
    javax.swing.JPanel blindPanel -> r
    javax.swing.JPanel panel -> s
    javax.swing.JLabel label -> t
    144:159:void refresh() -> a
help.ToolsReplayViewer -> a.o:
    java.lang.String panelName -> a
    javax.swing.JTextPane title -> b
    javax.swing.JLabel lblReplayTable -> c
    javax.swing.JTextPane txtpnIntroduction -> d
    javax.swing.JTextPane txtpnSavingReplays1 -> e
    javax.swing.JTextPane titleSavingReplays -> f
    javax.swing.JTextPane txtpnSavingReplays2 -> g
    javax.swing.JLabel lblSaveReplaysOption -> h
    javax.swing.JTextPane titleUsingTheReplayViewer -> i
    javax.swing.JTextPane txtpnUsingTheReplayViewer1 -> j
    javax.swing.JTextPane txtpnUsingTheReplayViewer2 -> k
    javax.swing.JTextPane titleFilteringAndOrdering -> l
    javax.swing.JTextPane txtpnFilteringAndOrdering1 -> m
    javax.swing.JTextPane txtpnFilteringAndOrdering2 -> n
    javax.swing.JTextPane titleImportingExporting -> o
    javax.swing.JTextPane txtpnImportingExporting -> p
    javax.swing.JTextPane[] textFields -> q
    javax.swing.JPanel panel_2 -> r
main.EntropyMain -> main.EntropyMain:
    int BIND_PORT_NUMBER -> a
    java.net.ServerSocket instanceBind -> b
    35:90:void main(java.lang.String[]) -> main
    94:104:void parseProgramArgument(java.lang.String) -> a
    108:137:void setLookAndFeel() -> a
    141:152:void setInstanceNumber() -> b
    158:166:boolean bindOnPort(int) -> a
object.AchievementBadge -> b.a:
    java.lang.String registryLocation -> a
    java.lang.String name -> b
    java.lang.String explanation -> c
    java.lang.String description -> d
    javax.swing.ImageIcon earnedIcon -> e
    33:33:java.lang.String toString() -> toString
    38:38:boolean isEarned() -> a
    43:43:java.lang.String getName() -> getName
    47:47:java.lang.String getExplanation() -> b
    51:51:java.lang.String getDescription() -> c
    55:55:javax.swing.ImageIcon getEarnedIcon() -> d
    59:59:java.lang.String getRegistryLocation() -> e
object.ApiStrategy -> b.b:
    java.lang.String name -> a
    boolean entropy -> b
    boolean vectropy -> c
    int portNumber -> d
    java.lang.String messageType -> e
    java.lang.String error -> f
    17:19:java.lang.Object[] getTableModelRow() -> a
    24:24:boolean isEnabled() -> b
    29:39:java.lang.String getGameModeDesc() -> i
    47:47:java.lang.String getName() -> c
    51:52:void setName(java.lang.String) -> a
    55:55:boolean getEntropy() -> d
    59:60:void setEntropy(boolean) -> a
    63:63:boolean getVectropy() -> e
    67:68:void setVectropy(boolean) -> b
    71:71:int getPortNumber() -> f
    75:76:void setPortNumber(int) -> a
    79:79:java.lang.String getMessageType() -> g
    83:84:void setMessageType(java.lang.String) -> b
    87:87:java.lang.String getError() -> h
    91:92:void setError(java.lang.String) -> c
object.Bid -> b.c:
    java.lang.String XML_DELIM_CHAR -> a
    java.lang.String BID_XML_VERSION -> b
    object.Player player -> c
    java.lang.String cardToReveal -> d
    boolean blind -> e
    boolean higherThan(object.Bid) -> a
    boolean isOverAchievementThreshold() -> a
    boolean isPerfect(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],int,boolean,boolean) -> a
    boolean isOverbid(java.util.concurrent.ConcurrentHashMap,int) -> a
    boolean isOverbid(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],int) -> a
    java.lang.String getXmlStringPrefix() -> b
    java.lang.String toXmlStringSpecific() -> c
    void populateFromXmlStringSpecific(java.util.ArrayList,boolean,boolean) -> a
    java.lang.String toHtmlStringSpecific() -> d
    java.lang.String toStringSpecific() -> e
    void populateXmlTag(org.w3c.dom.Element) -> a
    50:80:java.lang.String toXmlString() -> f
    86:91:boolean isPerfect(java.util.concurrent.ConcurrentHashMap,int,boolean,boolean) -> a
    96:96:boolean isChallenge() -> g
    100:100:boolean isIllegal() -> h
    105:105:boolean hasLeft() -> i
    109:109:object.Player getPlayer() -> j
    113:114:void setPlayer(object.Player) -> a
    117:117:java.lang.String getCardToReveal() -> k
    121:122:void setCardToReveal(java.lang.String) -> a
    125:125:boolean isBlind() -> l
    129:130:void setBlind(boolean) -> a
    134:162:object.Bid factoryFromXmlString(java.lang.String,boolean,boolean) -> a
    166:177:object.Bid getEmptyBidBasedOnPrefix(java.lang.String) -> b
    183:190:java.lang.String toString() -> toString
    197:228:java.lang.String toHtmlString() -> m
object.BidListCellRenderer -> b.d:
    15:19:java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) -> getListCellRendererComponent
object.CardLabel -> b.e:
    java.lang.String card -> a
    boolean faceUp -> b
    boolean faded -> c
    19:46:void refreshIcon() -> a
    53:53:java.lang.String getCard() -> b
    57:58:void setCard(java.lang.String) -> a
    61:61:boolean isFaceUp() -> c
    65:66:void setFaceUp(boolean) -> a
    69:69:boolean isFaded() -> d
    73:74:void setFaded(boolean) -> b
object.ChallengeBid -> b.f:
    9:9:java.lang.String toStringSpecific() -> e
    15:15:java.lang.String toHtmlStringSpecific() -> d
    24:24:java.lang.String getXmlStringPrefix() -> b
    30:30:boolean equals(java.lang.Object) -> equals
object.ComboBoxItem -> b.g:
    java.lang.Object visibleData -> a
    java.lang.Object hiddenData -> b
    boolean enabled -> c
    17:17:java.lang.Object getVisibleData() -> a
    21:21:java.lang.Object getHiddenData() -> b
    26:26:boolean isEnabled() -> c
    30:31:void setEnabled(boolean) -> a
    36:41:java.lang.String toString() -> toString
object.DisabledComboBoxModel -> b.h:
    20:35:void setSelectedItem(java.lang.Object) -> setSelectedItem
    38:45:void setSelectedComboBoxItem(object.ComboBoxItem) -> a
object.EntropyBid -> b.i:
    int bidSuitCode -> b
    int bidAmount -> c
    38:38:int getBidSuitCode() -> n
    43:43:int getBidAmount() -> o
    49:49:java.lang.String toStringSpecific() -> e
    55:62:java.lang.String toHtmlStringSpecific() -> d
    67:71:int hashCode() -> hashCode
    76:87:boolean equals(java.lang.Object) -> equals
    96:114:boolean higherThan(object.Bid) -> a
    121:124:boolean isPerfect(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],int,boolean,boolean) -> a
    129:130:boolean isOverbid(java.util.concurrent.ConcurrentHashMap,int) -> a
    136:137:boolean isOverbid(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],int) -> a
    143:143:java.lang.String getXmlStringPrefix() -> b
    149:149:java.lang.String toXmlStringSpecific() -> c
    156:161:void populateFromXmlStringSpecific(java.util.ArrayList,boolean,boolean) -> a
    166:168:void populateXmlTag(org.w3c.dom.Element) -> a
    173:173:boolean isOverAchievementThreshold() -> a
    181:183:object.EntropyBid factoryFromXmlTag(org.w3c.dom.Element) -> b
object.EntropyClientDebugExtension -> b.j:
    13:19:void exceptionCaught(boolean) -> a
    24:25:void unableToEmailLogs() -> a
    30:31:void sendEmail(java.lang.String,java.lang.String) -> a
object.ExtendedConcurrentHashMap -> b.k:
    15:25:object.ExtendedConcurrentHashMap factoryCopy() -> a
    30:40:java.lang.Object getOnlyKey() -> b
    45:55:void removeAllWithValue(java.lang.Object) -> a
object.FakeBid -> b.l:
    14:15:boolean higherThan(object.Bid) -> a
    23:24:boolean isPerfect(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],int,boolean,boolean) -> a
    30:31:boolean isOverbid(java.util.concurrent.ConcurrentHashMap,int) -> a
    38:39:boolean isOverbid(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],int) -> a
    45:46:boolean isOverAchievementThreshold() -> a
    52:53:void populateXmlTag(org.w3c.dom.Element) -> a
    58:58:java.lang.String toXmlStringSpecific() -> c
    65:65:void populateFromXmlStringSpecific(java.util.ArrayList,boolean,boolean) -> a
object.FlagImage -> b.m:
    java.lang.String toolTipText -> a
    javax.swing.ImageIcon icon -> b
    int numberOfIcons -> c
    java.lang.String codeStr -> d
    24:63:void appendImage(javax.swing.ImageIcon,java.lang.String) -> a
    67:75:void appendToolTip(java.lang.String) -> a
    79:79:java.lang.String getToolTipText() -> a
    83:83:javax.swing.ImageIcon getIcon() -> b
    87:87:java.lang.String getOrderStr() -> c
    91:91:java.lang.String getCodeStr() -> d
object.IllegalBid -> b.n:
    8:8:java.lang.String toStringSpecific() -> e
    14:14:java.lang.String toHtmlStringSpecific() -> d
    20:20:java.lang.String getXmlStringPrefix() -> b
    26:26:boolean equals(java.lang.Object) -> equals
object.LeftBid -> b.o:
    9:9:java.lang.String toStringSpecific() -> e
    15:15:java.lang.String toHtmlStringSpecific() -> d
    21:21:java.lang.String getXmlStringPrefix() -> b
    27:27:boolean equals(java.lang.Object) -> equals
object.LimitedDocument -> b.p:
    int limit -> a
    20:39:void insertString(int,java.lang.String,javax.swing.text.AttributeSet) -> insertString
object.OnlineMessage -> b.q:
    java.lang.String colour -> a
    java.lang.String text -> b
    java.lang.String username -> c
    18:18:java.lang.String getColour() -> a
    22:22:java.lang.String getText() -> b
    26:26:java.lang.String getUsername() -> c
    32:32:java.lang.String toString() -> toString
object.OnlineUsername -> b.r:
    java.lang.String MOBILE_PHONE_UNICODE -> a
    java.lang.String username -> b
    java.lang.String colour -> c
    int achievementCount -> d
    boolean mobile -> e
    22:22:java.lang.String getUsername() -> a
    26:26:java.lang.String getColour() -> b
    30:30:int getAchievementCount() -> c
    34:34:boolean getMobile() -> d
    40:47:java.lang.String toString() -> toString
    52:58:int hashCode() -> hashCode
    63:82:boolean equals(java.lang.Object) -> equals
object.Player -> b.s:
    java.lang.String name -> a
    int numberOfCards -> b
    int cardsToSubtract -> c
    boolean enabled -> d
    java.lang.String strategy -> e
    java.lang.String[] hand -> f
    java.util.ArrayList revealedCards -> g
    int playerNumber -> h
    java.lang.String colour -> i
    30:34:void saveHandToRegistry(java.util.prefs.Preferences,java.lang.String) -> a
    38:44:void saveRevealedCardsToRegistry(java.util.prefs.Preferences,java.lang.String) -> b
    49:62:void populateHandFromRegistry(java.util.prefs.Preferences,java.lang.String,java.lang.String,java.lang.String) -> a
    66:66:int getActualNumberOfCards() -> a
    71:73:void doSubtraction() -> b
    77:79:void resetHand() -> c
    83:89:boolean disable() -> d
    98:98:boolean hasMoreCardsToReveal() -> e
    102:111:boolean handContainsCard(java.lang.String) -> a
    115:125:java.util.ArrayList getCardsNotOnShow() -> f
    129:130:void addRevealedCard(java.lang.String) -> b
    133:134:void setRevealedCards(java.util.ArrayList) -> a
    138:138:boolean isApiStrategy() -> g
    143:143:java.lang.String getName() -> h
    147:148:void setName(java.lang.String) -> c
    151:151:int getNumberOfCards() -> i
    155:156:void setNumberOfCards(int) -> a
    159:159:int getCardsToSubtract() -> j
    163:164:void setCardsToSubtract(int) -> b
    167:167:boolean isEnabled() -> k
    171:172:void setEnabled(boolean) -> a
    175:175:java.lang.String getStrategy() -> l
    179:180:void setStrategy(java.lang.String) -> d
    183:183:java.lang.String[] getHand() -> m
    187:189:void setHand(java.lang.String[]) -> a
    192:192:java.lang.String getColour() -> n
    196:196:int getPlayerNumber() -> o
    200:200:java.util.ArrayList getRevealedCards() -> p
    206:206:java.lang.String toString() -> toString
object.PlayerLabel -> b.t:
    java.lang.String colour -> a
    java.lang.String playerName -> b
    19:19:java.lang.String getColour() -> a
    23:25:void setColour(java.lang.String) -> a
    29:29:java.lang.String getPlayerName() -> b
    35:37:void setText(java.lang.String) -> setText
object.ProgressBar -> b.u:
    int min -> a
    int max -> b
    int startValue -> c
    23:33:void resetProgress() -> b
    37:47:void incrementProgressLater() -> a
    8:8:int access$0(object.ProgressBar) -> a
    9:9:int access$1(object.ProgressBar) -> b
    10:10:int access$2(object.ProgressBar) -> c
object.ProgressBar$1 -> b.u$1:
    object.ProgressBar this$0 -> a
    28:31:void run() -> run
object.ProgressBar$2 -> b.u$2:
    object.ProgressBar this$0 -> a
    42:45:void run() -> run
object.PulsingTextLabel -> b.v:
    int saturationIndex -> a
    float[] saturationValues -> b
    javax.swing.Timer pulseTimer -> c
    27:38:void buildSaturationValues() -> c
    43:63:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    67:69:void stopPulsing() -> a
    73:75:void startPulsing() -> b
    14:14:int access$0(object.PulsingTextLabel) -> a
    14:14:void access$1(object.PulsingTextLabel,int) -> a
    15:15:float[] access$2(object.PulsingTextLabel) -> b
object.PulsingTextLabel$1 -> b.v$1:
    object.PulsingTextLabel this$0 -> a
    50:60:void run() -> run
object.ReplayTable -> b.w:
    int INDEX_OF_DATETIME_COLUMN -> a
    int INDEX_OF_NAME_COLUMN -> b
    int INDEX_OF_MODE_COLUMN -> c
    int INDEX_OF_ROOM_NAME_COLUMN -> d
    int INDEX_OF_ROUNDS_COLUMN -> e
    int INDEX_OF_PLAYERS_COLUMN -> f
    int INDEX_OF_CARDS_COLUMN -> g
    int INDEX_OF_FLAGS_COLUMN -> h
    int INDEX_OF_FILENAME_COLUMN -> i
    int INDEX_OF_COMPLETED_COLUMN -> j
    int INDEX_OF_WON_COLUMN -> k
    java.util.HashMap rowWrapperByFileName -> l
    java.lang.String folder -> m
    screen.ReplayFilterPanel filterPanel -> n
    javax.swing.JLabel countLabel -> o
    javax.swing.table.DefaultTableModel model -> p
    java.util.ArrayList replayFilenames -> q
    java.util.ArrayList replayFilenamesFiltered -> r
    java.util.ArrayList corruptFiles -> s
    object.ReplayTableCentreRenderer centreRenderer -> t
    83:86:boolean init() -> a
    90:94:void refreshTable() -> b
    97:102:void refreshTable(boolean) -> a
    106:140:void resetTableModel() -> f
    144:151:void setComparators() -> g
    156:186:void stripOutHiddenAndRemovedColumns() -> h
    190:233:void fillReplayList() -> i
    237:245:void promptToDeleteCorruptReplays(java.lang.String) -> b
    249:260:void deleteCorruptReplaysAndShowResult(java.util.ArrayList) -> a
    264:286:void populateFilteredList(boolean) -> b
    290:378:boolean includeRowBasedOnFilters(util.ReplayRowWrapper) -> a
    384:400:void fillTableModelFromFilteredList() -> j
    404:415:util.ReplayRowWrapper getRowWrapperFromCache(java.lang.String,java.lang.String) -> a
    420:439:void addListeners() -> k
    443:486:void deleteReplays() -> l
    490:497:boolean confirmDeletion(int) -> b
    504:516:boolean deleteWithCatch(java.lang.String,java.lang.String) -> b
    521:523:void replayAdded(java.lang.String) -> a
    527:534:java.lang.String getSelectedFilename() -> c
    539:539:java.lang.String getFolder() -> d
    546:571:void showReplay() -> e
    575:590:boolean validateReplayContents(java.lang.String) -> c
    596:610:void dealWithCorruptReplay(java.lang.String,java.lang.String,java.lang.String) -> a
    614:625:boolean convertReplayToLatestVersion(java.lang.String,java.lang.String,int) -> a
    630:647:java.awt.Color getColorForRow(int) -> a
    654:654:java.lang.String toString() -> toString
    660:664:void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    667:667:void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    669:669:void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    671:671:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    673:673:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    441:441:void access$0(object.ReplayTable) -> a
object.ReplayTable$1 -> b.w$1:
    object.ReplayTable this$0 -> a
    426:427:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
object.ReplayTable$2 -> b.w$2:
    object.ReplayTable this$0 -> a
    436:437:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
object.ReplayTableCentreRenderer -> b.x:
    20:36:java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
object.RewardStar -> b.y:
    int threshold -> a
    java.lang.String hoverDesc -> b
    21:21:boolean isUnlocked(int) -> a
    26:26:java.lang.String getHoverDesc() -> a
    32:38:void setIcon(javax.swing.Icon) -> setIcon
    43:49:void setToolTipText(java.lang.String) -> setToolTipText
object.RoomTable -> b.z:
    java.awt.Font TABLE_FONT -> a
    java.lang.String CODE_ILLEGAL -> b
    java.lang.String CODE_JOKERS -> c
    java.lang.String CODE_INCLUDE_MOONS_AND_STARS -> d
    java.lang.String CODE_INCLUDE_STARS -> e
    java.lang.String CODE_INCLUDE_MOONS -> f
    java.lang.String CODE_NEGATIVE_JACKS -> g
    java.lang.String CODE_CARD_REVEAL -> h
    int INDEX_OF_NAME_COLUMN -> i
    int INDEX_OF_MODE_COLUMN -> j
    int INDEX_OF_PLAYERS_COLUMN -> k
    int INDEX_OF_OBSERVERS_COLUMN -> l
    int INDEX_OF_FLAGS_COLUMN -> m
    online.screen.EntropyLobby lobby -> n
    javax.swing.table.DefaultTableModel model -> o
    74:80:void reset() -> a
    84:107:void setTableModel() -> c
    113:123:void setRenderersAndSorters() -> d
    127:130:void synchroniseRooms(java.util.List) -> a
    134:146:void addNewRooms(java.util.List) -> b
    150:160:void removeClosedRooms(java.util.List) -> c
    164:188:void updateRooms(java.util.List) -> d
    192:202:boolean modelContainsRoom(java.lang.String) -> a
    207:218:object.RoomWrapper getListRoomForName(java.util.List,java.lang.String) -> a
    223:231:java.lang.Object[] factoryRowForRoom(object.RoomWrapper) -> a
    236:293:object.FlagImage createFlagsForRoom(object.RoomWrapper) -> b
    298:324:void joinRoom() -> e
    328:333:void refresh(boolean,int) -> a
    338:342:void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    344:344:void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    346:346:void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    348:348:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    350:350:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    44:44:int access$0() -> b
    50:50:online.screen.EntropyLobby access$1(object.RoomTable) -> a
    296:296:void access$2(object.RoomTable) -> b
object.RoomTable$1 -> b.z$1:
    object.RoomTable this$0 -> a
    54:54:boolean isCellEditable(int,int) -> isCellEditable
object.RoomTable$2 -> b.z$2:
    object.RoomTable this$0 -> a
    77:77:boolean isCellEditable(int,int) -> isCellEditable
object.RoomTable$3 -> b.z$3:
    object.RoomTable this$0 -> a
    104:105:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
object.RoomTable$RoomTableFilter -> b.z$a:
    boolean includeFull -> b
    int mode -> c
    object.RoomTable this$0 -> a
    366:389:boolean include(javax.swing.RowFilter$Entry) -> include
object.RoomWrapper -> b.A:
    java.lang.String roomName -> a
    int mode -> b
    int players -> c
    java.util.List currentPlayers -> d
    java.util.List observers -> e
    int jokerQuantity -> f
    int jokerValue -> g
    boolean includeMoons -> h
    boolean includeStars -> i
    boolean negativeJacks -> j
    boolean illegalAllowed -> k
    boolean cardReveal -> l
    41:41:java.lang.String getRoomName() -> a
    45:45:int getMode() -> b
    49:49:java.lang.String getModeDesc() -> c
    53:53:int getPlayers() -> d
    58:58:java.util.ArrayList getCurrentPlayers() -> e
    62:62:int getCurrentPlayerCount() -> f
    66:67:void setCurrentPlayers(java.util.List) -> a
    70:70:java.util.ArrayList getObservers() -> g
    74:74:int getObserverCount() -> h
    78:79:void setObservers(java.util.List) -> b
    83:85:java.util.ArrayList getAllUsersInRoom() -> i
    90:90:int getJokerQuantity() -> j
    94:95:void setJokerQuantity(int) -> a
    98:98:int getJokerValue() -> k
    102:103:void setJokerValue(int) -> b
    106:106:boolean getIncludeMoons() -> l
    110:111:void setIncludeMoons(boolean) -> a
    114:114:boolean getIncludeStars() -> m
    118:119:void setIncludeStars(boolean) -> b
    122:122:boolean getNegativeJacks() -> n
    126:127:void setNegativeJacks(boolean) -> c
    130:130:boolean getIllegalAllowed() -> o
    134:135:void setIllegalAllowed(boolean) -> d
    138:138:boolean getCardReveal() -> p
    142:143:void setCardReveal(boolean) -> e
    150:160:boolean isInSync(object.RoomWrapper) -> a
    166:166:java.lang.String toString() -> toString
object.SuitWrapper -> b.B:
    java.lang.String twoColour -> a
    java.lang.String fourColour -> b
    java.lang.String unicodeSymbol -> c
    java.lang.String name -> d
    java.lang.String suitShort -> e
    28:35:java.lang.String getColour() -> a
    39:39:java.lang.String getUnicodeSymbol() -> b
    43:43:java.lang.String getName() -> c
    47:47:java.lang.String getSuitShort() -> d
object.VectropyBid -> b.C:
    int clubs -> b
    int diamonds -> c
    int hearts -> d
    int moons -> e
    int spades -> f
    int stars -> g
    boolean includeMoons -> h
    boolean includeStars -> i
    46:56:int hashCode() -> hashCode
    61:84:boolean equals(java.lang.Object) -> equals
    89:89:int getClubs() -> n
    93:93:int getDiamonds() -> o
    97:97:int getHearts() -> p
    101:101:int getMoons() -> q
    105:105:int getSpades() -> r
    109:109:int getStars() -> s
    114:125:int getTotal() -> t
    130:162:object.VectropyBid incrementSuitAndGet(int) -> a
    168:168:java.lang.String getXmlStringPrefix() -> b
    174:190:java.lang.String toXmlStringSpecific() -> c
    197:215:void populateFromXmlStringSpecific(java.util.ArrayList,boolean,boolean) -> a
    220:234:java.lang.String toStringSpecific() -> e
    240:240:java.lang.String toHtmlStringSpecific() -> d
    249:262:boolean higherThan(object.Bid) -> a
    269:281:boolean isPerfect(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],int,boolean,boolean) -> a
    287:287:boolean isOverbid(java.util.concurrent.ConcurrentHashMap,int) -> a
    294:294:boolean isOverbid(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],int) -> a
    300:315:void populateXmlTag(org.w3c.dom.Element) -> a
    320:320:boolean isOverAchievementThreshold() -> a
    328:345:object.VectropyBid factoryFromXmlTag(org.w3c.dom.Element,boolean,boolean) -> a
online.screen.AccountSettingsDialog -> online.screen.a:
    java.lang.String username -> a
    java.lang.String email -> b
    javax.swing.JTextField textFieldUsername -> c
    javax.swing.JTextField textFieldEmail -> d
    javax.swing.JPanel okCancelPanel -> e
    javax.swing.JButton btnOk -> f
    javax.swing.JButton btnChangePassword -> g
    javax.swing.JButton btnCancel -> h
    84:86:void init() -> b
    90:104:boolean valid() -> c
    109:126:void saveNewAccountDetails() -> d
    130:134:void emailChangedSuccessfully() -> a
    139:163:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    167:175:void disposeLater() -> e
online.screen.AccountSettingsDialog$1 -> online.screen.a$1:
    online.screen.AccountSettingsDialog this$0 -> a
    172:173:void run() -> run
online.screen.ChangePasswordDialog -> online.screen.b:
    java.lang.String username -> a
    boolean allowCancel -> b
    javax.swing.JLabel lblCurrentPassword -> c
    javax.swing.JPasswordField passwordFieldOld -> d
    javax.swing.JLabel lblNewPassword -> e
    javax.swing.JPasswordField passwordFieldNew -> f
    javax.swing.JLabel lblConfirmNewPassword -> g
    javax.swing.JPasswordField passwordFieldConfirmNew -> h
    javax.swing.JPanel buttonPanel -> i
    javax.swing.JButton btnOk -> j
    javax.swing.JButton btnCancel -> k
    87:93:void init() -> b
    97:135:boolean valid() -> c
    140:156:void sendChangePasswordRequest() -> d
    161:177:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    181:189:void disposeLater() -> a
online.screen.ChangePasswordDialog$1 -> online.screen.b$1:
    online.screen.ChangePasswordDialog this$0 -> a
    186:187:void run() -> run
online.screen.ConnectingDialog -> online.screen.c:
    28:38:void showDialog() -> a
    42:52:void dismissDialog() -> b
online.screen.ConnectingDialog$1 -> online.screen.c$1:
    online.screen.ConnectingDialog this$0 -> a
    33:34:void run() -> run
online.screen.ConnectingDialog$2 -> online.screen.c$2:
    online.screen.ConnectingDialog this$0 -> a
    47:48:void run() -> run
online.screen.EntropyLobby -> online.screen.d:
    java.lang.String LOBBY_ID -> a
    java.util.Map hmGameRoomByRoomName -> b
    java.util.Map hmRoomByRoomName -> c
    javax.swing.DefaultListModel usernamesModel -> d
    online.screen.EntropyLobby$UsernameRenderer usernameRenderer -> e
    java.lang.String username -> f
    java.lang.String email -> g
    javax.swing.JScrollPane roomsScrollPane -> h
    javax.swing.JScrollPane usersScrollPane -> i
    javax.swing.JList onlineUserList -> j
    object.RoomTable roomTable -> k
    javax.swing.JPanel rightPanel -> l
    online.screen.OnlineStatsPanel statsPanel -> m
    javax.swing.JPanel panelUsersOnline -> n
    javax.swing.JLabel lblUsersOnline -> o
    javax.swing.JPanel centerPanel -> p
    javax.swing.JPanel northPanel -> q
    javax.swing.JCheckBox chckbxShowFull -> r
    javax.swing.JRadioButton rdbtnEntropy -> s
    javax.swing.JRadioButton rdbtnVectropy -> t
    javax.swing.JRadioButton rdbtnAll -> u
    javax.swing.JPanel filterPanel -> v
    javax.swing.JPanel settingsPanel -> w
    javax.swing.JButton btnSettings -> z
    online.screen.OnlineChatPanel chatPanel -> A
    169:204:void init() -> a
    208:210:void initFilterPanel() -> g
    214:220:online.screen.OnlineChatPanel getChatPanelForRoomName(java.lang.String) -> a
    225:225:online.screen.OnlineStatsPanel getOnlineStatsPanel() -> b
    230:230:object.RoomWrapper getRoomForName(java.lang.String) -> b
    235:235:online.screen.GameRoom getGameRoomForName(java.lang.String) -> c
    240:242:void removeRoom(java.lang.String) -> d
    246:247:void addOrUpdateRoom(java.lang.String,object.RoomWrapper) -> a
    251:256:online.screen.GameRoom createGameRoom(object.RoomWrapper) -> a
    261:269:void synchroniseRooms(java.util.List) -> a
    273:285:boolean otherRoomsAreVisible() -> h
    290:298:void closeRooms() -> i
    302:315:void initChatPanelIfNecessary() -> j
    319:329:void synchUsernamesInAwtThread(java.util.List) -> b
    333:364:void synchUsernames(java.util.List) -> c
    368:370:void setUsername(java.lang.String) -> e
    373:373:java.lang.String getUsername() -> c
    377:377:java.lang.String getEmail() -> d
    381:382:void setEmail(java.lang.String) -> f
    386:400:boolean confirmExit() -> e
    405:417:void fireAppearancePreferencesChange() -> f
    421:433:void refreshRoomTable() -> k
    437:453:void exit(boolean) -> a
    456:456:void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    458:458:void windowClosed(java.awt.event.WindowEvent) -> windowClosed
    462:466:void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    468:468:void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    470:470:void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    472:472:void windowIconified(java.awt.event.WindowEvent) -> windowIconified
    474:474:void windowOpened(java.awt.event.WindowEvent) -> windowOpened
    479:492:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    151:151:object.RoomTable access$0(online.screen.EntropyLobby) -> a
    165:165:online.screen.OnlineChatPanel access$1(online.screen.EntropyLobby) -> b
    206:206:void access$2(online.screen.EntropyLobby) -> c
    66:66:void access$3(online.screen.EntropyLobby,javax.swing.DefaultListModel) -> a
    150:150:javax.swing.JList access$4(online.screen.EntropyLobby) -> d
    66:66:javax.swing.DefaultListModel access$5(online.screen.EntropyLobby) -> e
    67:67:online.screen.EntropyLobby$UsernameRenderer access$6(online.screen.EntropyLobby) -> f
    153:153:online.screen.OnlineStatsPanel access$7(online.screen.EntropyLobby) -> g
    331:331:void access$8(online.screen.EntropyLobby,java.util.List) -> a
online.screen.EntropyLobby$1 -> online.screen.d$1:
    online.screen.EntropyLobby this$0 -> a
    174:184:void run() -> run
online.screen.EntropyLobby$2 -> online.screen.d$2:
    online.screen.EntropyLobby this$0 -> a
    java.util.List val$rooms -> b
    266:267:void run() -> run
online.screen.EntropyLobby$3 -> online.screen.d$3:
    online.screen.EntropyLobby this$0 -> a
    java.util.List val$usernamesFromServer -> b
    324:325:void run() -> run
online.screen.EntropyLobby$UsernameRenderer -> online.screen.d$a:
    501:511:java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) -> getListCellRendererComponent
online.screen.EntropyRoom -> online.screen.e:
    boolean earnedCaveman -> eD
    boolean earnedBurglar -> eE
    boolean earnedLion -> eF
    boolean earnedWerewolf -> eG
    boolean earnedGardener -> eH
    boolean earnedSpaceman -> eI
    34:41:void doSpecificResetGameVariables() -> q
    46:48:void resetBids() -> r
    53:71:void updateScreenForChallengeOrIllegal() -> s
    76:80:void saveModeSpecificVariablesForReplay() -> t
    85:122:void bidMadeSpecific(object.Bid) -> a
online.screen.GameRoom -> online.screen.f:
    int MAX_NUMBER_OF_PLAYERS -> eD
    int ADJUSTED_PLAYER_NUMBER_ME -> eE
    java.lang.String gameId -> eF
    java.lang.String username -> eG
    boolean observer -> m
    int playerNumber -> n
    int playerNumberLocal -> o
    int totalNumberOfCards -> p
    boolean gameInProgress -> eH
    int roundNumber -> eI
    boolean playBlind -> eJ
    boolean hasActedBlindThisGame -> eK
    boolean earnedPsychic -> q
    boolean hasOverbid -> r
    boolean seenRoundStart -> eL
    object.Bid lastBid -> s
    java.util.concurrent.ConcurrentHashMap hmPlayerByAdjustedPlayerNumber -> eM
    java.util.concurrent.ConcurrentHashMap hmHandByAdjustedPlayerNumber -> t
    java.util.concurrent.ConcurrentHashMap hmBidByPlayerNumber -> u
    int personToStartLocal -> eN
    int personToStart -> eO
    int lastPlayerToAct -> v
    online.screen.OnlineChatPanel chatPanel -> eP
    java.util.prefs.Preferences replay -> w
    screen.ReplayDialog replayDialog -> z
    screen.BidPanel bidPanel -> A
    javax.swing.JSplitPane splitPane -> eQ
    javax.swing.JPanel leftPane -> eR
    javax.swing.JPanel leftPaneSouth -> B
    javax.swing.JPanel rightPane -> eS
    screen.HandPanelMk2 handPanel -> C
    javax.swing.JScrollPane scrollPane -> eT
    javax.swing.DefaultListModel listmodel -> eU
    javax.swing.JList bidBox -> eV
    javax.swing.JPanel rightCenter -> eW
    javax.swing.JTextPane lblResult -> eX
    javax.swing.JPanel panelInformation -> eY
    object.PulsingTextLabel lblGameInformation -> eZ
    javax.swing.JPanel panelHistory -> fa
    javax.swing.JLabel lblBidHistory -> fb
    javax.swing.JButton btnReplay -> fc
    javax.swing.JPanel panel_1 -> fd
    javax.swing.JButton btnStandUp -> fe
    javax.swing.JCheckBox chckbxStandUpAfter -> ff
    javax.swing.JTabbedPane tabbedPane -> fg
    javax.swing.JPanel panelInfo -> fh
    javax.swing.JTextPane textPaneInfo -> fi
    208:243:online.screen.GameRoom factoryCreate(object.RoomWrapper) -> b
    void updateScreenForChallengeOrIllegal() -> s
    void resetBids() -> r
    void doSpecificResetGameVariables() -> q
    void saveModeSpecificVariablesForReplay() -> t
    void bidMadeSpecific(object.Bid) -> a
    257:286:void setIcon() -> M
    290:309:void adjustSize() -> u
    313:324:void init(boolean) -> f
    328:344:void initPlayer() -> v
    348:362:void initObserver(boolean) -> g
    366:390:void resetVariables(boolean) -> k
    394:415:void setInfoText() -> N
    419:423:void resetGameVariables() -> O
    427:429:void initBidPanel() -> P
    433:442:void initHandPanel() -> w
    446:454:void enableBidPanel(boolean) -> h
    458:508:void synchronisePlayers(java.util.HashMap) -> a
    512:535:void addOrUpdatePlayer(int,java.lang.String) -> a
    539:562:void removePlayer(int) -> l
    566:567:boolean hasPlayerLeft(int) -> m
    572:591:void selectNextPlayer(int) -> c
    595:597:boolean playerIsEnabled(int) -> n
    602:603:void processChallenge(int) -> d
    606:607:void processIllegal(int) -> e
    610:624:void processChallengeOrIllegal(int,object.Bid) -> b
    628:636:void addBidToBidBox(int,object.Bid) -> c
    640:646:void showResult(java.lang.String) -> a
    653:700:int adjustForMe(int) -> f
    706:707:void sendGameInitialiseRequest() -> Q
    710:717:void sendGameInitialiseRequest(int) -> o
    721:723:void setHand(int,java.lang.String[]) -> a
    728:777:void startGame(int) -> g
    783:812:void startObserving(int,int) -> a
    816:817:void clearHands() -> x
    821:851:void handleBid(int,object.Bid) -> a
    855:892:void startRound(int) -> h
    896:898:void processEndOfGameFromServer(int) -> i
    901:919:void processEndOfGame(int) -> p
    923:931:void clearScreenAfterGameEnd() -> R
    935:962:void unlockAchievementsAndSaveReplay(int) -> q
    966:974:int adjustPersonToStart(int) -> r
    985:1006:void adjustPlayersBasedOnHands() -> S
    1010:1021:int getTotalFromHands() -> T
    1026:1031:void setObserver(boolean) -> i
    1034:1037:void setUsername(java.lang.String) -> b
    1040:1051:void setPlayerNumber(int) -> j
    1054:1054:int getRoundNumber() -> y
    1058:1059:void setRoundNumber(int) -> k
    1062:1062:java.lang.String getGameId() -> z
    1066:1067:void setGameId(java.lang.String) -> c
    1070:1070:javax.swing.DefaultListModel getListmodel() -> A
    1077:1123:void saveRoundForReplay() -> B
    1127:1178:void saveHands(int) -> s
    1184:1190:void deleteReplayNode() -> C
    1194:1194:java.lang.String getUsername() -> D
    1198:1198:boolean getSeenRoundStart() -> E
    1202:1202:online.screen.OnlineChatPanel getChatPanel() -> F
    1207:1211:void fireAppearancePreferencesChange() -> G
    1215:1216:java.lang.String getUnindexedRoomName(java.lang.String) -> e
    1221:1241:void startClosingWindow(boolean) -> j
    1245:1255:void closeWindow() -> H
    1258:1258:void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    1260:1260:void windowClosed(java.awt.event.WindowEvent) -> windowClosed
    1264:1265:void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    1267:1267:void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    1269:1269:void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    1271:1271:void windowIconified(java.awt.event.WindowEvent) -> windowIconified
    1273:1273:void windowOpened(java.awt.event.WindowEvent) -> windowOpened
    1278:1287:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    1291:1300:void viewReplay() -> U
    1304:1320:void standUp() -> V
    1324:1329:void waitingForPlayers() -> I
    1333:1352:void waitingForCountdown(long) -> a
    1356:1369:boolean bidHistoryContainsBid() -> J
    1375:1389:void requestFocus() -> requestFocus
    1398:1415:void bidMade(object.Bid) -> b
    1420:1435:void processPlayerBid() -> W
    1440:1444:void cardRevealed(java.lang.String) -> d
    1449:1458:void challengeMade() -> K
    1463:1472:void illegalCalled() -> L
online.screen.Leaderboard -> online.screen.g:
    java.awt.Font TABLE_FONT -> a
    java.lang.String START -> b
    java.lang.String END -> c
    int MIN_REFRESH_MILLIS -> d
    long lastRefreshMillis -> e
    javax.swing.JTabbedPane tabbedPane -> f
    javax.swing.JScrollPane scrollPaneEntropy -> g
    javax.swing.JTable tableEntropy -> h
    javax.swing.JScrollPane scrollPaneVectropy -> i
    javax.swing.JTable tableVectropy -> j
    javax.swing.JScrollPane scrollPaneAchievements -> k
    javax.swing.JTable tableAchievements -> l
    javax.swing.JPanel panelRefresh -> m
    javax.swing.JButton btnRefresh -> n
    javax.swing.JPanel panelGlobalStats -> o
    javax.swing.JLabel lblGamesPlayed -> p
    javax.swing.JLabel lblGameDuration -> q
    javax.swing.JLabel lblUsersOnline -> r
    javax.swing.JTable tableRoomStats -> s
    152:171:void setColours() -> b
    175:179:void setTableColours(javax.swing.JTable) -> a
    183:185:void init() -> a
    189:193:void setTableModels() -> c
    197:224:void setTableModelStats(javax.swing.JTable) -> b
    228:252:void setTableModelAchievements() -> d
    256:280:void setTableModelRoomStats() -> e
    284:296:void refresh() -> f
    302:313:void buildTablesFromResponse(java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
    317:324:void addRows(javax.swing.JTable,java.util.ArrayList) -> a
    329:385:void buildTablesFromResponseLater(org.w3c.dom.Element) -> a
    389:405:java.util.ArrayList getRoomStatsModel(org.w3c.dom.Element) -> b
    410:414:void clearModels() -> g
    418:424:void clearModel(javax.swing.JTable) -> c
    430:448:void addRow(java.lang.String,int,int,int,int,int,int,java.util.ArrayList) -> a
    452:458:java.lang.String formatWin(int) -> a
    464:470:java.lang.String formatLoss(int) -> b
    477:478:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    298:298:void access$0(online.screen.Leaderboard,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
online.screen.Leaderboard$1 -> online.screen.Leaderboard$1:
    online.screen.Leaderboard this$0 -> a
    160:160:void paintContentBorder(java.awt.Graphics,int,int) -> paintContentBorder
online.screen.Leaderboard$2 -> online.screen.g$1:
    online.screen.Leaderboard this$0 -> a
    200:200:boolean isCellEditable(int,int) -> isCellEditable
online.screen.Leaderboard$3 -> online.screen.g$2:
    online.screen.Leaderboard this$0 -> a
    231:231:boolean isCellEditable(int,int) -> isCellEditable
online.screen.Leaderboard$4 -> online.screen.g$3:
    online.screen.Leaderboard this$0 -> a
    259:259:boolean isCellEditable(int,int) -> isCellEditable
online.screen.Leaderboard$5 -> online.screen.g$4:
    online.screen.Leaderboard this$0 -> a
    java.lang.String val$totalGames -> b
    java.lang.String val$totalDurationFormatted -> c
    java.lang.String val$usersOnline -> d
    java.util.ArrayList val$roomStatsRows -> e
    java.util.ArrayList val$entropyRows -> f
    java.util.ArrayList val$vectropyRows -> g
    java.util.ArrayList val$achievementRows -> h
    379:381:void run() -> run
online.screen.LoginDialog -> online.screen.h:
    javax.swing.JLabel lblUsername -> a
    javax.swing.JTextField textFieldUsername -> b
    javax.swing.JLabel lblPassword -> c
    javax.swing.JPasswordField passwordField -> d
    javax.swing.JLabel lblCreateAccount -> e
    javax.swing.JLabel lblForgottenPassword -> f
    javax.swing.JButton btnLogin -> g
    javax.swing.JButton btnCancel -> h
    98:103:void init() -> a
    107:121:boolean valid() -> c
    126:149:void sendLoginMessage() -> d
    153:186:void resetPassword() -> e
    196:212:void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    216:217:void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    221:222:void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    224:224:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    226:226:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    234:250:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    254:262:void disposeLater() -> b
online.screen.LoginDialog$1 -> online.screen.h$1:
    online.screen.LoginDialog this$0 -> a
    259:260:void run() -> run
online.screen.NewAccountDialog -> online.screen.i:
    javax.swing.JLabel lblUsername -> a
    javax.swing.JTextField textFieldUsername -> b
    javax.swing.JLabel lblPassword -> c
    javax.swing.JPasswordField passwordField1 -> d
    javax.swing.JLabel lblConfirmPassword -> e
    javax.swing.JPasswordField passwordField2 -> f
    javax.swing.JButton btnOk -> g
    javax.swing.JButton btnCancel -> h
    javax.swing.JLabel lblEmail -> i
    javax.swing.JTextField textFieldEmail -> j
    95:101:void initFields() -> a
    105:150:boolean valid() -> c
    155:163:boolean validEmail(java.lang.String) -> a
    168:193:void sendNewAccountRequest() -> d
    201:217:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    221:229:void disposeLater() -> b
online.screen.NewAccountDialog$1 -> online.screen.i$1:
    online.screen.NewAccountDialog this$0 -> a
    226:227:void run() -> run
online.screen.OnlineChatPanel -> online.screen.j:
    java.lang.String username -> a
    java.lang.String roomId -> b
    java.lang.String colour -> c
    int wrapWidth -> d
    boolean initted -> e
    javax.swing.JScrollPane scrollPane -> f
    javax.swing.DefaultListModel listmodel -> g
    online.screen.OnlineChatPanel$OnlineMessageRenderer messageRenderer -> h
    javax.swing.JList chatBox -> i
    javax.swing.JTextField textField -> j
    73:78:void init() -> a
    82:84:void clear() -> b
    91:106:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    110:115:void updateChatBox(java.util.List) -> a
    119:130:void updateChatBox(object.OnlineMessage) -> a
    134:142:void scrollToBottom() -> c
    146:146:boolean getInitted() -> d
    151:152:void setUsername(java.lang.String) -> a
    156:157:void setColour(java.lang.String) -> b
    161:162:void setColourForPlayerNumber(int) -> a
    166:186:void saveRecentChat(java.util.prefs.Preferences,int) -> a
    190:191:void setWrapWidth(int) -> b
    221:223:void setBackgroundColour(java.awt.Color) -> a
    41:41:int access$0(online.screen.OnlineChatPanel) -> a
    66:66:javax.swing.DefaultListModel access$1(online.screen.OnlineChatPanel) -> b
    68:68:javax.swing.JList access$2(online.screen.OnlineChatPanel) -> c
online.screen.OnlineChatPanel$1 -> online.screen.j$1:
    online.screen.OnlineChatPanel this$0 -> a
    object.OnlineMessage val$message -> b
    124:126:void run() -> run
online.screen.OnlineChatPanel$2 -> online.screen.j$2:
    online.screen.OnlineChatPanel this$0 -> a
    139:140:void run() -> run
online.screen.OnlineChatPanel$OnlineMessageRenderer -> online.screen.j$a:
    online.screen.OnlineChatPanel this$0 -> a
    200:215:java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) -> getListCellRendererComponent
online.screen.OnlineStatsPanel -> online.screen.k:
    int DISPLAY_MODE_ENTROPY -> a
    int DISPLAY_MODE_VECTROPY -> b
    int DISPLAY_MODE_OVERALL -> c
    int displayMode -> d
    org.w3c.dom.Element responseElement -> e
    int twoPlayerWins -> f
    int twoPlayerLosses -> g
    int threePlayerWins -> h
    int threePlayerLosses -> i
    int fourPlayerWins -> j
    int fourPlayerLosses -> k
    javax.swing.JLabel lblModeSelection -> l
    javax.swing.JLabel lblTwoPlayerWins -> m
    javax.swing.JLabel lblTwoPlayerLosses -> n
    javax.swing.JLabel lblThreePlayerWins -> o
    javax.swing.JLabel lblThreePlayerLosses -> p
    javax.swing.JLabel lblFourPlayerWins -> q
    javax.swing.JLabel lblFourPlayerLosses -> r
    javax.swing.JLabel lblLeaderboardLink -> s
    163:165:void init() -> a
    169:179:void updateVariablesFromResponse(org.w3c.dom.Element) -> a
    183:189:void resetVariables() -> b
    193:218:void populateStats() -> c
    222:223:void addEntropyStats() -> d
    227:228:void addVectropyStats() -> e
    232:239:void addStats(java.lang.String) -> a
    243:261:void changeDisplayMode() -> f
    266:285:void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    290:299:void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    304:313:void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    319:319:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    325:325:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    191:191:void access$0(online.screen.OnlineStatsPanel) -> a
online.screen.OnlineStatsPanel$1 -> online.screen.k$1:
    online.screen.OnlineStatsPanel this$0 -> a
    176:177:void run() -> run
online.screen.TestHarness -> online.screen.l:
    javax.swing.JTextArea textPane -> a
    javax.swing.JButton btnSend -> b
    javax.swing.JCheckBox chckbxIgnoreResponse -> c
    javax.swing.JPanel panel_1 -> d
    javax.swing.JCheckBox chckbxEncrypt -> e
    javax.swing.JCheckBox chckbxRetry -> f
    javax.swing.JSpinner spinner -> g
    javax.swing.JLabel lblTimes -> h
    71:96:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
online.screen.VectropyRoom -> online.screen.m:
    boolean earnedMathematician -> eD
    29:31:void doSpecificResetGameVariables() -> q
    36:38:void resetBids() -> r
    43:54:void bidMadeSpecific(object.Bid) -> a
    59:67:void updateScreenForChallengeOrIllegal() -> s
    72:74:void saveModeSpecificVariablesForReplay() -> t
online.util.AbstractEntropyClient -> online.a.a:
    java.lang.String operatingSystem -> a
    boolean devMode -> b
    boolean justUpdated -> c
    int instanceNumber -> d
    online.util.AbstractEntropyClient entropyClient -> e
    long lastSentMessageMillis -> f
    java.util.ArrayList pendingMessages -> g
    java.lang.String getUsername() -> a
    boolean isOnline() -> b
    void sendAsyncInSingleThread(online.util.MessageSenderParams) -> a
    java.lang.String sendSyncOnDevice(online.util.MessageSender) -> a
    void handleResponse(java.lang.String,java.lang.String) -> a
    boolean isCommunicatingWithServer() -> c
    void finishServerCommunication() -> d
    void unableToConnect() -> e
    void connectionLost() -> f
    void goOffline() -> g
    43:43:boolean isAppleOs() -> h
    48:48:long getLastSentMessageMillis() -> i
    52:53:void setLastSentMessageMillis(long) -> a
    57:57:online.util.AbstractEntropyClient getInstance() -> j
    61:62:void setInstance(online.util.AbstractEntropyClient) -> a
    66:66:java.lang.String sendSync(org.w3c.dom.Document,boolean) -> a
    70:83:java.lang.String sendSync(org.w3c.dom.Document,boolean,int) -> a
    88:91:void startNotificationThreads() -> k
    95:98:void startNotificationThread(java.lang.String) -> a
    102:103:void addToPendingMessages(online.util.MessageSenderParams) -> b
    106:106:online.util.MessageSenderParams getNextMessageToSend() -> l
online.util.AccountUtil -> online.a.b:
    12:36:boolean validateEmail(java.lang.String) -> a
    41:57:boolean passwordsMatch(char[],char[]) -> a
    62:69:boolean passwordStrongEnough(char[]) -> a
online.util.ClientNotificationRunnable -> online.a.c:
    java.lang.String socketType -> a
    online.util.AbstractEntropyClient client -> b
    21:47:void run() -> run
online.util.DesktopEntropyClient -> online.a.d:
    13:13:java.lang.String getUsername() -> a
    19:19:boolean isOnline() -> b
    25:26:void handleResponse(java.lang.String,java.lang.String) -> a
    31:32:boolean isCommunicatingWithServer() -> c
    38:39:void finishServerCommunication() -> d
    44:47:void unableToConnect() -> e
    52:53:void connectionLost() -> f
    58:60:void goOffline() -> g
    65:70:void sendAsyncInSingleThread(online.util.MessageSenderParams) -> a
    82:82:java.lang.String sendSyncOnDevice(online.util.MessageSender) -> a
online.util.HeartbeatRunnable -> online.a.e:
    int SLEEP_TIME_MILLIS -> a
    int HEARTBEAT_THREADHOLD -> b
    online.screen.EntropyLobby lobby -> c
    24:48:void run() -> run
online.util.KeyGeneratorUtil -> online.a.f:
    19:31:javax.crypto.SecretKey generateSymmetricKey() -> a
    37:67:void generatePublicKey() -> b
online.util.MessageSender -> online.a.g:
    online.util.MessageSenderParams messageWrapper -> a
    java.lang.String encryptedResponseString -> b
    int currentRetries -> c
    online.util.AbstractEntropyClient client -> d
    46:59:void run() -> run
    63:128:java.lang.String sendMessage() -> a
    135:145:void sleepWithCatch() -> b
    149:185:java.lang.String retryOrStackTrace(java.lang.Throwable) -> a
    191:204:boolean isResponseIgnored(java.lang.String) -> a
online.util.MessageSenderParams -> online.a.h:
    int SO_TIMEOUT_MILLIS -> a
    java.lang.String messageString -> b
    java.lang.String encryptedMessageString -> c
    int millis -> d
    int retries -> e
    boolean expectResponse -> f
    boolean ignoreResponse -> g
    int readTimeOut -> h
    java.lang.Throwable creationStack -> i
    25:25:java.lang.String getMessageString() -> a
    29:30:void setMessageString(java.lang.String) -> a
    33:33:java.lang.String getEncryptedMessageString() -> b
    37:38:void setEncryptedMessageString(java.lang.String) -> b
    41:41:int getMillis() -> c
    45:46:void setMillis(int) -> a
    49:49:int getRetries() -> d
    53:54:void setRetries(int) -> b
    57:57:boolean getExpectResponse() -> e
    61:62:void setExpectResponse(boolean) -> a
    65:65:boolean getIgnoreResponse() -> f
    69:70:void setIgnoreResponse(boolean) -> b
    73:73:int getReadTimeOut() -> g
    77:78:void setReadTimeOut(int) -> c
    81:81:java.lang.Throwable getCreationStack() -> h
online.util.MessageUtil -> online.a.i:
    java.lang.String LIVE_IP -> a
    java.lang.String LAPTOP_IP -> b
    java.lang.String LOCAL_IP -> c
    java.lang.String SERVER_IP -> d
    java.util.Random RAND -> r
    int millisDelay -> e
    java.security.PublicKey publicKey -> f
    javax.crypto.SecretKey symmetricKey -> g
    javax.crypto.SecretKey tempSymmetricKey -> h
    boolean shuttingDown -> s
    int cachedPortNumber -> t
    40:41:void sendMessage(org.w3c.dom.Document,int) -> a
    44:46:void sendMessage(org.w3c.dom.Document,int,int) -> a
    49:50:void sendMessage(java.lang.String,int) -> a
    53:55:void sendMessage(java.lang.String,int,int) -> a
    58:68:void sendMessage(online.util.MessageSenderParams,boolean) -> a
    72:72:boolean serverIsShuttingDown() -> a
    76:77:void setShuttingDown(boolean) -> a
    81:90:int getRandomPortNumber() -> b
    96:121:boolean changeCachedPort(org.w3c.dom.Element) -> a
    126:128:int getRandomLoadTestPortNumber() -> c
    133:144:java.net.InetAddress factoryInetAddress(java.lang.String) -> a
    150:170:void stackTraceAndDumpMessages(java.lang.Throwable,java.lang.Throwable,java.lang.String,java.lang.String) -> a
online.util.ResponseHandler -> online.a.j:
    44:162:void handleResponse(java.lang.String,java.lang.String) -> a
    166:179:void handleNewAccountResponse(org.w3c.dom.Element) -> b
    183:195:void handleChangePasswordResponse(org.w3c.dom.Element) -> c
    199:210:void handleChangeEmailResponse(org.w3c.dom.Element) -> d
    214:228:void handleResetPasswordResponse(org.w3c.dom.Element) -> e
    232:275:void handleConnectSuccess(org.w3c.dom.Element,online.screen.EntropyLobby) -> b
    279:291:void handleConnectFailure(org.w3c.dom.Element) -> f
    295:307:void promptForUpdate(org.w3c.dom.Element) -> g
    311:328:void handleKickOff(org.w3c.dom.Element) -> h
    332:359:void handleChatResponse(org.w3c.dom.Element,online.screen.EntropyLobby) -> c
    363:367:object.OnlineMessage getOnlineMessageFromChild(org.w3c.dom.Element) -> i
    372:430:void handleLobbyResponse(org.w3c.dom.Element,online.screen.EntropyLobby) -> d
    434:444:java.util.List factoryListForNodeList(org.w3c.dom.NodeList) -> a
    449:503:void handleJoinRoomAck(org.w3c.dom.Element,online.screen.EntropyLobby) -> e
    507:510:void handleCloseRoomAck(org.w3c.dom.Element,online.screen.EntropyLobby) -> f
    513:517:void handlePlayerNotification(org.w3c.dom.Element,online.screen.EntropyLobby) -> g
    521:540:void handleObserverResponse(org.w3c.dom.Element,online.screen.EntropyLobby) -> h
    543:554:void synchronisePlayers(online.screen.GameRoom,org.w3c.dom.Element) -> b
    557:570:void setBidsFromXml(online.screen.GameRoom,org.w3c.dom.Element) -> c
    574:597:void handleNewGameResponse(org.w3c.dom.Element,online.screen.EntropyLobby) -> i
    601:611:void handleNewBid(org.w3c.dom.Element,online.screen.EntropyLobby) -> j
    615:622:void handleGameOverResponse(org.w3c.dom.Element,online.screen.EntropyLobby) -> k
    626:636:void handleNewRoundResponse(org.w3c.dom.Element,online.screen.EntropyLobby) -> l
    644:646:void pauseDuringChallenge() -> a
    650:663:void setHandsFromXml(online.screen.GameRoom,org.w3c.dom.Element) -> d
    667:685:java.lang.String[] getHandFromElement(org.w3c.dom.Element) -> a
    690:698:void handleLeaderboardResponse(org.w3c.dom.Element) -> j
    702:707:void handleStatisticsResponse(org.w3c.dom.Element,online.screen.EntropyLobby) -> m
    541:541:void access$0(online.screen.GameRoom,org.w3c.dom.Element) -> a
    330:330:void access$1(org.w3c.dom.Element,online.screen.EntropyLobby) -> a
online.util.ResponseHandler$1 -> online.a.j$1:
    java.lang.String val$username -> a
    online.screen.EntropyLobby val$lobby -> b
    253:258:void run() -> run
online.util.ResponseHandler$2 -> online.a.j$2:
    org.w3c.dom.Element val$rootElement -> a
    300:305:void run() -> run
online.util.ResponseHandler$3 -> online.a.j$3:
    online.screen.GameRoom val$gameRoom -> a
    boolean val$hotswap -> b
    org.w3c.dom.Element val$root -> c
    org.w3c.dom.Element val$chatChild -> d
    online.screen.EntropyLobby val$lobby -> e
    491:501:void run() -> run
online.util.UpdateChecker -> online.a.k:
    java.lang.String FILE_NAME_ENTROPY_JAR -> a
    28:34:void checkForUpdates() -> a
    38:93:void checkForUpdatesAndDoDownloadIfRequired() -> b
    97:112:void startUpdate(org.w3c.dom.Element) -> a
online.util.XmlBuilderClient -> online.a.l:
    int CHAT_REQUEST_POLL_MILLIS -> a
    int LOBBY_REQUEST_POLL_MILLIS -> b
    34:54:boolean sendSymmetricKeyRequest() -> a
    60:95:boolean validSymmetricKeyResponse(java.lang.String) -> e
    100:108:org.w3c.dom.Document factoryNewSymmetricKeyRequest(javax.crypto.SecretKey) -> a
    113:131:org.w3c.dom.Document factoryClientMailMessage(java.lang.String,java.lang.String,java.util.ArrayList) -> a
    136:158:void addAttachment(org.w3c.dom.Document,org.w3c.dom.Element,javax.crypto.SecretKey,java.io.File) -> a
    162:162:org.w3c.dom.Document factoryHeartbeat(java.lang.String) -> a
    167:173:org.w3c.dom.Document factorySimpleMessage(java.lang.String,java.lang.String) -> a
    178:185:org.w3c.dom.Document factoryNewAccountRequest(java.lang.String,java.lang.String,java.lang.String) -> a
    190:195:org.w3c.dom.Document factoryCrcCheck(java.lang.String) -> b
    200:207:org.w3c.dom.Document factoryChangePasswordRequest(java.lang.String,java.lang.String,java.lang.String) -> b
    212:220:org.w3c.dom.Document factoryChangeEmailRequest(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    225:233:org.w3c.dom.Document factoryConnectionRequest(java.lang.String,java.lang.String,boolean) -> a
    238:244:org.w3c.dom.Document factoryResetPasswordRequest(java.lang.String,java.lang.String) -> b
    249:254:org.w3c.dom.Document factoryDisconnectRequest(java.lang.String) -> c
    259:275:org.w3c.dom.Document factoryNewChatXml(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    280:290:org.w3c.dom.Document factoryRoomJoinRequestXml(java.lang.String,java.lang.String,boolean,int) -> a
    295:303:org.w3c.dom.Document factoryCloseRoomRequestXml(java.lang.String,java.lang.String) -> c
    308:315:org.w3c.dom.Document factoryObserverRequest(java.lang.String,java.lang.String) -> d
    320:328:org.w3c.dom.Document factoryNewGameRequest(java.lang.String,java.lang.String,java.lang.String) -> c
    333:348:org.w3c.dom.Document factoryBidXml(java.lang.String,java.lang.String,java.lang.String,int,object.Bid,int) -> a
    353:359:org.w3c.dom.Document factoryLeaderboardRequest(java.lang.String) -> d
online.util.XmlBuilderDesktop -> online.a.m:
    16:26:org.w3c.dom.Document factoryAchievementsUpdate(java.lang.String,java.lang.String,int) -> a
org.eclipse.jdt.internal.jarinjarloader.JIJConstants -> org.eclipse.jdt.internal.jarinjarloader.a:
    java.lang.String REDIRECTED_CLASS_PATH_MANIFEST_NAME -> a
    java.lang.String REDIRECTED_MAIN_CLASS_MANIFEST_NAME -> b
    java.lang.String DEFAULT_REDIRECTED_CLASSPATH -> c
    java.lang.String MAIN_METHOD_NAME -> d
    java.lang.String JAR_INTERNAL_URL_PROTOCOL_WITH_COLON -> e
    java.lang.String JAR_INTERNAL_SEPARATOR -> f
    java.lang.String INTERNAL_URL_PROTOCOL_WITH_COLON -> g
    java.lang.String INTERNAL_URL_PROTOCOL -> h
    java.lang.String PATH_SEPARATOR -> i
    java.lang.String CURRENT_DIR -> j
    java.lang.String UTF8_ENCODING -> k
org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader -> org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader:
    43:59:void main(java.lang.String[]) -> main
    63:86:org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader$ManifestInfo getManifestInfo() -> a
    97:110:java.lang.String[] splitSpaces(java.lang.String) -> a
org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader$ManifestInfo -> org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader$a:
    java.lang.String rsrcMainClass -> a
    java.lang.String[] rsrcClassPath -> b
org.eclipse.jdt.internal.jarinjarloader.RsrcURLConnection -> org.eclipse.jdt.internal.jarinjarloader.b:
    java.lang.ClassLoader classLoader -> a
    40:40:void connect() -> connect
    43:48:java.io.InputStream getInputStream() -> getInputStream
org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandler -> org.eclipse.jdt.internal.jarinjarloader.c:
    java.lang.ClassLoader classLoader -> a
    38:38:java.net.URLConnection openConnection(java.net.URL) -> openConnection
    43:52:void parseURL(java.net.URL,java.lang.String,int,int) -> parseURL
org.eclipse.jdt.internal.jarinjarloader.RsrcURLStreamHandlerFactory -> org.eclipse.jdt.internal.jarinjarloader.d:
    java.lang.ClassLoader classLoader -> a
    java.net.URLStreamHandlerFactory chainFac -> b
    35:39:java.net.URLStreamHandler createURLStreamHandler(java.lang.String) -> createURLStreamHandler
    51:52:void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory) -> a
screen.AboutDialog -> screen.a:
    javax.swing.JLabel lblViewChangelog -> a
    javax.swing.JButton btnOk -> b
    62:99:void setUpListeners() -> a
screen.AboutDialog$1 -> screen.a$1:
    screen.AboutDialog this$0 -> a
    67:71:void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    76:77:void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    82:83:void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    86:86:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    88:88:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
screen.AboutDialog$2 -> screen.a$2:
    screen.AboutDialog this$0 -> a
    96:97:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.AbstractPreferencesPanel -> screen.b:
    screen.PreferencesDialog parent -> a
    void initVariables() -> a
    boolean valid() -> b
    void savePreferences() -> c
    22:29:void toggleLockedComponent(javax.swing.AbstractButton,java.lang.String) -> a
    33:34:void setParent(screen.PreferencesDialog) -> a
screen.AchievementsDialog -> screen.c:
    javax.swing.ImageIcon lockedIcon -> a
    javax.swing.ImageIcon gardenerIcon -> b
    javax.swing.ImageIcon lionIcon -> c
    javax.swing.ImageIcon burglarIcon -> d
    javax.swing.ImageIcon cavemanIcon -> e
    javax.swing.ImageIcon fiveMinutesIcon -> f
    javax.swing.ImageIcon fifteenMinutesIcon -> g
    javax.swing.ImageIcon thirtyMinutesIcon -> h
    javax.swing.ImageIcon sixtyMinutesIcon -> i
    javax.swing.ImageIcon twoHoursIcon -> j
    javax.swing.ImageIcon cowardIcon -> k
    javax.swing.ImageIcon spectatorIcon -> l
    javax.swing.ImageIcon vanityIcon -> m
    javax.swing.ImageIcon perfectTwoPlayerGameIcon -> n
    javax.swing.ImageIcon perfectThreePlayerGameIcon -> o
    javax.swing.ImageIcon perfectFourPlayerGameIcon -> p
    javax.swing.ImageIcon participantIcon -> q
    javax.swing.ImageIcon hobbyistIcon -> r
    javax.swing.ImageIcon enthusiastIcon -> s
    javax.swing.ImageIcon professionalIcon -> t
    javax.swing.ImageIcon veteranIcon -> u
    javax.swing.ImageIcon momentumIcon -> v
    javax.swing.ImageIcon chainReactionIcon -> w
    javax.swing.ImageIcon perpetualMotionIcon -> z
    javax.swing.ImageIcon firstTimerIcon -> A
    javax.swing.ImageIcon casualStrategistIcon -> B
    javax.swing.ImageIcon consistentWinnerIcon -> C
    javax.swing.ImageIcon dominantForceIcon -> D
    javax.swing.ImageIcon psychicIcon -> E
    javax.swing.ImageIcon secondThoughtsIcon -> F
    javax.swing.ImageIcon fullBlindTwoIcon -> G
    javax.swing.ImageIcon fullBlindThreeIcon -> H
    javax.swing.ImageIcon fullBlindFourIcon -> I
    javax.swing.ImageIcon chimeraIcon -> J
    javax.swing.ImageIcon precisionIcon -> K
    javax.swing.ImageIcon mathematicianIcon -> L
    javax.swing.ImageIcon nuclearStrikeIcon -> M
    javax.swing.ImageIcon handicapTwoIcon -> N
    javax.swing.ImageIcon handicapThreeIcon -> O
    javax.swing.ImageIcon handicapFourIcon -> P
    javax.swing.ImageIcon vectropyOneIcon -> Q
    javax.swing.ImageIcon vectropyTenIcon -> R
    javax.swing.ImageIcon vectropyTwentyFiveIcon -> S
    javax.swing.ImageIcon vectropyFiftyIcon -> T
    javax.swing.ImageIcon distractedIcon -> U
    javax.swing.ImageIcon citizensArrestIcon -> V
    javax.swing.ImageIcon connectedIcon -> W
    javax.swing.ImageIcon railbirdIcon -> X
    javax.swing.ImageIcon socialIcon -> Y
    javax.swing.ImageIcon blueScreenOfDeathIcon -> Z
    javax.swing.ImageIcon werewolfIcon -> aa
    javax.swing.ImageIcon spacemanIcon -> ab
    javax.swing.ImageIcon konamiCodeIcon -> ac
    javax.swing.ImageIcon unlockedRewardIcon -> ad
    javax.swing.ImageIcon unlockedRewardIconDark -> ae
    javax.swing.ImageIcon unlockedRewardIconDarkest -> af
    javax.swing.ImageIcon lockedRewardIcon -> ag
    int achievementsEarned -> ah
    int achievementsTotal -> ai
    int progressShowing -> aj
    boolean redrawing -> ak
    java.util.List achievementBadges -> al
    java.util.List bonusBadges -> am
    java.util.List rewardStars -> an
    javax.swing.JPanel panelDescriptions -> ao
    javax.swing.JSeparator separator -> ap
    javax.swing.JPanel bonusPanel -> aq
    javax.swing.JLabel testTube -> ar
    object.RewardStar reward5 -> as
    object.RewardStar reward10 -> at
    object.RewardStar reward15 -> au
    object.RewardStar reward20 -> av
    object.RewardStar reward25 -> aw
    object.RewardStar reward30 -> ax
    object.RewardStar reward35 -> ay
    object.RewardStar reward40 -> az
    object.RewardStar reward45 -> aA
    object.RewardStar reward50 -> aB
    javax.swing.JLabel title -> aC
    javax.swing.JLabel achievementName -> aD
    javax.swing.JLabel achievementExplanation -> aE
    javax.swing.JLabel achievementDescription -> aF
    object.AchievementBadge cavemanBadge -> aG
    object.AchievementBadge burglarBadge -> aH
    object.AchievementBadge lionBadge -> aI
    object.AchievementBadge gardenerBadge -> aJ
    object.AchievementBadge psychicBadge -> aK
    object.AchievementBadge fiveMinutesBadge -> aL
    object.AchievementBadge fifteenMinutesBadge -> aM
    object.AchievementBadge thirtyMinutesBadge -> aN
    object.AchievementBadge sixtyMinutesBadge -> aO
    object.AchievementBadge twoHoursBadge -> aP
    object.AchievementBadge cowardBadge -> aQ
    object.AchievementBadge spectatorBadge -> aR
    object.AchievementBadge vanityBadge -> aS
    object.AchievementBadge perfectTwoPlayerGameBadge -> aT
    object.AchievementBadge perfectThreePlayerGameBadge -> aU
    object.AchievementBadge perfectFourPlayerGameBadge -> aV
    object.AchievementBadge momentumBadge -> aW
    object.AchievementBadge chainReactionBadge -> aX
    object.AchievementBadge perpetualMotionBadge -> aY
    object.AchievementBadge participantBadge -> aZ
    object.AchievementBadge hobbyistBadge -> ba
    object.AchievementBadge enthusiastBadge -> bb
    object.AchievementBadge professionalBadge -> bc
    object.AchievementBadge veteranBadge -> bd
    object.AchievementBadge firstTimerBadge -> be
    object.AchievementBadge casualStrategistBadge -> bf
    object.AchievementBadge consistentWinnerBadge -> bg
    object.AchievementBadge dominantForceBadge -> bh
    object.AchievementBadge secondThoughtsBadge -> bi
    object.AchievementBadge fullBlindTwoBadge -> bj
    object.AchievementBadge fullBlindThreeBadge -> bk
    object.AchievementBadge fullBlindFourBadge -> bl
    object.AchievementBadge chimeraBadge -> bm
    object.AchievementBadge precisionBadge -> bn
    object.AchievementBadge mathematicianBadge -> bo
    object.AchievementBadge nuclearStrikeBadge -> bp
    object.AchievementBadge handicapTwoBadge -> bq
    object.AchievementBadge handicapThreeBadge -> br
    object.AchievementBadge handicapFourBadge -> bs
    object.AchievementBadge vectropyOneBadge -> bt
    object.AchievementBadge vectropyTenBadge -> bu
    object.AchievementBadge vectropyTwentyFiveBadge -> bv
    object.AchievementBadge vectropyFiftyBadge -> bw
    object.AchievementBadge distractedBadge -> bx
    object.AchievementBadge citizensArrestBadge -> by
    object.AchievementBadge connectedBadge -> bz
    object.AchievementBadge railbirdBadge -> bA
    object.AchievementBadge socialBadge -> bB
    object.AchievementBadge blueScreenOfDeathBadge -> bC
    object.AchievementBadge werewolfBadge -> bD
    object.AchievementBadge spacemanBadge -> bE
    object.AchievementBadge konamiCodeBadge -> bF
    354:362:void init() -> a
    366:384:void adjustSizeIfNecessary() -> c
    388:411:void populateBadgeListAndAddMotionListeners() -> d
    415:426:void populateStarListAndAddMouseListeners() -> e
    430:465:void displayBadgesAndTitles() -> f
    469:479:void animateTestTube() -> g
    483:484:void updateTestTube() -> h
    488:489:javax.swing.ImageIcon getTubeIconForIndex(int) -> a
    494:510:void redrawStars() -> i
    516:531:void refresh(boolean) -> a
    534:534:void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    539:564:void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    568:573:int getAchievementsEarned() -> b
    602:647:void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    652:657:void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    662:667:void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    672:677:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    682:687:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    98:98:int access$0(screen.AchievementsDialog) -> a
    96:96:int access$1(screen.AchievementsDialog) -> b
    98:98:void access$2(screen.AchievementsDialog,int) -> a
    281:281:javax.swing.JLabel access$3(screen.AchievementsDialog) -> c
    486:486:javax.swing.ImageIcon access$4(screen.AchievementsDialog,int) -> b
    492:492:void access$5(screen.AchievementsDialog) -> d
    100:100:void access$6(screen.AchievementsDialog,boolean) -> a
screen.AchievementsDialog$RedrawTestTube -> screen.c$a:
    screen.AchievementsDialog this$0 -> a
    581:596:void run() -> run
screen.ApiAmendDialog -> screen.d:
    int DEFAULT_PORT_NUMBER -> a
    object.ApiStrategy strategy -> b
    javax.swing.JPanel okCancelPanel -> c
    javax.swing.JButton btnOk -> d
    javax.swing.JButton btnCancel -> e
    javax.swing.JPanel panel -> f
    javax.swing.JLabel lblName -> g
    javax.swing.JTextField textFieldName -> h
    javax.swing.JLabel lblGameMode -> i
    javax.swing.JRadioButton rdbtnEntropy -> j
    javax.swing.JRadioButton rdbtnVectropy -> k
    javax.swing.JRadioButton rdbtnBoth -> l
    javax.swing.ButtonGroup btnGroupMode -> m
    javax.swing.JLabel lblPort -> n
    javax.swing.JTextField textFieldPort -> o
    javax.swing.JLabel lblMessageType -> p
    javax.swing.JRadioButton rdbtnXml -> q
    javax.swing.JRadioButton rdbtnJson -> r
    javax.swing.ButtonGroup btnGroupMessageType -> s
    javax.swing.JButton btnTest -> t
    98:127:void init(object.ApiStrategy) -> a
    132:148:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    152:159:boolean valid() -> c
    164:192:void saveData() -> d
    196:205:void sendTestMessage() -> e
    209:209:object.ApiStrategy getApiStrategy() -> a
    214:218:object.ApiStrategy createStrategy() -> b
    223:226:void amendStrategy(object.ApiStrategy) -> b
screen.ApiTestHarness -> screen.ApiTestHarness:
    boolean LOGGING -> a
    32:40:void main(java.lang.String[]) -> main
    44:47:void init() -> a
    116:137:org.w3c.dom.Document factoryResponse(object.Bid) -> b
    143:145:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    114:114:org.w3c.dom.Document access$0(object.Bid) -> a
screen.ApiTestHarness$ListenerRunnable -> screen.ApiTestHarness$a:
    54:111:void run() -> run
screen.BidPanel -> screen.e:
    util.BidListener listener -> a
    int maxBid -> b
    boolean logging -> c
    void showBidPanel(boolean) -> a
    void enableBidPanel(boolean) -> b
    void enableChallenge(boolean) -> c
    void loadState(java.util.prefs.Preferences) -> a
    void saveState(java.util.prefs.Preferences) -> b
    void fireAppearancePreferencesChange() -> a
    void init(int,int,boolean,boolean,boolean,boolean) -> a
    void adjust(object.Bid) -> a
    28:29:void addBidListener(util.BidListener) -> a
    33:33:boolean getLogging() -> b
    37:38:void setLogging(boolean) -> d
    42:42:int getMaxBid() -> c
screen.BugReportDialog -> screen.f:
    javax.swing.JButton btnSendReport -> a
    javax.swing.JButton btnCancel -> b
    javax.swing.JTextField descriptionField -> c
    javax.swing.JTextPane textPaneReplicationSteps -> d
    93:95:void init() -> a
    99:106:boolean valid() -> b
    111:123:void sendReport() -> c
    128:144:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.ChangeLog -> screen.g:
    javax.swing.JScrollPane scrollPane -> a
    javax.swing.JTextArea textArea -> b
    31:364:void appendChangeLog() -> a
screen.ClearDataDialog -> screen.h:
    boolean clearOnlyStatistics -> a
    boolean clearAchievementsAndStatistics -> b
    boolean clearMyReplays -> c
    boolean clearImportedReplays -> d
    javax.swing.JCheckBox chckbxOnlyStatistics -> e
    javax.swing.JCheckBox chckbxAchievementsAndStatistics -> f
    javax.swing.JCheckBox chckbxMyReplays -> g
    javax.swing.JCheckBox chckbxImportedReplays -> h
    javax.swing.JButton btnOk -> i
    javax.swing.JButton btnCancel -> j
    64:73:void initVariables() -> a
    84:95:boolean valid() -> b
    100:181:void clearData() -> c
    187:201:void removeStatisticsVariablesFromNode(java.util.prefs.Preferences) -> a
    205:218:void resetPreferences() -> d
    222:224:void closeDialog() -> e
    229:249:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.ConfigureColumnsDialog -> screen.i:
    boolean showGameMode -> a
    boolean showRounds -> b
    boolean showPlayers -> c
    boolean showCards -> d
    boolean showRoomName -> e
    boolean okPressed -> f
    javax.swing.JCheckBox chckbxGameMode -> g
    javax.swing.JCheckBox chckbxRoomName -> h
    javax.swing.JCheckBox chckbxRounds -> i
    javax.swing.JCheckBox chckbxPlayers -> j
    javax.swing.JCheckBox chckbxCards -> k
    javax.swing.JButton btnOk -> l
    javax.swing.JButton btnCancel -> m
    66:77:void initVariables() -> c
    81:88:void saveSettings() -> d
    92:109:void setUpListeners() -> e
    113:113:boolean okPressed() -> a
    118:123:boolean configureColumns() -> b
    22:22:void access$0(screen.ConfigureColumnsDialog,boolean) -> a
    79:79:void access$1(screen.ConfigureColumnsDialog) -> a
screen.ConfigureColumnsDialog$1 -> screen.i$1:
    screen.ConfigureColumnsDialog this$0 -> a
    97:99:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.ConfigureColumnsDialog$2 -> screen.i$2:
    screen.ConfigureColumnsDialog this$0 -> a
    106:107:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.DebugConsole -> screen.j:
    boolean scrollLock -> a
    javax.swing.JScrollPane scrollPane -> b
    javax.swing.JTextArea textArea -> c
    38:45:void scrollToBottom() -> a
    49:50:void setScrollLock(boolean) -> a
    55:57:void append(java.lang.String) -> a
    62:62:java.lang.String getLogs() -> b
screen.EntropyBidPanel -> screen.k:
    java.lang.String suitSelected -> c
    int bidSuitCode -> d
    int lastBidSuitCode -> e
    int lastBidAmount -> f
    boolean illegalAllowed -> g
    boolean includeMoons -> h
    boolean includeStars -> i
    boolean online -> j
    javax.swing.JButton btnBid -> k
    javax.swing.JButton btnChallenge -> l
    javax.swing.JToggleButton btnClubs -> m
    javax.swing.JToggleButton btnDiamonds -> n
    javax.swing.JToggleButton btnHearts -> o
    javax.swing.JToggleButton btnMoons -> p
    javax.swing.JToggleButton btnSpades -> q
    javax.swing.JToggleButton btnStars -> r
    javax.swing.JToggleButton[] bidButtons -> s
    javax.swing.ButtonGroup bidGroup -> t
    javax.swing.JSlider bidSlider -> u
    javax.swing.JTextField bidAmountDisplay -> v
    javax.swing.JPanel totalCardsPanel -> w
    javax.swing.JLabel smallCardIcon -> z
    javax.swing.JLabel totalCardsLabel -> A
    javax.swing.JPanel panelBidChallenge -> B
    javax.swing.JButton btnIllegal -> C
    165:192:void init(int,int,boolean,boolean,boolean,boolean) -> a
    196:202:void setIllegalButtonState() -> d
    207:221:void showBidPanel(boolean) -> a
    226:241:void enableBidPanel(boolean) -> b
    246:248:void enableChallenge(boolean) -> c
    253:289:void adjust(object.Bid) -> a
    294:299:void fireAppearancePreferencesChange() -> a
    303:351:void setBidAmountDisplayColour() -> e
    355:380:void setBidButtonColours() -> f
    385:389:void saveState(java.util.prefs.Preferences) -> b
    394:417:void loadState(java.util.prefs.Preferences) -> a
    422:470:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    474:488:void actionPerformedBidButton(int) -> a
    493:495:void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
screen.EntropyScreen -> screen.l:
    long serialVersionUID -> q
    boolean earnedCaveman -> r
    boolean earnedBurglar -> s
    boolean earnedLion -> t
    boolean earnedWerewolf -> u
    boolean earnedGardener -> v
    boolean earnedSpaceman -> w
    51:64:void showResult() -> a
    69:80:void initVariablesForNewGame() -> b
    87:94:void fireAppearancePreferencesChange() -> c
    99:116:void saveGame() -> d
    121:124:void saveRoundForReplay() -> e
    129:136:void loadLastBid() -> f
    141:145:void loadSpecificVariables() -> g
    150:183:java.lang.String processCommand(java.lang.String) -> a
    191:192:void setLastBid(object.EntropyBid) -> a
    197:197:int getGameMode() -> h
    203:203:int getLastBidSuitCode() -> i
    209:211:void unlockPerfectBidAchievements() -> j
    216:241:void setPerfectBidBooleans() -> k
screen.GameScreen -> screen.m:
    int numberOfCards -> q
    int totalNumberOfCards -> r
    int personToStart -> s
    object.Player currentPlayer -> t
    int jokerQuantity -> u
    int handicapAmount -> v
    int jokerValue -> a
    object.Bid lastBid -> b
    boolean includeJokers -> w
    boolean playBlind -> z
    boolean playWithHandicap -> A
    boolean gameOver -> c
    boolean firstRound -> d
    boolean logging -> B
    boolean hasOverbid -> e
    boolean hasActedBlindThisGame -> f
    boolean earnedSpectator -> C
    boolean earnedPsychic -> g
    boolean includeStars -> h
    boolean includeMoons -> i
    boolean negativeJacks -> eD
    boolean cardReveal -> eE
    boolean currentlyOnChallenge -> eF
    boolean cheatUsed -> j
    java.util.Timer nextRoundTimer -> eG
    java.util.Timer cpuTurn -> eH
    object.Player player -> k
    object.Player opponentOne -> l
    object.Player opponentTwo -> m
    object.Player opponentThree -> n
    screen.BidPanel bidPanel -> o
    screen.HandPanelMk2 handPanel -> p
    void loadLastBid() -> f
    void loadSpecificVariables() -> g
    void showResult() -> a
    void fireAppearancePreferencesChange() -> c
    int getGameMode() -> h
    java.lang.String processCommand(java.lang.String) -> a
    int getLastBidSuitCode() -> i
    void unlockPerfectBidAchievements() -> j
    void setPerfectBidBooleans() -> k
    89:105:void startNewGame() -> l
    111:125:void startNewRound() -> m
    129:145:void startRound() -> w
    149:155:void populateHands(java.util.List) -> a
    159:173:void setRandomPersonToStart() -> x
    177:206:void initVariablesForNewGame() -> b
    210:214:void resetPlayers() -> y
    218:241:void initVariables() -> z
    245:249:void subtractCardsFromPlayers() -> A
    253:278:void knockOutPlayers() -> B
    282:326:void correctPersonToStart() -> C
    330:351:void getNewGameVariablesFromRegistry() -> D
    355:359:void setPlayerNamesFromHandPanel() -> E
    363:376:void initNumberOfCards() -> F
    380:390:void setCardsToSubtract(object.Player) -> a
    396:434:boolean checkForResult() -> n
    440:471:void roundEnded(int) -> a
    475:530:void saveRoundForReplay() -> e
    534:616:void saveGame() -> d
    626:718:void continueGame() -> o
    722:730:void initialiseBidPanel() -> p
    733:738:void setPlayerNames() -> q
    742:756:void setPlayerHandsAndRevealedCards() -> G
    760:771:void updateScreenForChallenge() -> H
    775:778:void cancelNewRound() -> r
    782:808:java.lang.String getMaxBidsStr() -> s
    813:832:void randomlyReplaceCardsWithJokers() -> t
    836:851:void replaceRandomCardWithJoker() -> I
    855:866:java.lang.String[] pickHandWithNonJokerAtRandom() -> J
    872:905:java.lang.String[] getConcatenatedHands() -> u
    912:936:void processPlayerBid() -> M
    940:950:void handlePerfectBid(object.Bid) -> d
    954:981:void processChallenge(object.Player) -> b
    985:1012:void processIllegal(object.Player) -> c
    1016:1024:void processCpuTurn(int) -> b
    1028:1047:object.Player getPlayer(int) -> e
    1053:1069:void processNextTurn(int) -> c
    1073:1077:void doHumanTurn() -> N
    1081:1095:void displayHands() -> O
    1099:1100:boolean isPerfect(object.Bid) -> a
    1105:1106:boolean isOverbid(object.Bid) -> c
    1111:1112:int countSuit(int) -> d
    1117:1141:util.StrategyParms factoryStrategyParms(object.Player) -> d
    1150:1163:void bidMade(object.Bid) -> b
    1168:1178:void challengeMade() -> K
    1183:1193:void illegalCalled() -> L
    1201:1204:void cardRevealed(java.lang.String) -> d
    1208:1210:void addToListmodel(object.Bid) -> e
    1217:1217:object.Player getPlayer() -> v
    60:60:void access$0(screen.GameScreen,boolean) -> a
    51:51:boolean access$1(screen.GameScreen) -> a
    1206:1206:void access$2(screen.GameScreen,object.Bid) -> a
    59:59:boolean access$3(screen.GameScreen) -> b
screen.GameScreen$DelayedOpponentTurn -> screen.m$a:
    object.Player opponent -> b
    screen.GameScreen this$0 -> a
    1248:1293:void run() -> run
screen.GameScreen$NewRoundTask -> screen.m$b:
    screen.GameScreen this$0 -> a
    1228:1233:void run() -> run
screen.HandPanelMk2 -> screen.n:
    javax.swing.ImageIcon iconEmptySeat -> a
    javax.swing.ImageIcon iconEmptySeatDark -> b
    javax.swing.ImageIcon iconEmptySeatDisabled -> c
    java.lang.String playerName -> d
    java.lang.String opponentOneName -> e
    java.lang.String opponentTwoName -> f
    java.lang.String opponentThreeName -> g
    boolean hasViewedHandThisGame -> h
    boolean initted -> i
    boolean observer -> j
    boolean revealListenerActive -> k
    java.lang.String roomId -> l
    java.lang.String username -> m
    int players -> n
    int playerNumber -> o
    java.util.Timer distractedTimer -> p
    util.RevealListener listener -> q
    javax.swing.JPanel opponentOnePanel -> r
    object.PlayerLabel lblOpponentOne -> s
    javax.swing.JPanel panelOpponentCards -> t
    object.CardLabel opponentCard5 -> u
    object.CardLabel opponentCard4 -> v
    object.CardLabel opponentCard3 -> w
    object.CardLabel opponentCard2 -> z
    object.CardLabel opponentCard1 -> A
    javax.swing.JPanel opponentThreePanel -> B
    object.PlayerLabel lblOpponentThree -> C
    javax.swing.JPanel panelOpponentThreeCards -> eD
    object.CardLabel opponentThreeCard1 -> eE
    object.CardLabel opponentThreeCard2 -> eF
    object.CardLabel opponentThreeCard3 -> eG
    object.CardLabel opponentThreeCard4 -> eH
    object.CardLabel opponentThreeCard5 -> eI
    javax.swing.JPanel opponentTwoPanel -> eJ
    object.PlayerLabel lblOpponentTwo -> eK
    javax.swing.JPanel panelOpponentTwoCards -> eL
    object.CardLabel opponentTwoCard1 -> eM
    object.CardLabel opponentTwoCard2 -> eN
    object.CardLabel opponentTwoCard3 -> eO
    object.CardLabel opponentTwoCard4 -> eP
    object.CardLabel opponentTwoCard5 -> eQ
    javax.swing.JPanel playerPanel -> eR
    object.PlayerLabel lblPlayer -> eS
    javax.swing.JPanel panelPlayerCards -> eT
    object.CardLabel playerCard5 -> eU
    object.CardLabel playerCard4 -> eV
    object.CardLabel playerCard3 -> eW
    object.CardLabel playerCard2 -> eX
    object.CardLabel playerCard1 -> eY
    javax.swing.JPanel blindPanel -> eZ
    object.CardLabel[] opponentThreeCards -> fa
    object.CardLabel[] opponentTwoCards -> fb
    object.CardLabel[] opponentOneCards -> fc
    object.CardLabel[] playerCards -> fd
    javax.swing.JButton btnViewCards -> fe
    javax.swing.JScrollPane scrollPane -> ff
    javax.swing.JLabel lblPlayerSeat -> fg
    javax.swing.JLabel lblOpponentOneSeat -> fh
    javax.swing.JLabel lblOpponentTwoSeat -> fi
    javax.swing.JLabel lblOpponentThreeSeat -> fj
    274:275:void displayHandsInGame(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) -> a
    279:285:void displayHandsOnline(java.util.concurrent.ConcurrentHashMap) -> a
    290:297:void initialiseCardLabels(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) -> b
    301:306:void resetPlayerCardPositions() -> q
    310:335:void initialiseCardLabelsForPlayer(java.lang.String[],object.CardLabel[],boolean) -> a
    339:343:void refreshIcons() -> r
    347:351:void refreshIcons(object.CardLabel[]) -> a
    355:361:void revealCard(java.lang.String) -> a
    365:376:void revealIfPresent(java.lang.String,object.CardLabel[]) -> a
    380:386:void displayAndHighlightHands(int) -> a
    390:399:void displayAndHighlightHand(int,object.CardLabel[]) -> a
    403:436:void initialisePlayer(int,java.lang.String,java.lang.String) -> a
    440:449:void saveLabels(java.util.prefs.Preferences) -> a
    453:458:void saveColour(object.PlayerLabel,java.lang.String,java.util.prefs.Preferences) -> a
    462:466:void clear() -> a
    470:515:void activateEmptySeats() -> b
    519:521:void activateEmptySeat(javax.swing.JLabel,javax.swing.JLabel,javax.swing.ImageIcon) -> a
    525:550:void removeFormerPlayers() -> c
    554:577:void removePlayer(int) -> b
    581:585:void hideCards(object.CardLabel[]) -> b
    589:608:void playerLeft(int) -> c
    612:613:void setViewCardsVisibility(boolean) -> a
    617:617:boolean isPlayingBlind() -> d
    622:643:void hideLabelForPlayer(int) -> d
    647:659:void displayLabels(boolean,boolean,boolean,boolean) -> a
    663:687:void selectPlayerInAwtThread(int,boolean) -> a
    691:693:void selectPlayer(int,boolean) -> b
    697:732:void selectSpecificPlayer(int,boolean) -> c
    736:740:void opponentSelectionChanged(boolean) -> e
    744:751:void deselectOtherPlayers(int) -> i
    755:768:java.lang.String getColourForAdjustedPlayerNumber(int) -> e
    773:779:void resetPlayers() -> e
    783:788:void resetPlayer(int,object.PlayerLabel,java.lang.String) -> a
    792:820:void assignAsteriskToStartingPlayer(int) -> f
    824:828:void fireAppearancePreferencesChange() -> f
    832:836:void initPlayerNames() -> g
    840:844:void loadPlayerNames(java.util.prefs.Preferences) -> b
    848:849:void setPlayerNumber(int) -> g
    852:853:void setPlayers(int) -> h
    856:857:void setUsername(java.lang.String) -> b
    860:861:void setRoomId(java.lang.String) -> c
    864:864:java.lang.String getPlayerName() -> h
    868:868:java.lang.String getOpponentOneName() -> i
    872:872:java.lang.String getOpponentTwoName() -> j
    876:876:java.lang.String getOpponentThreeName() -> k
    880:880:boolean getHasViewedHandThisGame() -> l
    884:885:void setHasViewedHandThisGame(boolean) -> b
    888:889:void setObserver(boolean) -> c
    892:893:void setInitted(boolean) -> d
    896:896:boolean isInitted() -> m
    904:919:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    923:928:void cancelTimer() -> n
    932:934:void activateRevealListener() -> o
    937:937:boolean isRevealListenerActive() -> p
    942:951:void togglePlayerCardsForSelection(boolean) -> f
    965:975:void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    980:990:void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    995:1005:void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    1008:1008:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    1010:1010:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    1014:1017:boolean isSeatLabel(javax.swing.JLabel) -> a
    1022:1029:void setSeatIcon(javax.swing.JLabel,javax.swing.ImageIcon) -> a
    1033:1055:void seatClicked(javax.swing.JLabel) -> b
    1059:1066:void setCardIcon(object.CardLabel,boolean) -> a
    1070:1099:void playerCardClicked(object.CardLabel) -> a
    1103:1105:boolean isRevealed(javax.swing.JLabel) -> c
    1110:1118:int getIndexOfPlayerCard(javax.swing.JLabel) -> d
    689:689:void access$0(screen.HandPanelMk2,int,boolean) -> a
screen.HandPanelMk2$1 -> screen.n$1:
    screen.HandPanelMk2 this$0 -> a
    int val$playerNumber -> b
    boolean val$selected -> c
    668:669:void run() -> run
screen.HandPanelMk2$WaitedTooLong -> screen.n$a:
    958:959:void run() -> run
screen.HelpDialog -> screen.o:
    help.HelpPanel fundamentalsTheDeck -> c
    help.HelpPanel fundamentalsGlossary -> d
    help.HelpPanel rulesEntropyIntroduction -> e
    help.HelpPanel rulesEntropyBidding -> f
    help.HelpPanel rulesEntropyChallenging -> g
    help.HelpPanel rulesVectropyIntroduction -> h
    help.HelpPanel rulesVectropyBidding -> i
    help.HelpPanel rulesVectropyChallenging -> j
    help.HelpPanel rulesIllegal -> k
    help.HelpPanel toolsGameplaySettings -> l
    help.HelpPanel toolsReplayViewer -> m
    help.HelpPanel miscBugReport -> n
    help.HelpPanel miscClearingSaveData -> o
    help.HelpPanel miscCheatCodes -> p
    javax.swing.tree.DefaultMutableTreeNode nodeToHighlightAfterSearch -> q
    javax.swing.tree.DefaultMutableTreeNode currentNode -> r
    boolean fourColours -> a
    java.lang.String backs -> b
    javax.swing.JFormattedTextField searchBox -> s
    javax.swing.JLabel lblSearch -> t
    javax.swing.tree.DefaultMutableTreeNode root -> u
    javax.swing.JTree tree -> v
    javax.swing.JScrollPane helpPane -> w
    javax.swing.JScrollPane treePane -> z
    javax.swing.JLabel noSearchResults -> A
    152:163:void initVariables() -> a
    167:177:void createNodes() -> c
    183:220:void refreshNodes(java.lang.String) -> a
    224:233:void populateFundamentals(java.lang.String) -> c
    237:271:void populateGameRules(java.lang.String) -> d
    275:284:void populateTools(java.lang.String) -> e
    288:302:void populateMisc(java.lang.String) -> f
    306:325:void addNodeBasedOnString(javax.swing.tree.DefaultMutableTreeNode,help.HelpPanel,java.lang.String) -> a
    332:364:void valueChanged(javax.swing.event.TreeSelectionEvent) -> valueChanged
    369:373:void setSelectionForWord(java.lang.String) -> b
    378:399:void setSelectionForWordRecursively(java.util.Enumeration,java.lang.String) -> a
    405:418:void fireAppearancePreferencesChange() -> b
    140:140:javax.swing.JFormattedTextField access$0(screen.HelpDialog) -> a
screen.HelpDialog$1 -> screen.o$1:
    screen.HelpDialog this$0 -> a
    120:121:void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
    125:126:void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    130:131:void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
screen.LoadTesterDialog -> screen.p:
    int numberOfThreads -> a
    int numberOfMessages -> b
    int threadsCompleted -> c
    long loadTestStartMillis -> d
    javax.swing.JFormattedTextField textFieldNumberOfThreads -> e
    javax.swing.JFormattedTextField textFieldNumberOfMessages -> f
    javax.swing.JLabel lblTotalMessages -> g
    javax.swing.JButton btnAssignKey -> h
    javax.swing.JButton btnLoadTest -> i
    javax.swing.JScrollPane scrollPane -> j
    javax.swing.JPanel progressPanel -> k
    javax.swing.JLabel lblLoadTestTime -> l
    112:116:javax.swing.text.NumberFormatter getIntegerFormat() -> d
    121:123:void init() -> a
    127:137:void setButtonsEnabled() -> b
    141:155:void updateTotalMessagesLabel() -> e
    159:194:void doLoadTest() -> f
    198:213:void threadFinished() -> c
    217:217:java.lang.String getMessageToSend() -> g
    223:224:void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
    229:230:void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    235:236:void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    241:263:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.LoadingDialog -> screen.q:
    javax.swing.JLabel lblMessage -> a
    28:39:void showDialog(java.lang.String) -> a
    43:53:void dismissDialog() -> a
    24:24:javax.swing.JLabel access$0(screen.LoadingDialog) -> a
screen.LoadingDialog$1 -> screen.q$1:
    screen.LoadingDialog this$0 -> a
    java.lang.String val$textToShow -> b
    33:35:void run() -> run
screen.LoadingDialog$2 -> screen.q$2:
    screen.LoadingDialog this$0 -> a
    48:49:void run() -> run
screen.MainScreen -> screen.r:
    double startTime -> a
    java.util.Timer timerFiveMinutes -> c
    java.util.Timer timerFifteenMinutes -> d
    java.util.Timer timerThirtyMinutes -> e
    java.util.Timer timerSixtyMinutes -> f
    java.util.Timer timerTwoHours -> g
    boolean bottomAchievementShowing -> h
    boolean topAchievementShowing -> i
    boolean isGameToContinue -> j
    int gameMode -> k
    java.util.ArrayList lastTenKeys -> l
    javax.swing.JMenuBar menuBar -> m
    javax.swing.JMenu mnFile -> n
    javax.swing.JMenuItem mntmNewGame -> o
    javax.swing.JMenuItem mntmContinueGame -> p
    javax.swing.JMenuItem mntmPlayOnline -> q
    javax.swing.JMenuItem mntmStatistics -> r
    javax.swing.JMenuItem mntmClearData -> s
    javax.swing.JMenuItem mntmExit -> t
    javax.swing.JMenu mnOptions -> u
    javax.swing.JMenuItem mntmPreferences -> v
    javax.swing.JMenuItem mntmViewReplays -> w
    javax.swing.JMenuItem mntmAchievements -> z
    javax.swing.JMenu mnHelp -> A
    javax.swing.JMenuItem mntmViewHelp -> B
    javax.swing.JMenuItem mntmAbout -> C
    javax.swing.JMenuItem mntmReportBug -> eD
    javax.swing.JMenuItem mntmViewLogs -> eE
    javax.swing.DefaultListModel listmodel -> eF
    javax.swing.JScrollPane scrollPane -> eG
    javax.swing.JList history -> eH
    javax.swing.JLabel lblBidHistory -> eI
    javax.swing.JButton btnNextRound -> eJ
    javax.swing.JTextPane lblResult -> eK
    javax.swing.JButton btnReplay -> eL
    javax.swing.JPanel achievementMessageBottom -> eM
    javax.swing.JLabel achievementIconBottom -> eN
    javax.swing.JLabel achievementEarnedBottom -> eO
    javax.swing.JLabel achievementTitleBottom -> eP
    javax.swing.JLabel xButtonBottom -> eQ
    javax.swing.JPanel achievementMessageTop -> eR
    javax.swing.JLabel achievementIconTop -> eS
    javax.swing.JLabel achievementEarnedTop -> eT
    javax.swing.JLabel achievementTitleTop -> eU
    javax.swing.JLabel xButtonTop -> eV
    javax.swing.JTextField cheatBar -> eW
    javax.swing.JPanel sidePanel -> eX
    javax.swing.JSplitPane splitPane -> eY
    javax.swing.JPanel leftPanel -> eZ
    screen.GameScreen gamePanel -> b
    274:277:void init() -> q
    281:292:void setIcon() -> r
    298:315:void startNewGame() -> a
    319:356:boolean overwriteSavedGame() -> s
    364:391:boolean quitCurrentGame() -> t
    396:408:boolean confirmQuit() -> u
    416:423:void startNewRound() -> b
    427:433:void setResultText(java.lang.String) -> a
    437:438:void hideResult() -> c
    442:442:java.lang.String getResultText() -> d
    447:448:void showNextRoundButton() -> e
    452:452:boolean isNextRoundVisible() -> f
    459:470:void fireAppearancePreferencesChange() -> g
    477:517:void doStuffOnExit() -> v
    521:543:void saveGame() -> w
    549:563:void continueGame() -> h
    567:576:void connectToEntropyOnline() -> x
    580:581:void dismissCurrentReplay() -> i
    585:586:void enableNewGameOption(boolean) -> a
    590:591:void resetStartTime() -> j
    597:613:void restartTimers() -> y
    617:627:void restartTimer(boolean,java.util.Timer,java.util.TimerTask,int) -> a
    631:637:void showBottomAchievementPanel(boolean) -> b
    641:647:void showTopAchievementPanel(boolean) -> c
    651:685:void showAchievementPopup(java.lang.String,javax.swing.ImageIcon) -> a
    689:690:void minimise() -> k
    694:695:void maximise() -> l
    699:718:void selectGameScreen(int) -> a
    722:783:void processCommand(java.lang.String) -> b
    787:840:boolean processDevModeCommand(java.lang.String) -> c
    845:871:void onStart() -> m
    875:891:void generatePublicKey() -> n
    897:915:void cleanUpReplayNodes() -> z
    919:924:void setViewLogsVisibility() -> A
    928:953:void startAchievementTimers() -> B
    957:959:void exitApplication() -> o
    963:986:void checkForUserName() -> C
    990:996:void checkForCoward() -> D
    1000:1000:javax.swing.DefaultListModel getListmodel() -> p
    1005:1018:void setUpMenuListeners() -> E
    1022:1072:void setUpScreenListeners() -> F
    1122:1149:void setUpCheatsActionMap() -> G
    1154:1287:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    1293:1293:void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    1295:1295:void windowClosed(java.awt.event.WindowEvent) -> windowClosed
    1299:1300:void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    1302:1302:void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    1304:1304:void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    1306:1306:void windowIconified(java.awt.event.WindowEvent) -> windowIconified
    1308:1308:void windowOpened(java.awt.event.WindowEvent) -> windowOpened
    1313:1329:void keyPressed(java.awt.event.KeyEvent) -> keyPressed
    1331:1331:void keyReleased(java.awt.event.KeyEvent) -> keyReleased
    1333:1333:void keyTyped(java.awt.event.KeyEvent) -> keyTyped
    593:593:void access$0(screen.MainScreen) -> a
    264:264:javax.swing.JTextField access$1(screen.MainScreen) -> b
screen.MainScreen$1 -> screen.r$1:
    screen.MainScreen this$0 -> a
    1031:1032:void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    1034:1034:void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    1036:1036:void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    1038:1038:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    1040:1040:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
screen.MainScreen$2 -> screen.r$2:
    screen.MainScreen this$0 -> a
    1047:1048:void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    1050:1050:void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    1052:1052:void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    1054:1054:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    1056:1056:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
screen.MainScreen$3 -> screen.r$3:
    screen.MainScreen this$0 -> a
    1064:1070:void preferenceChange(java.util.prefs.PreferenceChangeEvent) -> preferenceChange
screen.MainScreen$4 -> screen.r$4:
    screen.MainScreen this$0 -> a
    1134:1147:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    1129:1129:screen.MainScreen access$0(screen.MainScreen$4) -> a
screen.MainScreen$4$1 -> screen.r$4$1:
    screen.MainScreen$4 this$1 -> a
    1143:1144:void run() -> run
screen.MainScreen$TimeFifteenMinutes -> screen.r$a:
    screen.MainScreen this$0 -> a
    1088:1090:void run() -> run
screen.MainScreen$TimeFiveMinutes -> screen.r$b:
    screen.MainScreen this$0 -> a
    1079:1081:void run() -> run
screen.MainScreen$TimeSixtyMinutes -> screen.r$c:
    screen.MainScreen this$0 -> a
    1106:1108:void run() -> run
screen.MainScreen$TimeThirtyMinutes -> screen.r$d:
    screen.MainScreen this$0 -> a
    1097:1099:void run() -> run
screen.MainScreen$TimeTwoHours -> screen.r$e:
    screen.MainScreen this$0 -> a
    1115:1117:void run() -> run
screen.PreferencesDialog -> screen.s:
    javax.swing.JTabbedPane tabbedPane -> a
    screen.PreferencesPanelGameplay gameplayPanel -> b
    javax.swing.JScrollPane appearanceScrollPane -> c
    screen.PreferencesPanelAppearance appearancePanel -> d
    screen.PreferencesPanelPlayers playersPanel -> e
    screen.PreferencesPanelMisc miscPanel -> f
    javax.swing.JPanel okCancelPanel -> g
    javax.swing.JButton btnOk -> h
    javax.swing.JButton btnCancel -> i
    69:76:void initVariables() -> a
    80:91:boolean valid() -> b
    96:97:void gameModeChanged(int) -> a
    101:108:java.util.ArrayList getChildPanels() -> c
    114:135:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    139:141:void closeDialog() -> d
screen.PreferencesPanelAppearance -> screen.t:
    java.lang.String deckDirectory -> b
    java.lang.String jokerDirectory -> c
    java.lang.String cardBacks -> d
    java.lang.String numberOfColours -> e
    java.lang.String lookAndFeel -> f
    javax.swing.JLabel lblVisualPreferences -> g
    javax.swing.JSeparator separator_1 -> h
    javax.swing.JPanel deckDesignPanel -> i
    javax.swing.ButtonGroup bgDeckDesign -> j
    javax.swing.JLabel lblCardDesign -> k
    javax.swing.JRadioButton rdbtnClassicDesign -> l
    javax.swing.JRadioButton rdbtnMinimalistDesign -> m
    javax.swing.JPanel deckPreviewPanel -> n
    javax.swing.JLabel labelJc -> o
    javax.swing.JLabel labelQd -> p
    javax.swing.JLabel labelKh -> q
    javax.swing.JLabel labelAs -> r
    javax.swing.JPanel jokerDesignPanel -> s
    javax.swing.ButtonGroup bgJokerDesign -> t
    javax.swing.JRadioButton rdbtnClassicJokers -> u
    javax.swing.JRadioButton rdbtnDeveloperJokers -> v
    javax.swing.JLabel lblJokerDesign -> w
    javax.swing.JPanel jokerPreviewPanel -> z
    javax.swing.JLabel labelJo0 -> A
    javax.swing.JLabel labelJo1 -> B
    javax.swing.JLabel labelJo2 -> C
    javax.swing.JLabel labelJo3 -> eD
    javax.swing.JCheckBox cbFourColour -> eE
    javax.swing.JPanel backDesignPanel -> eF
    javax.swing.JLabel lblCardBacks -> eG
    javax.swing.JComboBox comboBoxBacks -> eH
    javax.swing.JComboBox comboBoxLookAndFeel -> eI
    javax.swing.JLabel labelBack -> eJ
    javax.swing.JLabel lblLookFeel -> eK
    javax.swing.JTextPane txtpnLookAndFeelDisclaimer -> eL
    javax.swing.JPanel panelLookAndFeel -> eM
    186:197:void initVariables() -> a
    202:202:boolean valid() -> b
    208:215:void savePreferences() -> c
    219:224:void getVariablesFromPrefs() -> d
    228:231:void hideLockedFields() -> e
    235:243:void refreshDeckPreview() -> f
    247:255:void refreshJokerPreview() -> g
    259:271:void selectCardBackBasedOnPreference() -> h
    275:291:java.util.Vector initialiseBacksVector() -> i
    296:307:void addIfUnlocked(java.util.Vector,object.ComboBoxItem,int,java.lang.String) -> a
    311:321:void setLookAndFeelComboBoxModel() -> j
    325:337:object.ComboBoxItem getSelectedItemForCode(java.util.Vector,java.lang.String) -> a
    343:355:void refreshCardBackPreview() -> k
    359:378:void selectRadioButtonsBasedOnDirectories() -> l
    383:408:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    413:425:void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
screen.PreferencesPanelGameplay -> screen.u:
    int gameMode -> b
    boolean includeJokers -> c
    int numberOfCards -> d
    int jokerQuantity -> e
    int jokerValue -> f
    boolean playBlind -> g
    boolean playWithHandicap -> h
    int handicapAmount -> i
    boolean includeStars -> j
    boolean includeMoons -> k
    boolean negativeJacks -> l
    boolean cardReveal -> m
    javax.swing.JLabel lblGameplay -> n
    javax.swing.JSeparator separatorTitle -> o
    javax.swing.JPanel panelGameMode -> p
    javax.swing.ButtonGroup bgMode -> q
    javax.swing.JRadioButton rdbtnEntropy -> r
    javax.swing.JRadioButton rdbtnVectropy -> s
    javax.swing.JPanel panelStartingCards -> t
    javax.swing.JSlider numberOfCardsSlider -> u
    javax.swing.JPanel panelGameplay -> v
    javax.swing.JPanel handicapPanel -> w
    javax.swing.JCheckBox cbHandicap -> z
    javax.swing.JSpinner handicapAmountSpinner -> A
    javax.swing.JCheckBox cbPlayBlind -> B
    javax.swing.JCheckBox cbPlayersRevealCards -> C
    javax.swing.JPanel panelDeck -> eD
    javax.swing.JPanel panelJokers -> eE
    javax.swing.JCheckBox cbJokers -> eF
    javax.swing.JSpinner jokerQuantitySpinner -> eG
    javax.swing.JLabel lblWorth -> eH
    javax.swing.JSpinner jokerValueSpinner -> eI
    javax.swing.JCheckBox cbNegativeJacks -> eJ
    javax.swing.JCheckBox cbIncludeMoons -> eK
    javax.swing.JCheckBox cbIncludeStars -> eL
    javax.swing.JLabel lblWarning -> eM
    156:182:void initVariables() -> a
    187:187:boolean valid() -> b
    193:215:void savePreferences() -> c
    219:231:void getVariablesFromPreferences() -> d
    235:254:void adjustHandicapSpinner() -> e
    258:264:void hideLockedFields() -> f
    269:285:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    290:308:void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
    313:330:void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
screen.PreferencesPanelMisc -> screen.v:
    int GAME_SPEED_SLOW -> b
    int GAME_SPEED_MEDIUM -> c
    int GAME_SPEED_FAST -> d
    boolean autosave -> e
    int gameSpeed -> f
    boolean saveReplays -> g
    java.lang.String replayDirectory -> h
    int replayDefault -> i
    boolean autoStartNextRound -> j
    int autoStartSeconds -> k
    boolean popUpRoomsOnline -> l
    boolean checkForUpdates -> m
    javax.swing.JLabel lblOtherOptions -> n
    javax.swing.JSeparator separator_3 -> o
    javax.swing.JFileChooser fc -> p
    javax.swing.JTextField chosenDirectory -> q
    javax.swing.JCheckBox chckbxSaveReplays -> r
    javax.swing.JButton btnSelectDirectory -> s
    javax.swing.JCheckBox chckbxAutosave -> t
    javax.swing.ButtonGroup bgSpeed -> u
    javax.swing.JRadioButton rdbtnSlow -> v
    javax.swing.JRadioButton rdbtnMedium -> w
    javax.swing.JRadioButton rdbtnFast -> z
    javax.swing.JLabel lblGameSpeed -> A
    javax.swing.JCheckBox chckbxAutoStartNextRound -> B
    javax.swing.JCheckBox chckbxPopUpRooms -> C
    javax.swing.JSpinner spinnerAutoStartSeconds -> eD
    javax.swing.JLabel lblSeconds -> eE
    javax.swing.JLabel lblReplayViewerDefaults -> eF
    javax.swing.ButtonGroup bgReplayRound -> eG
    javax.swing.JRadioButton rdbtnFirstRound -> eH
    javax.swing.JRadioButton rdbtnLastRound -> eI
    javax.swing.JCheckBox chckbxCheckForUpdates -> eJ
    144:164:void initVariables() -> a
    169:169:boolean valid() -> b
    175:190:void savePreferences() -> c
    194:203:void getVariablesFromPrefs() -> d
    207:242:boolean confirmChangeOfDirectory() -> e
    249:267:void selectReplayDirectory() -> f
    272:289:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    294:307:void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
screen.PreferencesPanelPlayers -> screen.w:
    java.lang.String playerName -> b
    java.lang.String opponentOneName -> c
    java.lang.String opponentTwoName -> d
    java.lang.String opponentThreeName -> e
    boolean opponentTwoEnabled -> f
    boolean opponentThreeEnabled -> g
    java.lang.String opponentOneStrategy -> h
    java.lang.String opponentTwoStrategy -> i
    java.lang.String opponentThreeStrategy -> j
    java.util.ArrayList apiStrategies -> k
    int gameMode -> l
    javax.swing.JLabel lblPlayers -> m
    javax.swing.JSeparator separator_2 -> n
    javax.swing.JLabel lblPlayerName -> o
    javax.swing.JTextField playerNameField -> p
    javax.swing.JTextField opponentOneNameField -> q
    javax.swing.JTextField opponentTwoNameField -> r
    javax.swing.JTextField opponentThreeNameField -> s
    javax.swing.JCheckBox cbOpponentTwo -> t
    javax.swing.JCheckBox cbOpponentThree -> u
    javax.swing.JComboBox opponentOneStrat -> v
    javax.swing.JComboBox opponentTwoStrat -> w
    javax.swing.JComboBox opponentThreeStrat -> z
    javax.swing.JLabel label -> A
    javax.swing.JSeparator separator_4 -> B
    javax.swing.JLabel lblApiHeader -> C
    javax.swing.JScrollPane scrollPane -> eD
    javax.swing.JTable tableApiStrategies -> eE
    javax.swing.JPopupMenu popupMenu -> eF
    javax.swing.JMenuItem amendItem -> eG
    javax.swing.JMenuItem deleteItem -> eH
    javax.swing.JMenuItem enableItem -> eI
    javax.swing.JButton btnNewApiStrategy -> eJ
    157:162:void initVariables() -> a
    167:181:boolean valid() -> b
    187:206:void savePreferences() -> c
    211:223:void getVariablesFromPrefs() -> d
    227:231:void setPlayerNames() -> e
    235:244:void setOpponentEnablementAndStrategies() -> f
    248:251:void setOpponentStrategies() -> g
    255:284:void buildApiTable() -> h
    288:297:void updateStrategySelection(int) -> a
    301:311:void enableApi(object.ApiStrategy) -> a
    315:317:void amendApi(object.ApiStrategy) -> b
    321:328:void deleteApi(object.ApiStrategy) -> c
    332:353:object.ApiStrategy getSelectedStrategyFromTable() -> i
    359:397:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    400:400:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    405:440:void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    443:443:void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    445:445:void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    447:447:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    452:463:void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
screen.ProgressDialog -> screen.x:
    int workToDo -> a
    boolean cancelPressed -> b
    java.lang.String message -> c
    javax.swing.JProgressBar progressBar -> d
    javax.swing.JButton btnCancel -> e
    59:67:screen.ProgressDialog factory(java.lang.String,java.lang.String,int) -> a
    72:80:void setVisibleLater() -> a
    84:95:void resetProgress() -> b
    99:100:void incrementProgressLater() -> c
    104:115:void incrementProgressLater(int) -> a
    121:121:boolean cancelPressed() -> d
    126:134:void disposeLater() -> e
    139:140:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    144:148:void showCancel(boolean) -> a
    54:54:javax.swing.JProgressBar access$0(screen.ProgressDialog) -> a
    21:21:int access$1(screen.ProgressDialog) -> b
    23:23:java.lang.String access$2(screen.ProgressDialog) -> c
screen.ProgressDialog$1 -> screen.x$1:
    screen.ProgressDialog this$0 -> a
    77:78:void run() -> run
screen.ProgressDialog$2 -> screen.x$2:
    screen.ProgressDialog this$0 -> a
    89:93:void run() -> run
screen.ProgressDialog$3 -> screen.x$3:
    screen.ProgressDialog this$0 -> a
    int val$increment -> b
    109:113:void run() -> run
screen.ProgressDialog$4 -> screen.x$4:
    screen.ProgressDialog this$0 -> a
    131:132:void run() -> run
screen.ReplayDialog -> screen.y:
    int RECENT_CHAT_MESSAGES_TO_SHOW -> a
    java.lang.String deckDirectory -> b
    java.lang.String jokerDirectory -> c
    java.lang.String numberOfColours -> d
    int totalRounds -> e
    int roundNumber -> f
    int playerNumberOfCards -> g
    int opponentOneNumberOfCards -> h
    int opponentTwoNumberOfCards -> i
    int opponentThreeNumberOfCards -> j
    int lastBidSuitCode -> k
    boolean playerEnabled -> l
    boolean opponentOneEnabled -> m
    boolean opponentTwoEnabled -> n
    boolean opponentThreeEnabled -> o
    java.lang.String[] opponentOneHand -> p
    java.lang.String[] playerHand -> q
    java.lang.String[] opponentTwoHand -> r
    java.lang.String[] opponentThreeHand -> s
    int jokerValue -> t
    boolean includeMoons -> u
    boolean includeStars -> v
    java.lang.String playerName -> w
    java.lang.String opponentOneName -> z
    java.lang.String opponentTwoName -> A
    java.lang.String opponentThreeName -> B
    java.lang.String replayType -> C
    int mode -> eD
    java.util.prefs.Preferences replay -> eE
    javax.swing.JSeparator separator -> eF
    java.awt.Panel panelOpponentCards -> eG
    javax.swing.JLabel opponentCard5 -> eH
    javax.swing.JLabel opponentCard4 -> eI
    javax.swing.JLabel opponentCard3 -> eJ
    javax.swing.JLabel opponentCard2 -> eK
    javax.swing.JLabel opponentCard1 -> eL
    java.awt.Panel panelOpponentThreeCards -> eM
    javax.swing.JLabel opponentThreeCard1 -> eN
    javax.swing.JLabel opponentThreeCard2 -> eO
    javax.swing.JLabel opponentThreeCard3 -> eP
    javax.swing.JLabel opponentThreeCard4 -> eQ
    javax.swing.JLabel opponentThreeCard5 -> eR
    java.awt.Panel panelOpponentTwoCards -> eS
    javax.swing.JLabel opponentTwoCard1 -> eT
    javax.swing.JLabel opponentTwoCard2 -> eU
    javax.swing.JLabel opponentTwoCard3 -> eV
    javax.swing.JLabel opponentTwoCard4 -> eW
    javax.swing.JLabel opponentTwoCard5 -> eX
    java.awt.Panel panelPlayerCards -> eY
    javax.swing.JLabel playerCard5 -> eZ
    javax.swing.JLabel playerCard4 -> fa
    javax.swing.JLabel playerCard3 -> fb
    javax.swing.JLabel playerCard2 -> fc
    javax.swing.JLabel playerCard1 -> fd
    javax.swing.JLabel[] opponentThreeCards -> fe
    javax.swing.JLabel[] opponentTwoCards -> ff
    javax.swing.JLabel[] opponentOneCards -> fg
    javax.swing.JLabel[] playerCards -> fh
    javax.swing.DefaultListModel listmodel -> fi
    javax.swing.JScrollPane scrollPane -> fj
    javax.swing.JList history -> fk
    javax.swing.JLabel lblBidHistory -> fl
    object.PlayerLabel lblOpponentOne -> fm
    object.PlayerLabel lblPlayer -> fn
    object.PlayerLabel lblOpponentTwo -> fo
    object.PlayerLabel lblOpponentThree -> fp
    javax.swing.JTextPane lblResult -> fq
    javax.swing.JPanel handsPanel -> fr
    javax.swing.JButton nextRound -> fs
    javax.swing.JButton previousRound -> ft
    javax.swing.JButton firstRound -> fu
    javax.swing.JButton lastRound -> fv
    javax.swing.JLabel lblFilter -> fw
    javax.swing.JToggleButton clubFilter -> fx
    javax.swing.JToggleButton diamondFilter -> fy
    javax.swing.JToggleButton heartFilter -> fz
    javax.swing.JToggleButton moonFilter -> fA
    javax.swing.JToggleButton spadeFilter -> fB
    javax.swing.JToggleButton starFilter -> fC
    javax.swing.JToggleButton noFilter -> fD
    javax.swing.ButtonGroup filterGroup -> fE
    online.screen.OnlineChatPanel chatPanel -> fF
    330:336:void initForInGameReplay() -> a
    339:354:void initForRoomReplay(online.screen.GameRoom) -> a
    358:382:void initForFileReplay(java.lang.String,java.lang.String) -> a
    388:410:void init() -> d
    414:432:void initVariables() -> e
    436:444:int getStartOrEndRoundNumber() -> f
    450:511:void setSizeAndChatVisibility() -> g
    515:520:void setRoundIndependentVariables() -> h
    524:528:void getEnabledPlayers() -> i
    532:547:void setPlayerNames() -> j
    551:570:void setLabelVisibility(object.PlayerLabel,java.lang.String,boolean,java.lang.String,java.lang.String) -> a
    574:584:boolean playerLeftThisRound(java.lang.String) -> a
    590:615:void populateHands() -> k
    619:630:void resetHandDisplay() -> l
    634:641:void displayHands() -> m
    645:657:void displayHand(javax.swing.JLabel[],java.lang.String[],int) -> a
    661:665:void highlightHands(int) -> a
    669:685:void highlightHand(int,java.lang.String[],javax.swing.JLabel[]) -> a
    689:697:void populateBidHistory() -> n
    701:715:void showResult(int) -> b
    719:735:void showEntropyResult(int) -> c
    739:742:void showVectropyResult(int) -> d
    746:751:void setResultText(java.lang.String) -> b
    755:782:void selectMatchingFilter() -> o
    786:804:void populateChat() -> p
    808:812:void toggleRoundNavigationButtons() -> q
    818:836:void initNewRound() -> r
    840:842:void showFirstHand() -> s
    846:848:void showLastHand() -> t
    852:854:void showNextHand() -> u
    858:860:void showPreviousHand() -> v
    866:894:void fireAppearancePreferencesChange() -> b
    898:915:int getFilterSuitFromFilters() -> w
    920:954:void setFilterIcons() -> x
    958:965:void roundAdded() -> c
    969:980:void initialiseListeners() -> y
    986:1043:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.ReplayFilterPanel -> screen.z:
    java.lang.String FILTER_MODE_EQUAL_TO -> a
    java.lang.String FILTER_MODE_GREATER_THAN -> b
    java.lang.String FILTER_MODE_LESS_THAN -> c
    java.lang.String GAME_MODE_ENTROPY -> d
    java.lang.String GAME_MODE_VECTROPY -> e
    java.lang.String[] filterModes -> f
    javax.swing.JRadioButton radioComplete -> g
    javax.swing.JRadioButton radioIncomplete -> h
    javax.swing.JRadioButton radioBoth -> i
    javax.swing.JCheckBox cbWins -> j
    javax.swing.JCheckBox cbLosses -> k
    javax.swing.JCheckBox cbUnknown -> l
    javax.swing.JCheckBox cbFilterByDate -> m
    de.wannawork.jcalendar.JCalendarComboBox cbDateFrom -> n
    de.wannawork.jcalendar.JCalendarComboBox cbDateTo -> o
    javax.swing.JCheckBox cbFilterByFlag -> p
    javax.swing.JCheckBox cbHandicap4 -> q
    javax.swing.JCheckBox cbHandicap3 -> r
    javax.swing.JCheckBox cbHandicap2 -> s
    javax.swing.JCheckBox cbHandicap1 -> t
    javax.swing.JCheckBox cbPerfect -> u
    javax.swing.JCheckBox cbFullyBlind -> v
    javax.swing.JCheckBox cbPartiallyBlind -> w
    javax.swing.JCheckBox cbBlank -> z
    javax.swing.JPanel datePanel -> A
    javax.swing.JPanel flagPanel -> B
    javax.swing.JLabel handicapOneFlag -> C
    javax.swing.JLabel handicapTwoFlag -> eD
    javax.swing.JLabel handicapThreeFlag -> eE
    javax.swing.JLabel handicapFourFlag -> eF
    javax.swing.JLabel perfectFlag -> eG
    javax.swing.JLabel blindFlag -> eH
    javax.swing.JLabel partiallyBlindFlag -> eI
    javax.swing.JLabel noFlagFlag -> eJ
    javax.swing.JLabel lblFrom -> eK
    javax.swing.JLabel lblTo -> eL
    javax.swing.JCheckBox cbFilterByRounds -> eM
    javax.swing.JPanel panel -> eN
    javax.swing.ComboBoxModel comboModel -> eO
    javax.swing.JComboBox roundFilterMode -> eP
    javax.swing.JSpinner roundFilterSpinner -> eQ
    javax.swing.JCheckBox cbFilterByGameMode -> eR
    javax.swing.JPanel panel_1 -> eS
    javax.swing.JCheckBox chckbxEntropy -> eT
    javax.swing.JCheckBox chckbxVectropy -> eU
    javax.swing.JPanel onlinePanel -> eV
    javax.swing.JCheckBox cbOnline -> eW
    javax.swing.JLabel onlineFlag -> eX
    javax.swing.JPanel moonPanel -> eY
    javax.swing.JCheckBox cbMoon -> eZ
    javax.swing.JLabel moonFlag -> fa
    javax.swing.JPanel starPanel -> fb
    javax.swing.JCheckBox cbStar -> fc
    javax.swing.JLabel starFlag -> fd
    javax.swing.JPanel moonAndStarPanel -> fe
    javax.swing.JCheckBox cbMoonAndStar -> ff
    javax.swing.JLabel moonAndStarFlag -> fg
    javax.swing.JPanel noFlagPanel -> fh
    248:267:void setMoonAndStarVisibility() -> a
    271:363:void setUpListeners() -> p
    367:379:void enableFlags(boolean) -> a
    383:395:void enableFlagBoxes(boolean) -> b
    399:403:void enableDatePanel(boolean) -> c
    407:407:boolean getShowComplete() -> b
    412:412:boolean getShowIncomplete() -> c
    417:417:boolean getShowWins() -> d
    422:422:boolean getShowLosses() -> e
    427:427:boolean getShowUnknown() -> f
    432:432:boolean getFilterByDate() -> g
    437:437:boolean getFilterByFlag() -> h
    442:442:boolean getFilterByRounds() -> i
    447:447:boolean getFilterByGameMode() -> j
    452:452:java.util.Date getDtFrom() -> k
    457:457:java.util.Date getDtTo() -> l
    462:480:boolean includesFlag(object.FlagImage) -> a
    485:496:boolean includesGameMode(java.lang.String) -> a
    501:521:boolean includesRoundNumber(java.lang.String) -> b
    527:582:boolean boxIsTickedForCode(java.lang.String) -> c
    587:589:boolean atLeastOneFlagSelected() -> m
    594:594:boolean atLeastOneModeSelected() -> n
    599:620:boolean valid() -> o
    193:193:javax.swing.JRadioButton access$0(screen.ReplayFilterPanel) -> a
    198:198:javax.swing.JCheckBox access$1(screen.ReplayFilterPanel) -> b
    196:196:javax.swing.JCheckBox access$2(screen.ReplayFilterPanel) -> c
    197:197:javax.swing.JCheckBox access$3(screen.ReplayFilterPanel) -> d
    194:194:javax.swing.JRadioButton access$4(screen.ReplayFilterPanel) -> e
    195:195:javax.swing.JRadioButton access$5(screen.ReplayFilterPanel) -> f
    199:199:javax.swing.JCheckBox access$6(screen.ReplayFilterPanel) -> g
    211:211:javax.swing.JPanel access$7(screen.ReplayFilterPanel) -> h
    202:202:javax.swing.JCheckBox access$8(screen.ReplayFilterPanel) -> i
    365:365:void access$9(screen.ReplayFilterPanel,boolean) -> a
    381:381:void access$10(screen.ReplayFilterPanel,boolean) -> b
    397:397:void access$11(screen.ReplayFilterPanel,boolean) -> c
    223:223:javax.swing.JCheckBox access$12(screen.ReplayFilterPanel) -> j
    226:226:javax.swing.JComboBox access$13(screen.ReplayFilterPanel) -> k
    227:227:javax.swing.JSpinner access$14(screen.ReplayFilterPanel) -> l
    228:228:javax.swing.JCheckBox access$15(screen.ReplayFilterPanel) -> m
    230:230:javax.swing.JCheckBox access$16(screen.ReplayFilterPanel) -> n
    231:231:javax.swing.JCheckBox access$17(screen.ReplayFilterPanel) -> o
screen.ReplayFilterPanel$1 -> screen.z$1:
    screen.ReplayFilterPanel this$0 -> a
    276:282:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.ReplayFilterPanel$2 -> screen.z$2:
    screen.ReplayFilterPanel this$0 -> a
    289:295:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.ReplayFilterPanel$3 -> screen.z$3:
    screen.ReplayFilterPanel this$0 -> a
    302:308:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.ReplayFilterPanel$4 -> screen.z$4:
    screen.ReplayFilterPanel this$0 -> a
    316:318:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.ReplayFilterPanel$5 -> screen.z$5:
    screen.ReplayFilterPanel this$0 -> a
    326:329:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.ReplayFilterPanel$6 -> screen.z$6:
    screen.ReplayFilterPanel this$0 -> a
    337:339:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.ReplayFilterPanel$7 -> screen.z$7:
    screen.ReplayFilterPanel this$0 -> a
    347:350:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.ReplayFilterPanel$8 -> screen.z$8:
    screen.ReplayFilterPanel this$0 -> a
    358:361:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.ReplayInterface -> screen.A:
    int INIT_MILLIS_STACK_TRACE_THRESHOLD -> a
    javax.swing.JFileChooser fc -> b
    javax.swing.JTabbedPane tabbedPane -> c
    javax.swing.JScrollPane personalReplaysScrollPane -> d
    javax.swing.JScrollPane importedReplaysScrollPane -> e
    javax.swing.JLabel noMyReplays -> f
    javax.swing.JLabel noImportedReplays -> g
    screen.ReplayFilterPanel personalFilterPanel -> h
    screen.ReplayFilterPanel importedFilterPanel -> i
    javax.swing.JTextField textField -> j
    javax.swing.JButton btnSelectFileToImport -> k
    javax.swing.JButton btnImport -> l
    javax.swing.JButton btnExport -> m
    javax.swing.JButton btnRefreshPersonal -> n
    javax.swing.JButton btnRefreshImported -> o
    javax.swing.JLabel myCount -> p
    javax.swing.JLabel importedCount -> q
    object.ReplayTable personalReplaysTable -> r
    object.ReplayTable importedReplaysTable -> s
    javax.swing.JPanel personalTab -> t
    javax.swing.JPanel panel -> u
    javax.swing.JPanel personalTablePanel -> v
    javax.swing.JPanel importedTablePanel -> w
    javax.swing.JPanel panel_3 -> z
    javax.swing.JPanel panel_4 -> A
    javax.swing.JPanel importedTab -> B
    javax.swing.JPanel panel_5 -> C
    javax.swing.JPanel panel_1 -> eD
    javax.swing.JPanel exportPanel -> eE
    javax.swing.JTextField lblFilename -> eF
    javax.swing.JButton btnConfigurePersonalColumns -> eG
    javax.swing.JButton btnConfigureImportedColumns -> eH
    194:220:void init() -> a
    224:245:void setScrollpaneViewport(javax.swing.JScrollPane,object.ReplayTable,javax.swing.JLabel) -> a
    251:273:void importReplays() -> b
    279:314:void exportReplay() -> c
    318:333:java.lang.String adjustFileExtensionIfNecessary(java.lang.String) -> a
    339:347:void selectImportDirectory() -> d
    352:382:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    387:389:void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
    394:397:void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    400:400:void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    402:402:void windowClosed(java.awt.event.WindowEvent) -> windowClosed
    404:404:void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    406:406:void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    408:408:void windowIconified(java.awt.event.WindowEvent) -> windowIconified
    410:410:void windowOpened(java.awt.event.WindowEvent) -> windowOpened
screen.ReplayInterface$EntSaveFilter -> screen.A$a:
    417:424:boolean accept(java.io.File) -> accept
    430:430:java.lang.String getDescription() -> getDescription
screen.RewardDialog -> screen.B:
    java.lang.String REWARD_BANNER_FOUR_COLOUR -> a
    java.lang.String REWARD_BANNER_NEGATIVE_JACKS -> b
    java.lang.String REWARD_BANNER_BLIND -> c
    java.lang.String REWARD_BANNER_MINIMALIST -> d
    java.lang.String REWARD_BANNER_VECTROPY -> e
    java.lang.String REWARD_BANNER_CARD_REVEAL -> f
    java.lang.String REWARD_BANNER_DEVELOPERS -> g
    java.lang.String REWARD_BANNER_ILLEGAL -> h
    java.lang.String REWARD_BANNER_EXTRA_SUITS -> i
    java.lang.String REWARD_BANNER_CHEATS -> j
    javax.swing.JLabel rewardTitle -> k
    javax.swing.JLabel imageBanner -> l
    javax.swing.JTextPane rewardDescription -> m
    javax.swing.JPanel topPanel -> n
    javax.swing.JPanel buttonPanel -> o
    javax.swing.JButton btnOk -> p
    73:79:void showDialog(java.lang.String,java.lang.String) -> a
    85:86:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    90:180:void setRewardDescriptionAndDialogSize(java.lang.String) -> a
screen.ScreenCache -> screen.C:
    screen.MainScreen mainScreen -> a
    screen.EntropyScreen entropyPanel -> b
    screen.VectropyScreen vectropyPanel -> c
    screen.AchievementsDialog achievementsDialog -> d
    screen.ReplayInterface replayInterface -> e
    screen.AboutDialog aboutDialog -> f
    screen.HelpDialog helpDialog -> g
    screen.ReplayDialog replayDialog -> h
    screen.ReplayDialog fileReplayDialog -> i
    screen.BugReportDialog bugReportDialog -> j
    screen.SimulationDialog simulationDialog -> k
    screen.ApiAmendDialog apiAmendDialog -> l
    screen.DebugConsole debugConsole -> m
    screen.LoadTesterDialog loadTesterDialog -> n
    online.screen.EntropyLobby entropyLobby -> o
    online.screen.Leaderboard leaderboard -> p
    online.screen.ConnectingDialog connectingDialog -> q
    online.screen.LoginDialog loginDialog -> r
    online.screen.NewAccountDialog newAccountDialog -> s
    online.screen.ChangePasswordDialog changePasswordDialog -> t
    online.screen.AccountSettingsDialog accountSettingsDialog -> u
    43:48:screen.MainScreen getMainScreen() -> a
    53:57:screen.DebugConsole getDebugConsole() -> b
    62:66:screen.AchievementsDialog getAchievementsDialog() -> c
    71:75:screen.ReplayInterface getReplayInterface() -> d
    80:84:screen.AboutDialog getAboutDialog() -> e
    89:93:screen.HelpDialog getHelpDialog() -> f
    98:102:online.screen.EntropyLobby getEntropyLobby() -> g
    107:111:online.screen.Leaderboard getLeaderboard() -> h
    116:120:online.screen.LoginDialog getLoginDialog() -> i
    125:129:online.screen.NewAccountDialog getNewAccountDialog() -> j
    134:138:screen.ReplayDialog getReplayDialog() -> k
    143:147:screen.ReplayDialog getFileReplayDialog() -> l
    152:156:screen.BugReportDialog getBugReportDialog() -> m
    161:166:screen.SimulationDialog getSimulationDialog() -> n
    171:176:screen.ApiAmendDialog getApiAmendDialog() -> o
    181:185:screen.LoadTesterDialog getLoadTesterDialog() -> p
    190:194:screen.EntropyScreen getEntropyPanel() -> q
    199:203:screen.VectropyScreen getVectropyPanel() -> r
    211:217:void showLoginDialog() -> s
    220:220:online.screen.ChangePasswordDialog getChangePasswordDialog() -> t
    224:225:void setChangePasswordDialog(online.screen.ChangePasswordDialog) -> a
    228:228:online.screen.AccountSettingsDialog getAccountSettingsDialog() -> u
    232:233:void setAccountSettingsDialog(online.screen.AccountSettingsDialog) -> a
    237:237:online.screen.ConnectingDialog getConnectingDialog() -> v
    241:242:void showConnectingDialog() -> w
    245:246:void dismissConnectingDialog() -> x
    250:251:boolean isPreLobbyDialogVisible() -> y
    255:256:boolean isVisible(javax.swing.JDialog) -> a
screen.SimulationDialog -> screen.D:
    long serialVersionUID -> a
    java.util.HashMap hmSimulationResultsByOpponentNumber -> b
    int numberOfGames -> c
    javax.swing.text.NumberFormatter integerFormat -> d
    java.lang.String[] COLUMN_TOOL_TIPS -> e
    javax.swing.JPanel cpuPanel -> f
    javax.swing.JCheckBox cbOpponentTwo -> g
    javax.swing.JCheckBox cbOpponentThree -> h
    javax.swing.JComboBox opponentOneStrat -> i
    javax.swing.JComboBox opponentTwoStrat -> j
    javax.swing.JComboBox opponentThreeStrat -> k
    javax.swing.JComboBox opponentZeroStrat -> l
    javax.swing.JLabel lblTimeTaken -> m
    java.awt.Checkbox cbLogging -> n
    java.awt.Checkbox cbForceStart -> o
    java.awt.Checkbox cbRandomiseOrder -> p
    javax.swing.JFormattedTextField gamesToSimulate -> q
    javax.swing.JTabbedPane tabbedPane -> r
    javax.swing.JPanel advancedSettingsPanel -> s
    javax.swing.JLabel lblCpu -> t
    javax.swing.JLabel lblCpu_3 -> u
    javax.swing.JLabel lblCpu_4 -> v
    javax.swing.JTable resultsTable -> w
    javax.swing.JScrollPane scrollPane -> z
    javax.swing.JSlider slider -> A
    javax.swing.JSpinner spinnerJokerQuantity -> B
    javax.swing.JSpinner spinnerJokerValue -> C
    javax.swing.JLabel lblValue -> D
    javax.swing.JLabel lblQuantity -> E
    javax.swing.JCheckBox cbIncludeJokers -> F
    javax.swing.JButton btnRunSimulation -> G
    javax.swing.JRadioButton rdbtnEntropy -> H
    javax.swing.JRadioButton rdbtnVectropy -> I
    javax.swing.JCheckBox chckbxIncludeMoons -> J
    javax.swing.JCheckBox chckbxIncludeStars -> K
    javax.swing.JCheckBox chckbxNegativeJacks -> L
    javax.swing.JCheckBox chckbxCardReveal -> M
    252:265:void showLoggingWarningMessage() -> c
    269:278:void initVariables() -> a
    284:295:void runSimulation() -> d
    299:360:void runSimulationInSeparateThread(util.SimulationParms) -> a
    364:374:void simulationCancelled(double,int,util.SimulationParms) -> a
    378:384:void simulationCompleted(double,util.SimulationParms) -> a
    388:389:void resetVariables() -> e
    393:436:void generateAndShowTable(util.SimulationParms) -> b
    440:446:void addRowIfApplicable(java.util.Vector,java.lang.String,int) -> a
    450:458:java.util.Vector getColumnTitles() -> f
    463:470:void recordWin(int,boolean) -> a
    474:476:void recordOpportunityToChallenge(int) -> a
    480:487:void recordChallenge(int,boolean) -> b
    491:498:util.SimulationResults getResults(int) -> b
    503:575:void setUpListeners() -> g
    579:589:void updateStrategySelection() -> h
    593:637:util.SimulationParms factorySimulationParms() -> i
    642:657:void dumpSimulationDetails(int,int,util.SimulationParms) -> a
    53:53:int access$0(screen.SimulationDialog) -> a
    362:362:void access$1(screen.SimulationDialog,double,int,util.SimulationParms) -> a
    577:577:void access$2(screen.SimulationDialog) -> b
    240:240:javax.swing.JButton access$3(screen.SimulationDialog) -> c
    640:640:void access$4(screen.SimulationDialog,int,int,util.SimulationParms) -> a
    386:386:void access$5(screen.SimulationDialog) -> d
    376:376:void access$6(screen.SimulationDialog,double,util.SimulationParms) -> a
    56:56:java.lang.String[] access$7() -> b
    280:280:void access$8(screen.SimulationDialog) -> e
    223:223:java.awt.Checkbox access$9(screen.SimulationDialog) -> f
    248:248:void access$10(screen.SimulationDialog) -> g
    239:239:javax.swing.JCheckBox access$11(screen.SimulationDialog) -> h
    237:237:javax.swing.JLabel access$12(screen.SimulationDialog) -> i
    238:238:javax.swing.JLabel access$13(screen.SimulationDialog) -> j
    235:235:javax.swing.JSpinner access$14(screen.SimulationDialog) -> k
    236:236:javax.swing.JSpinner access$15(screen.SimulationDialog) -> l
    216:216:javax.swing.JCheckBox access$16(screen.SimulationDialog) -> m
    219:219:javax.swing.JComboBox access$17(screen.SimulationDialog) -> n
    217:217:javax.swing.JCheckBox access$18(screen.SimulationDialog) -> o
    220:220:javax.swing.JComboBox access$19(screen.SimulationDialog) -> p
screen.SimulationDialog$1 -> screen.D$1:
    screen.SimulationDialog this$0 -> a
    util.SimulationParms val$parms -> b
    304:355:void run() -> run
screen.SimulationDialog$2 -> screen.D$2:
    screen.SimulationDialog this$0 -> a
    407:407:javax.swing.table.JTableHeader createDefaultTableHeader() -> createDefaultTableHeader
    419:419:boolean isCellEditable(int,int) -> isCellEditable
screen.SimulationDialog$2$1 -> screen.D$2$1:
    screen.SimulationDialog$2 this$1 -> a
    410:413:java.lang.String getToolTipText(java.awt.event.MouseEvent) -> getToolTipText
screen.SimulationDialog$3 -> screen.D$3:
    screen.SimulationDialog this$0 -> a
    508:509:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.SimulationDialog$4 -> screen.D$4:
    screen.SimulationDialog this$0 -> a
    517:522:void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
screen.SimulationDialog$5 -> screen.D$5:
    screen.SimulationDialog this$0 -> a
    530:535:void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
screen.SimulationDialog$6 -> screen.D$6:
    screen.SimulationDialog this$0 -> a
    543:545:void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
screen.SimulationDialog$7 -> screen.D$7:
    screen.SimulationDialog this$0 -> a
    553:555:void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
screen.SimulationDialog$8 -> screen.D$8:
    screen.SimulationDialog this$0 -> a
    563:564:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.SimulationDialog$9 -> screen.D$9:
    screen.SimulationDialog this$0 -> a
    572:573:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.StatisticsDialog -> screen.E:
    java.util.Timer timer -> a
    boolean vectropyUnlocked -> b
    javax.swing.JButton btnOk -> c
    javax.swing.JTextPane entropyStats -> d
    javax.swing.JTextPane vectropyStats -> e
    javax.swing.JTextPane overallStats -> f
    javax.swing.JLabel timePlayedField -> g
    java.awt.Panel panel_1 -> h
    javax.swing.JSeparator separator_2 -> i
    javax.swing.JTextPane streaksField -> j
    136:140:void initVariables() -> a
    144:149:void setStatisticsText() -> b
    153:184:void setEntropyStatisticsText() -> c
    188:212:void setVectropyStatisticsText() -> d
    216:245:void setOverallStatisticsText() -> e
    249:261:void setStreaksText() -> f
    265:269:void setTimePlayedText() -> g
    273:282:void setUpListeners() -> h
    286:289:void closeDialog() -> i
    263:263:void access$0(screen.StatisticsDialog) -> a
    34:34:java.util.Timer access$1(screen.StatisticsDialog) -> b
    284:284:void access$2(screen.StatisticsDialog) -> c
screen.StatisticsDialog$1 -> screen.E$1:
    screen.StatisticsDialog this$0 -> a
    279:280:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.StatisticsDialog$RefreshTask -> screen.E$a:
    screen.StatisticsDialog this$0 -> a
    298:305:void run() -> run
screen.VectropyBidPanel -> screen.F:
    object.VectropyBid lastBid -> c
    boolean illegalAllowed -> d
    boolean includeMoons -> e
    boolean includeStars -> f
    boolean online -> g
    javax.swing.JButton btnBid -> h
    javax.swing.JButton btnChallenge -> i
    javax.swing.JButton btnIllegal -> j
    javax.swing.JPanel bidChallengePanel -> k
    javax.swing.JPanel totalCardsPanel -> l
    javax.swing.JLabel smallCardIcon -> m
    javax.swing.JLabel totalCardsLabel -> n
    javax.swing.JSpinner clubSpinner -> o
    javax.swing.JSpinner diamondSpinner -> p
    javax.swing.JSpinner heartSpinner -> q
    javax.swing.JSpinner spadeSpinner -> r
    javax.swing.JTextField clubLabel -> s
    javax.swing.JTextField diamondLabel -> t
    javax.swing.JTextField heartLabel -> u
    javax.swing.JTextField spadeLabel -> v
    javax.swing.JPanel heartsPanel -> w
    javax.swing.JPanel spadesPanel -> z
    javax.swing.JPanel topPanel -> A
    javax.swing.JPanel leftPaddingPanel -> B
    javax.swing.JPanel moonsPanel -> C
    javax.swing.JTextField moonLabel -> eD
    javax.swing.JSpinner moonSpinner -> eE
    javax.swing.JPanel starsPanel -> eF
    javax.swing.JTextField starLabel -> eG
    javax.swing.JSpinner starSpinner -> eH
    215:231:void init(int,int,boolean,boolean,boolean,boolean) -> a
    236:252:void adjust(object.Bid) -> a
    256:262:void setIllegalButtonState() -> d
    266:281:void updateSpinnerColours() -> e
    285:288:void setBidButtonState() -> f
    292:310:object.VectropyBid getBidFromSpinners() -> g
    316:320:void fireAppearancePreferencesChange() -> a
    325:328:void saveState(java.util.prefs.Preferences) -> b
    333:350:void loadState(java.util.prefs.Preferences) -> a
    355:373:void showBidPanel(boolean) -> a
    378:392:void enableBidPanel(boolean) -> b
    397:399:void enableChallenge(boolean) -> c
    404:405:void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
    410:433:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
screen.VectropyScreen -> screen.G:
    long serialVersionUID -> q
    boolean earnedMathematician -> r
    42:46:void showResult() -> a
    51:57:void initVariablesForNewGame() -> b
    64:71:void fireAppearancePreferencesChange() -> c
    76:89:void saveGame() -> d
    94:99:void loadLastBid() -> f
    104:105:void loadSpecificVariables() -> g
    110:131:java.lang.String processCommand(java.lang.String) -> a
    139:140:void setLastBid(object.VectropyBid) -> a
    145:145:int getGameMode() -> h
    151:151:int getLastBidSuitCode() -> i
    157:158:void unlockPerfectBidAchievements() -> j
    163:164:void setPerfectBidBooleans() -> k
util.AchievementsUtil -> c.a:
    int ACHIEVEMENTS_TOTAL -> a
    int DISTINCT_PLAYERS_NEEDED_FOR_SOCIAL -> b
    int[] KONAMI_CODE -> c
    34:57:void updateStreaksForLoss() -> a
    63:90:void recordWin(int) -> a
    94:110:void updateStreaksForWin() -> l
    114:137:void unlockWinningStreakAchievements() -> m
    141:172:void unlockEntropyWinAchievements() -> n
    176:207:void unlockVectropyWinAchievements() -> o
    213:228:void checkForPerfectGame(int,int) -> a
    232:253:void unlockPerfectGameAchievements(int,int) -> b
    259:274:void checkForFullBlindGame(int,boolean,boolean) -> a
    278:305:void unlockFullBlindGameAchievements(int,boolean,boolean) -> b
    309:323:void unlockNuclearStrike(int,int,boolean,boolean) -> a
    327:353:void unlockHandicapAchievements(int,int) -> c
    359:378:void recordGamePlayed(int) -> b
    382:415:void unlockGamesPlayedAchievements() -> p
    419:422:int getTotalGamesPlayed() -> q
    427:440:void updateOnlineStats(org.w3c.dom.Element) -> a
    443:443:int getTotalWins(java.lang.String,org.w3c.dom.Element) -> a
    447:447:int getTotalLosses(java.lang.String,org.w3c.dom.Element) -> b
    451:453:int getTotal(java.lang.String,org.w3c.dom.Element,java.lang.String) -> a
    458:483:void unlockSecondThoughts(java.lang.String) -> a
    488:532:void unlockEntropyPerfectBidAchievements(boolean,boolean,boolean,boolean,boolean,boolean,boolean) -> a
    536:547:void unlockVectropyPerfectBidAchievements(boolean,boolean) -> a
    551:562:boolean areThreeOrMoreTrue(boolean[]) -> a
    567:574:void unlockSpectator(boolean,boolean) -> b
    578:583:void unlockPrecision(boolean,int) -> a
    587:591:void unlockCoward(boolean,boolean,boolean) -> a
    595:600:void setCowardToBeUnlocked() -> b
    604:610:void unlockCoward() -> c
    614:614:boolean isDistractedUnlocked() -> d
    618:625:void unlockDistracted() -> e
    629:636:void unlockCitizensArrest() -> f
    640:647:void unlockConnected() -> g
    651:658:void unlockRailbird() -> h
    662:669:void unlockBlueScreenOfDeath() -> i
    673:681:void updateAndUnlockVanity() -> j
    685:747:void unlockRewards(int) -> c
    751:778:void updateAndUnlockSocial(java.util.concurrent.ConcurrentHashMap) -> a
    782:783:boolean containsExact(java.lang.String,java.lang.String) -> a
    788:795:void unlockSocial() -> r
    799:806:void unlockKonamiCode() -> k
    810:825:boolean hasEnteredKonamiCode(java.util.ArrayList) -> a
    830:832:void showAchievementPopup(java.lang.String,javax.swing.ImageIcon) -> a
util.ApiUtil -> c.b:
    java.lang.String API_PREFIX -> a
    java.lang.String MESSAGE_TYPE_XML -> b
    java.lang.String MESSAGE_TYPE_JSON -> c
    java.lang.String ROOT_TAG_API_MESSAGE -> d
    java.net.InetAddress INET_ADDRESS_LOCALHOST -> e
    java.util.HashMap hmNameToApiStrategy -> f
    object.ApiStrategy apiStrategy -> g
    46:55:void sendTestMessage(int,boolean) -> a
    59:72:object.Bid processApiTurn(util.StrategyParms,object.Player) -> a
    77:132:java.lang.String sendWithCatch(java.lang.String,int,boolean,boolean) -> a
    137:142:java.lang.String factoryApiMessage(util.StrategyParms,object.Player,java.lang.String) -> a
    147:228:java.lang.String factoryXmlApiMessage(util.StrategyParms,object.Player) -> b
    241:247:java.lang.String factoryJsonApiMessage(util.StrategyParms,object.Player) -> c
    252:281:object.Bid handleResponse(util.StrategyParms,java.lang.String) -> a
    289:308:object.Bid factoryBid(util.StrategyParms,org.w3c.dom.Element,java.lang.String) -> a
    314:321:void showMalformedResponseError(java.lang.String) -> b
    325:359:void initialiseStrategyHashMap() -> c
    363:377:java.util.ArrayList getApiStrategiesFromPreferences() -> a
    382:391:object.ApiStrategy getApiStrategy(java.lang.String) -> a
    397:424:void saveApiStrategiesToPreferences(java.util.ArrayList) -> a
    428:429:void clearCache() -> b
    434:450:void saveStrategyErrorAndUnsetStrategies(object.ApiStrategy,java.lang.String) -> a
    454:459:void resetCpuStrategy(java.lang.String,java.lang.String) -> a
util.ArrayUtil -> c.c:
    7:24:java.lang.String getPrintableArray(byte[]) -> a
util.Base64Desktop -> c.d:
    12:13:java.lang.String encode(byte[]) -> a
    19:19:byte[] decode(byte[]) -> b
    25:25:byte[] decode(java.lang.String) -> a
util.Base64Interface -> c.e:
    java.lang.String encode(byte[]) -> a
    byte[] decode(byte[]) -> b
    byte[] decode(java.lang.String) -> a
util.BidListener -> c.f:
    void bidMade(object.Bid) -> b
    void challengeMade() -> K
    void illegalCalled() -> L
util.BooleanWrapper -> c.g:
    boolean b -> a
    14:14:boolean getValue() -> a
    18:19:void setValue(boolean) -> a
util.CardsUtil -> c.h:
    int SUIT_CLUBS -> a
    int SUIT_DIAMONDS -> b
    int SUIT_HEARTS -> c
    int SUIT_MOONS -> d
    int SUIT_SPADES -> e
    int SUIT_STARS -> f
    java.lang.String CLUBS_SYMBOL -> g
    java.lang.String DIAMONDS_SYMBOL -> h
    java.lang.String HEARTS_SYMBOL -> i
    java.lang.String MOONS_SYMBOL -> j
    java.lang.String SPADES_SYMBOL -> k
    java.lang.String STARS_SYMBOL -> l
    java.util.HashMap hmSuitCodeToWrapper -> m
    33:51:boolean isRelevant(java.lang.String,int) -> a
    57:87:int countSuit(java.lang.String[],int,int) -> a
    94:147:java.util.List createAndShuffleDeck(boolean,int,boolean,boolean,boolean) -> a
    152:167:java.util.HashMap getEvBySuitHashMapIncludingMyHand(java.lang.String[],util.StrategyParms) -> a
    172:212:double getExpectedValueForSuitIncludingMyHand(java.lang.String[],int,util.StrategyParms) -> a
    217:217:int countClubs(java.lang.String[],int) -> a
    221:221:int countDiamonds(java.lang.String[],int) -> b
    225:225:int countHearts(java.lang.String[],int) -> c
    229:229:int countSpades(java.lang.String[],int) -> d
    233:233:int countMoons(java.lang.String[],int) -> e
    237:237:int countStars(java.lang.String[],int) -> f
    242:271:int actuallyCountSuit(java.lang.String,java.lang.String[],int) -> a
    277:280:int countSuit(int,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],int) -> a
    285:295:int countSuit(int,java.util.concurrent.ConcurrentHashMap,int) -> a
    300:305:boolean isClub(java.lang.String) -> c
    310:315:boolean isHeart(java.lang.String) -> d
    320:324:boolean isDiamond(java.lang.String) -> e
    329:333:boolean isSpade(java.lang.String) -> f
    338:342:boolean isMoon(java.lang.String) -> g
    347:351:boolean isStar(java.lang.String) -> h
    356:366:boolean isCardAceOrJoker(java.lang.String) -> i
    371:387:double getUnseenCards(int,int,int,int,int) -> a
    392:410:java.util.ArrayList getSuitCodesVector(boolean,boolean) -> a
    415:425:boolean containsNonJoker(java.lang.String[]) -> a
    430:443:java.lang.String getHandStr(java.lang.String[]) -> b
    448:463:java.util.HashMap getSuitWrapperHashMap() -> a
    468:482:java.lang.String getSuitDesc(int,int) -> a
    487:488:java.lang.String getSuitSymbolForCode(int) -> a
    493:494:java.lang.String getColourForSuitCode(int) -> b
    499:524:java.lang.String getCardHtml(java.lang.String) -> a
    529:545:int getSuitCodeForSuitDesc(java.lang.String) -> b
util.CoreRegistry -> c.i:
    java.util.prefs.Preferences instance -> x
    java.lang.String INSTANCE_STRING_USER_NAME -> y
    java.lang.String INSTANCE_BOOLEAN_ENABLE_EMAILS -> D
    java.lang.String INSTANCE_INT_REPLAY_CONVERSION -> E
util.CpuStrategies -> c.j:
    java.lang.String STRATEGY_BASIC -> a
    java.lang.String STRATEGY_EV -> b
    20:29:java.util.Vector getAllStrategies(boolean,java.util.ArrayList) -> a
    35:48:void appendRelevantStrategies(java.util.Vector,java.util.ArrayList,boolean) -> a
    52:57:java.util.Vector getFixedStrategies(boolean) -> a
    65:110:object.Bid processOpponentTurn(util.StrategyParms,object.Player) -> a
    115:125:object.Bid getOpponentBid(util.StrategyParms,object.Player,boolean) -> a
    136:149:void setRandomCardToRevealIfNecessary(object.Player,object.Bid,util.StrategyParms) -> a
    153:206:java.lang.String validateBid(object.Player,object.Bid,util.StrategyParms) -> b
    211:222:java.lang.String validateChallengeOrIllegal(object.Bid,util.StrategyParms) -> a
    227:252:java.lang.String validateEntropyBid(object.EntropyBid,util.StrategyParms) -> a
    257:272:java.lang.String validateVectropyBid(object.VectropyBid) -> a
    280:294:java.lang.String[] getCombinedArrayOfCardsICanSee(java.lang.String[],util.StrategyParms) -> a
    303:329:void setCardToReveal(object.Bid,util.StrategyParms,object.Player) -> a
util.DateUtil -> c.k:
    java.sql.Date END_OF_TIME -> a
    11:11:java.sql.Date getSqlDateNow() -> a
    16:37:java.lang.String formatHHMMSS(double) -> a
util.Debug -> c.l:
    java.lang.String SUCCESS_MESSAGE -> a
    long ERROR_MESSAGE_DELAY_MILLIS -> b
    long MINIMUM_EMAIL_GAP_MILLIS -> c
    java.lang.Object emailSyncObject -> d
    long lastErrorMillis -> e
    long lastEmailMillis -> f
    util.DebugOutput output -> g
    util.DebugExtension debugExtension -> h
    int positionLastEmailed -> i
    int emailsSentInSuccession -> j
    boolean sendingEmails -> k
    boolean logToSystemOut -> l
    boolean server -> m
    java.lang.String versionNumber -> n
    java.util.concurrent.ThreadFactory loggerFactory -> o
    java.util.concurrent.ExecutorService logService -> p
    47:48:void append(java.lang.String) -> a
    51:52:void append(java.lang.String,boolean) -> a
    55:56:void append(java.lang.String,boolean,boolean) -> a
    59:90:void append(java.lang.String,boolean,boolean,util.BooleanWrapper) -> a
    94:95:void appendWithoutDate(java.lang.String) -> b
    98:99:void appendWithoutDate(java.lang.String,boolean) -> b
    103:104:void appendTabbed(java.lang.String) -> c
    108:109:void appendBanner(java.lang.String) -> d
    113:124:void appendBannerWithoutDate(java.lang.String) -> e
    128:142:void appendBanner(java.lang.String,boolean) -> c
    149:151:void stackTrace(java.lang.String) -> f
    154:155:void stackTrace(java.lang.Throwable) -> a
    158:159:void stackTrace(java.lang.Throwable,java.lang.String) -> a
    162:164:void stackTraceNoError(java.lang.String) -> g
    167:168:void stackTraceNoError(java.lang.Throwable) -> b
    171:172:void stackTraceNoError(java.lang.Throwable,java.lang.String) -> b
    175:214:void stackTrace(java.lang.Throwable,java.lang.String,boolean) -> a
    218:219:void stackTraceSilently(java.lang.String) -> h
    222:229:void stackTraceSilently(java.lang.Throwable) -> c
    233:234:void newLine() -> a
    241:253:void logSqlException(java.lang.String,java.sql.SQLException) -> a
    257:276:void dumpList(java.lang.String,java.util.List) -> a
    280:283:java.lang.String getCurrentTimeForLogging() -> b
    288:326:void sendContentsAsEmailInSeparateThread(java.lang.String,boolean,util.BooleanWrapper) -> a
    332:378:void sendContentsAsEmail(java.lang.String,boolean) -> e
    384:416:boolean sendBugReport(java.lang.String,java.lang.String) -> a
    421:429:boolean needToSendMoreLogs() -> e
    434:435:void setSendingEmails(boolean) -> a
    440:441:void initialise(util.DebugOutput) -> a
    445:446:void setServer(boolean) -> b
    449:450:void setDebugExtension(util.DebugExtension) -> a
    453:454:void setLogToSystemOut(boolean) -> c
    457:458:void setVersionNumber(java.lang.String) -> i
    23:23:util.DebugOutput access$0() -> c
    29:29:boolean access$1() -> d
    328:328:void access$2(java.lang.String,boolean) -> d
util.Debug$1 -> c.l$1:
    39:39:java.lang.Thread newThread(java.lang.Runnable) -> newThread
util.Debug$2 -> c.l$2:
    boolean val$includeDate -> a
    java.lang.String val$text -> b
    util.BooleanWrapper val$haveStackTraced -> c
    69:86:void run() -> run
util.Debug$3 -> c.l$3:
    util.BooleanWrapper val$readyToEmail -> a
    java.lang.String val$titleToUse -> b
    boolean val$manual -> c
    315:322:void run() -> run
util.DebugExtension -> c.m:
    void exceptionCaught(boolean) -> a
    void unableToEmailLogs() -> a
    void sendEmail(java.lang.String,java.lang.String) -> a
util.DebugOutput -> c.n:
    void append(java.lang.String) -> a
    java.lang.String getLogs() -> b
util.DebugUncaughtExceptionHandler -> c.o:
    10:21:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    29:40:boolean isSuppressed(java.lang.Throwable) -> a
util.DialogUtil -> c.p:
    screen.LoadingDialog loadingDialog -> a
    boolean shownConnectionLost -> b
    15:16:void showInfo(java.lang.String) -> a
    20:21:void showError(java.lang.String) -> b
    25:33:void showInfoLater(java.lang.String) -> c
    39:52:void invokeInfoLaterAndWait(java.lang.String) -> d
    56:64:void showErrorLater(java.lang.String) -> e
    68:74:int showQuestion(java.lang.String,boolean) -> a
    79:84:void showConnectionLost() -> a
    88:89:void showLoadingDialog(java.lang.String) -> f
    92:93:void dismissLoadingDialog() -> b
    97:98:void showDemoDialog() -> c
util.DialogUtil$1 -> c.p$1:
    java.lang.String val$infoText -> a
    30:31:void run() -> run
util.DialogUtil$2 -> c.p$2:
    java.lang.String val$infoText -> a
    44:45:void run() -> run
util.DialogUtil$3 -> c.p$3:
    java.lang.String val$errorText -> a
    61:62:void run() -> run
util.EmailUtil -> c.q:
    int MAX_ATTACHMENTS_TO_EMAIL -> a
    30:93:void sendEmail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList) -> a
util.EncryptionUtil -> c.r:
    int MINIMUM_PASSWORD_LENGTH -> a
    java.lang.String ALGORITHM_RSA_ECB_PKCS1PADDING -> d
    java.lang.String ALGORITHM_AES_ECB_PKCS5PADDING -> e
    boolean failedDecryptionLogging -> b
    util.Base64Interface base64Interface -> c
    28:29:java.lang.String convertSecretKeyToString(javax.crypto.SecretKey) -> a
    34:46:javax.crypto.SecretKey reconstructKeyFromString(java.lang.String) -> a
    51:51:java.lang.String encrypt(java.lang.String,java.security.Key) -> a
    55:85:java.lang.String encrypt(java.lang.String,java.security.Key,boolean) -> a
    90:90:java.lang.String decrypt(java.lang.String,java.security.Key) -> b
    94:120:java.lang.String decrypt(java.lang.String,java.security.Key,boolean) -> b
    127:136:java.lang.String sha256Hash(java.lang.String) -> b
    142:143:void setBase64Interface(util.Base64Interface) -> a
util.EntCpuStrategies -> c.s:
    java.lang.String STRATEGY_MARK -> a
    java.lang.String STRATEGY_RANDOMISE_PER_MOVE -> b
    java.lang.String[] STRATEGIES_TO_CHOOSE_AT_RANDOM -> c
    21:27:java.util.Vector getAllStrategies() -> a
    32:33:object.Bid processOpponentTurn(object.Player,util.StrategyParms) -> a
    37:55:object.Bid processOpponentTurn(java.lang.String,object.Player,util.StrategyParms) -> a
    61:235:object.Bid processMarkTurn(object.Player,util.StrategyParms) -> b
    243:261:int getSuitForMarkBid(util.MarkStrategySuitWrapper,boolean) -> a
    266:287:int markBid(int,int,int) -> a
    295:378:object.Bid processBasicTurn(object.Player,util.StrategyParms) -> c
    386:388:object.Bid processEvTurnAndRevealCard(object.Player,util.StrategyParms) -> d
    394:491:object.Bid processEvTurn(object.Player,util.StrategyParms) -> e
    539:550:object.EntropyBid opponentMinBid(int,int,boolean,boolean) -> a
    556:557:object.EntropyBid opponentOneUp(int,int,boolean) -> a
    562:574:object.EntropyBid opponentMinBidSuit(int,int,int,boolean) -> a
util.EntropyClientEmailer -> c.t:
    java.lang.String TEMP_DIRECTORY -> a
    java.lang.String LOG_FILENAME_PREFIX -> b
    23:24:void sendClientEmail(java.lang.String,java.lang.String) -> a
    27:43:void sendClientEmail(java.lang.String,java.lang.String,java.util.ArrayList) -> a
    46:57:void writeEmailToFile(org.w3c.dom.Document) -> a
    65:106:void tryToSendUnsentLogs() -> a
    110:122:void resendFromDebugFile(java.io.File) -> b
    127:127:java.lang.String sendEmailMessage(org.w3c.dom.Document) -> b
    108:108:void access$0(java.io.File) -> a
util.EntropyClientEmailer$1 -> c.t$1:
    77:79:boolean accept(java.io.File) -> accept
util.EntropyClientEmailer$2 -> c.t$2:
    java.io.File[] val$files -> a
    96:101:void run() -> run
util.EntropyColour -> c.u:
    java.awt.Color COLOUR_SUIT_PURPLE -> a
    java.awt.Color COLOUR_SUIT_GOLD -> b
    java.awt.Color COLOUR_SUIT_GREEN -> c
    java.awt.Color COLOUR_REPLAY_VICTORY -> d
    java.awt.Color COLOUR_REPLAY_UNKNOWN_OUTCOME -> e
    java.awt.Color COLOUR_REPLAY_UNFINISHED_AND_LOST -> f
    java.awt.Color COLOUR_HELP_TITLE -> g
    java.awt.Color COLOUR_LOBBY_PALER_BLUE -> h
    java.awt.Color COLOUR_LOBBY_PALE_BLUE -> i
    java.awt.Color COLOUR_LOBBY_MEDIUM_BLUE -> j
    java.awt.Color COLOUR_LOBBY_DARK_BLUE -> k
    java.awt.Color COLOUR_LOBBY_DARKER_BLUE -> l
    java.awt.Color COLOUR_STATS_WINS_TITLE_BACKGROUND -> m
    java.awt.Color COLOUR_STATS_WINS_BACKGROUND -> n
    java.awt.Color COLOUR_STATS_LOSSES_TITLE_BACKGROUND -> o
    java.awt.Color COLOUR_STATS_LOSSES_BACKGROUND -> p
    java.awt.Color COLOUR_LEADERBOARD_PALER_GREEN -> q
    java.awt.Color COLOUR_LEADERBOARD_PALE_GREEN -> r
    java.awt.Color COLOUR_LEADERBOARD_MEDIUM_GREEN -> s
    java.awt.Color COLOUR_LEADERBOARD_DARK_GREEN -> t
    java.awt.Color COLOUR_LEADERBOARD_DARKER_GREEN -> u
util.EntropyUtil -> c.v:
    10:14:int amountRequiredToBidInSuit(int,int,int) -> a
    20:30:int getPerfectBidAmount(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],int) -> a
    36:87:int getPerfectBidSuitCode(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],int,boolean) -> a
    93:94:object.EntropyBid getEmptyBid() -> a
util.FileUtil -> c.w:
    18:49:java.io.File createNewFile(java.lang.String,java.lang.String) -> a
    54:69:java.lang.String getMd5Crc(java.lang.String) -> a
    74:86:long getFileSize(java.lang.String) -> b
    91:103:boolean deleteFileIfExists(java.lang.String) -> c
    108:133:java.lang.String swapInFile(java.lang.String,java.lang.String) -> b
    138:152:void saveTextToFile(java.lang.String,java.nio.file.Path) -> a
    156:169:java.lang.String getFileContentsAsString(java.io.File) -> a
util.GameConstants -> c.x:
    int GAME_MODE_ENTROPY -> a
    int GAME_MODE_VECTROPY -> b
    int GAME_MODE_ENTROPY_ONLINE -> c
    int GAME_MODE_VECTROPY_ONLINE -> d
    12:22:java.lang.String getGameModeDesc(int) -> a
util.GameSimulator -> c.y:
    util.SimulationParms parms -> a
    int personToStart -> b
    object.Bid lastBid -> c
    object.Player opponentZero -> d
    object.Player opponentOne -> e
    object.Player opponentTwo -> f
    object.Player opponentThree -> g
    int[] playOrder -> h
    30:38:void startNewGame(int) -> a
    42:58:void startNewRound() -> a
    62:68:void populateHands(java.util.List) -> a
    72:102:void setRandomPersonToStart() -> b
    106:112:void knockOutPlayers() -> c
    116:122:void knockOut(object.Player) -> a
    126:159:boolean checkForResult() -> d
    164:173:void recordWin(object.Player) -> b
    177:210:void processOpponentTurn(object.Player) -> c
    214:239:void processChallenge(object.Player) -> d
    243:264:void initVariablesForSimulationNewGame() -> e
    268:323:void setPlayOrder(boolean) -> a
    327:338:void initVariablesForSimulationNewRound() -> f
    342:343:void log(java.lang.String) -> a
    347:360:util.StrategyParms getStrategyParms(object.Player) -> e
    365:378:object.Player getPlayer(int) -> b
    383:384:void setSimulationParms(util.SimulationParms) -> a
util.GameUtil -> c.z:
    17:34:int getWinningPlayer(int,int,int,int) -> a
    39:56:void showResultDialog(int,screen.HandPanelMk2) -> a
    61:87:int getMaxBid(boolean,int,int,int,boolean) -> a
    93:104:java.lang.String getColourForPlayerNumber(int) -> a
    110:119:int getNextPlayer(int) -> b
    125:125:boolean isEntropy(int) -> c
    130:130:boolean isOnline(int) -> d
    135:141:object.Bid getEmptyBid(int,boolean,boolean) -> a
    147:171:void populateHand(object.Player,java.util.List,boolean) -> a
    175:190:javax.swing.ImageIcon getImageForCard(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    199:199:javax.swing.ImageIcon getFadedImageForCard(java.lang.String,java.lang.String) -> a
    203:203:javax.swing.ImageIcon getFadedImageForCard(java.lang.String,java.lang.String,java.lang.String) -> a
util.LoadTester -> c.A:
    java.lang.String message -> a
    int stopCount -> b
    object.ProgressBar progressBar -> c
    27:45:void run() -> run
    49:61:void sendMessage(java.net.InetAddress) -> a
util.MarkStrategySuitWrapper -> c.B:
    java.util.HashMap hmSuitCountBySuitCode -> a
    java.util.ArrayList applicableSuits -> b
    java.util.ArrayList suitsPossibleToMinBid -> c
    int bestSuit -> d
    int worstSuit -> e
    67:87:void initialiseSuitsPossibleToMinBid(object.EntropyBid) -> a
    91:91:int getBestSuit() -> a
    95:95:int getWorstSuit() -> b
    100:109:int getRandomMiddleSuit() -> c
    114:127:int getRandomSuitExcluding(int[]) -> a
    132:136:int getRandomSuitPossibleToMinbid() -> d
    141:141:int getCountOfSuitsPossibleToMinbid() -> e
    147:152:java.lang.String toString() -> toString
util.OnlineConstants -> c.C:
    java.lang.String SERVER_VERSION -> i
    java.lang.String VERSION_NUMBER -> j
    int SERVER_PORT_NUMBER_LOWER_BOUND -> k
    int SERVER_PORT_NUMBER_UPPER_BOUND -> l
    int SERVER_PORT_NUMBER_DOWNLOAD -> m
    int SERVER_PORT_NUMBER_LOGS -> n
    int LOAD_TEST_PORT_NUMBER_LOWER_BOUND -> o
    int LOAD_TEST_PORT_NUMBER_UPPER_BOUND -> p
    java.lang.String LOBBY_ID -> q
util.Registry -> c.D:
    java.lang.String NODE_ONLINE_REPLAY -> F
    java.util.prefs.Preferences achievements -> G
    java.util.prefs.Preferences savedGame -> H
    java.util.prefs.Preferences prefs -> I
    java.util.prefs.Preferences rewards -> J
    java.util.prefs.Preferences inGameReplay -> K
    java.util.prefs.Preferences fileReplay -> L
    java.util.prefs.Preferences tempReplayStore -> M
    java.lang.String PREFERENCES_STRING_REPLAY_DIRECTORY -> N
    java.lang.String PREFERENCES_STRING_DECK_DIRECTORY -> O
    java.lang.String PREFERENCES_STRING_JOKER_DIRECTORY -> P
    java.lang.String PREFERENCES_STRING_NUMBER_OF_COLOURS -> Q
    java.lang.String PREFERENCES_STRING_CARD_BACKS -> R
    java.lang.String PREFERENCES_STRING_LOOK_AND_FEEL -> S
    java.lang.String PREFERENCES_STRING_OPPONENT_THREE_STRATEGY -> T
    java.lang.String PREFERENCES_STRING_OPPONENT_TWO_STRATEGY -> U
    java.lang.String PREFERENCES_STRING_OPPONENT_ONE_STRATEGY -> V
    java.lang.String PREFERENCES_STRING_OPPONENT_THREE_NAME -> W
    java.lang.String PREFERENCES_STRING_OPPONENT_TWO_NAME -> X
    java.lang.String PREFERENCES_STRING_OPPONENT_ONE_NAME -> Y
    java.lang.String PREFERENCES_STRING_PLAYER_NAME -> Z
    java.lang.String PREFERENCES_BOOLEAN_SAVE_REPLAYS -> aa
    java.lang.String PREFERENCES_BOOLEAN_AUTOSAVE -> ab
    java.lang.String PREFERENCES_BOOLEAN_AUTO_START_NEXT_ROUND -> ac
    java.lang.String PREFERENCES_BOOLEAN_POP_UP_ROOMS -> ad
    java.lang.String PREFERENCES_BOOLEAN_OPPONENT_THREE_ENABLED -> ae
    java.lang.String PREFERENCES_BOOLEAN_OPPONENT_TWO_ENABLED -> af
    java.lang.String PREFERENCES_BOOLEAN_PLAY_BLIND -> ag
    java.lang.String PREFERENCES_BOOLEAN_PLAY_WITH_HANDICAP -> ah
    java.lang.String PREFERENCES_BOOLEAN_INCLUDE_JOKERS -> ai
    java.lang.String PREFERENCES_BOOLEAN_INCLUDE_GAME_MODE_COLUMN -> aj
    java.lang.String PREFERENCES_BOOLEAN_INCLUDE_ROUNDS_COLUMN -> ak
    java.lang.String PREFERENCES_BOOLEAN_INCLUDE_PLAYERS_COLUMN -> al
    java.lang.String PREFERENCES_BOOLEAN_INCLUDE_CARDS_COLUMN -> am
    java.lang.String PREFERENCES_BOOLEAN_INCLUDE_ROOM_NAME_COLUMN -> an
    java.lang.String PREFERENCES_BOOLEAN_INCLUDE_STARS -> ao
    java.lang.String PREFERENCES_BOOLEAN_INCLUDE_MOONS -> ap
    java.lang.String PREFERENCES_BOOLEAN_NEGATIVE_JACKS -> aq
    java.lang.String PREFERENCES_BOOLEAN_CHECK_FOR_UPDATES -> ar
    java.lang.String PREFERENCES_BOOLEAN_CARD_REVEAL -> as
    java.lang.String PREFERENCES_INT_REPLAY_DEFAULT -> at
    java.lang.String PREFERENCES_INT_GAME_SPEED -> au
    java.lang.String PREFERENCES_INT_AUTO_START_SECONDS -> av
    java.lang.String PREFERENCES_INT_HANDICAP_AMOUNT -> aw
    java.lang.String PREFERENCES_INT_JOKER_VALUE -> ax
    java.lang.String PREFERENCES_INT_JOKER_QUANTITY -> ay
    java.lang.String PREFERENCES_INT_NUMBER_OF_CARDS -> az
    java.lang.String PREFERENCES_INT_REPLAY_VIEWER_HEIGHT -> aA
    java.lang.String PREFERENCES_INT_REPLAY_VIEWER_WIDTH -> aB
    java.lang.String PREFERENCES_INT_GAME_MODE -> aC
    java.lang.String PREFERENCES_XML_API_SETTINGS -> aD
    java.lang.String PREFERENCES_TAG_API -> aE
    java.lang.String PREFERENCES_ATTR_API_NAME -> aF
    java.lang.String PREFERENCES_ATTR_PORT_NUMNER -> aG
    java.lang.String PREFERENCES_ATTR_MESSAGE_TYPE -> aH
    java.lang.String PREFERENCES_ATTR_SUPPORTS_ENTROPY -> aI
    java.lang.String PREFERENCES_ATTR_SUPPORTS_VECTROPY -> aJ
    java.lang.String PREFERENCES_ATTR_ERROR -> aK
    java.lang.String REPLAY_STRING_OPPONENT_THREE_HAND -> aL
    java.lang.String REPLAY_STRING_OPPONENT_TWO_HAND -> aM
    java.lang.String REPLAY_STRING_OPPONENT_ONE_HAND -> aN
    java.lang.String REPLAY_STRING_PLAYER_HAND -> aO
    java.lang.String REPLAY_STRING_OPPONENT_THREE_NAME -> aP
    java.lang.String REPLAY_STRING_OPPONENT_TWO_NAME -> aQ
    java.lang.String REPLAY_STRING_OPPONENT_ONE_NAME -> aR
    java.lang.String REPLAY_STRING_PLAYER_NAME -> aS
    java.lang.String REPLAY_STRING_LISTMODEL -> aT
    java.lang.String REPLAY_STRING_PLAYER_COLOUR -> aU
    java.lang.String REPLAY_STRING_OPPONENT_ONE_COLOUR -> aV
    java.lang.String REPLAY_STRING_OPPONENT_TWO_COLOUR -> aW
    java.lang.String REPLAY_STRING_OPPONENT_THREE_COLOUR -> aX
    java.lang.String REPLAY_STRING_CHAT_CONTENT -> aY
    java.lang.String REPLAY_STRING_CHAT_COLOUR -> aZ
    java.lang.String REPLAY_STRING_CHAT_USERNAME -> ba
    java.lang.String REPLAY_STRING_OPPONENT_ONE_STRATEGY -> bb
    java.lang.String REPLAY_STRING_OPPONENT_TWO_STRATEGY -> bc
    java.lang.String REPLAY_STRING_OPPONENT_THREE_STRATEGY -> bd
    java.lang.String REPLAY_STRING_ROOM_NAME -> be
    java.lang.String REPLAY_BOOLEAN_HAS_ACTED_BLIND_THIS_GAME -> bf
    java.lang.String REPLAY_BOOLEAN_HAS_VIEWED_HAND_THIS_GAME -> bg
    java.lang.String REPLAY_BOOLEAN_PLAY_WITH_HANDICAP -> bh
    java.lang.String REPLAY_BOOLEAN_PLAY_BLIND -> bi
    java.lang.String REPLAY_BOOLEAN_OPPONENT_THREE_ENABLED -> bj
    java.lang.String REPLAY_BOOLEAN_OPPONENT_TWO_ENABLED -> bk
    java.lang.String REPLAY_BOOLEAN_OPPONENT_ONE_ENABLED -> bl
    java.lang.String REPLAY_BOOLEAN_PLAYER_ENABLED -> bm
    java.lang.String REPLAY_BOOLEAN_INCLUDE_MOONS -> bn
    java.lang.String REPLAY_BOOLEAN_INCLUDE_STARS -> bo
    java.lang.String REPLAY_BOOLEAN_CHEAT_USED -> bp
    java.lang.String REPLAY_INT_JOKER_VALUE -> bq
    java.lang.String REPLAY_INT_PERSON_TO_START -> br
    java.lang.String REPLAY_INT_LAST_BID_SUIT_CODE -> bs
    java.lang.String REPLAY_INT_HANDICAP_AMOUNT -> bt
    java.lang.String REPLAY_INT_OPPONENT_THREE_NUMBER_OF_CARDS -> bu
    java.lang.String REPLAY_INT_OPPONENT_TWO_NUMBER_OF_CARDS -> bv
    java.lang.String REPLAY_INT_OPPONENT_ONE_NUMBER_OF_CARDS -> bw
    java.lang.String REPLAY_INT_PLAYER_NUMBER_OF_CARDS -> bx
    java.lang.String REPLAY_INT_HISTORY_SIZE -> by
    java.lang.String REPLAY_INT_ROUNDS_SO_FAR -> bz
    java.lang.String REPLAY_INT_GAME_COMPLETE -> bA
    java.lang.String REPLAY_INT_PLAYER_WON -> bB
    java.lang.String REPLAY_INT_GAME_MODE -> bC
    java.lang.String ACHIEVEMENTS_BOOLEAN_GARDENER -> bD
    java.lang.String ACHIEVEMENTS_BOOLEAN_LION -> bE
    java.lang.String ACHIEVEMENTS_BOOLEAN_BURGLAR -> bF
    java.lang.String ACHIEVEMENTS_BOOLEAN_CAVEMAN -> bG
    java.lang.String ACHIEVEMENTS_BOOLEAN_FIVE_MINUTES -> bH
    java.lang.String ACHIEVEMENTS_BOOLEAN_FIFTEEN_MINUTES -> bI
    java.lang.String ACHIEVEMENTS_BOOLEAN_THIRTY_MINUTES -> bJ
    java.lang.String ACHIEVEMENTS_BOOLEAN_SIXTY_MINUTES -> bK
    java.lang.String ACHIEVEMENTS_BOOLEAN_TWO_HOURS -> bL
    java.lang.String ACHIEVEMENTS_BOOLEAN_COWARD -> bM
    java.lang.String ACHIEVEMENTS_BOOLEAN_SPECTATOR -> bN
    java.lang.String ACHIEVEMENTS_BOOLEAN_VANITY -> bO
    java.lang.String ACHIEVEMENTS_BOOLEAN_PERFECT_TWO_PLAYER_GAME -> bP
    java.lang.String ACHIEVEMENTS_BOOLEAN_PERFECT_THREE_PLAYER_GAME -> bQ
    java.lang.String ACHIEVEMENTS_BOOLEAN_PERFECT_FOUR_PLAYER_GAME -> bR
    java.lang.String ACHIEVEMENTS_BOOLEAN_PARTICIPANT -> bS
    java.lang.String ACHIEVEMENTS_BOOLEAN_HOBBYIST -> bT
    java.lang.String ACHIEVEMENTS_BOOLEAN_ENTHUSIAST -> bU
    java.lang.String ACHIEVEMENTS_BOOLEAN_PROFESSIONAL -> bV
    java.lang.String ACHIEVEMENTS_BOOLEAN_VETERAN -> bW
    java.lang.String ACHIEVEMENTS_BOOLEAN_MOMENTUM -> bX
    java.lang.String ACHIEVEMENTS_BOOLEAN_CHAIN_REACTION -> bY
    java.lang.String ACHIEVEMENTS_BOOLEAN_PERPETUAL_MOTION -> bZ
    java.lang.String ACHIEVEMENTS_BOOLEAN_FIRST_TIMER -> ca
    java.lang.String ACHIEVEMENTS_BOOLEAN_CASUAL_STRATEGIST -> cb
    java.lang.String ACHIEVEMENTS_BOOLEAN_CONSISTENT_WINNER -> cc
    java.lang.String ACHIEVEMENTS_BOOLEAN_DOMINANT_FORCE -> cd
    java.lang.String ACHIEVEMENTS_BOOLEAN_PSYCHIC -> ce
    java.lang.String ACHIEVEMENTS_BOOLEAN_SECOND_THOUGHTS -> cf
    java.lang.String ACHIEVEMENTS_BOOLEAN_FULL_BLIND_TWO -> cg
    java.lang.String ACHIEVEMENTS_BOOLEAN_FULL_BLIND_THREE -> ch
    java.lang.String ACHIEVEMENTS_BOOLEAN_FULL_BLIND_FOUR -> ci
    java.lang.String ACHIEVEMENTS_BOOLEAN_CHIMERA -> cj
    java.lang.String ACHIEVEMENTS_BOOLEAN_PRECISION -> ck
    java.lang.String ACHIEVEMENTS_BOOLEAN_MATHEMATICIAN -> cl
    java.lang.String ACHIEVEMENTS_BOOLEAN_NUCLEAR_STRIKE -> cm
    java.lang.String ACHIEVEMENTS_BOOLEAN_HANDICAP_TWO -> cn
    java.lang.String ACHIEVEMENTS_BOOLEAN_HANDICAP_THREE -> co
    java.lang.String ACHIEVEMENTS_BOOLEAN_HANDICAP_FOUR -> cp
    java.lang.String ACHIEVEMENTS_BOOLEAN_VECTROPY_ONE -> cq
    java.lang.String ACHIEVEMENTS_BOOLEAN_VECTROPY_TEN -> cr
    java.lang.String ACHIEVEMENTS_BOOLEAN_VECTROPY_TWENTY_FIVE -> cs
    java.lang.String ACHIEVEMENTS_BOOLEAN_VECTROPY_FIFTY -> ct
    java.lang.String ACHIEVEMENTS_BOOLEAN_DISTRACTED -> cu
    java.lang.String ACHIEVEMENTS_BOOLEAN_CITIZENS_ARREST -> cv
    java.lang.String ACHIEVEMENTS_BOOLEAN_CONNECTED -> cw
    java.lang.String ACHIEVEMENTS_BOOLEAN_RAILBIRD -> cx
    java.lang.String ACHIEVEMENTS_BOOLEAN_SOCIAL -> cy
    java.lang.String ACHIEVEMENTS_BOOLEAN_WEREWOLF -> cz
    java.lang.String ACHIEVEMENTS_BOOLEAN_SPACEMAN -> cA
    java.lang.String ACHIEVEMENTS_BOOLEAN_BLUE_SCREEN_OF_DEATH -> cB
    java.lang.String ACHIEVEMENTS_BOOLEAN_KONAMI_CODE -> cC
    java.lang.String ACHIEVEMENTS_BOOLEAN_WILL_UNLOCK_COWARD -> cD
    java.lang.String ACHIEVEMENTS_STRING_SOCIAL_LIST -> cE
    java.lang.String ACHIEVEMENTS_INT_VANITY_COUNT -> cF
    java.lang.String ACHIEVEMENTS_INT_OPPONENT_TWO_COEFF -> cG
    java.lang.String ACHIEVEMENTS_INT_OPPONENT_THREE_COEFF -> cH
    java.lang.String REWARDS_BOOLEAN_FOUR_COLOURS -> cI
    java.lang.String REWARDS_BOOLEAN_NEGATIVE_JACKS -> cJ
    java.lang.String REWARDS_BOOLEAN_MINIMALIST_DECK -> cK
    java.lang.String REWARDS_BOOLEAN_BLIND -> cL
    java.lang.String REWARDS_BOOLEAN_VECTROPY -> cM
    java.lang.String REWARDS_BOOLEAN_CARD_REVEAL -> cN
    java.lang.String REWARDS_BOOLEAN_DEVELOPER_JOKERS -> cO
    java.lang.String REWARDS_BOOLEAN_ILLEGAL -> cP
    java.lang.String REWARDS_BOOLEAN_EXTRA_SUITS -> cQ
    java.lang.String REWARDS_BOOLEAN_CHEATS -> cR
    java.lang.String STATISTICS_INT_ENTROPY_GAMES_PLAYED -> cS
    java.lang.String STATISTICS_INT_ENTROPY_ONLINE_GAMES_PLAYED -> cT
    java.lang.String STATISTICS_INT_VECTROPY_GAMES_PLAYED -> cU
    java.lang.String STATISTICS_INT_VECTROPY_ONLINE_GAMES_PLAYED -> cV
    java.lang.String STATISTICS_INT_ENTROPY_GAMES_WON -> cW
    java.lang.String STATISTICS_INT_ENTROPY_ONLINE_GAMES_WON -> cX
    java.lang.String STATISTICS_INT_VECTROPY_GAMES_WON -> cY
    java.lang.String STATISTICS_INT_VECTROPY_ONLINE_GAMES_WON -> cZ
    java.lang.String STATISTICS_INT_BEST_STREAK -> da
    java.lang.String STATISTICS_INT_WORST_STREAK -> db
    java.lang.String STATISTICS_INT_CURRENT_STREAK -> dc
    java.lang.String STATISTICS_DOUBLE_TIME_PLAYED -> dd
    java.lang.String SAVED_GAME_STRING_RESULT_TEXT -> de
    java.lang.String SAVED_GAME_STRING_TOTAL_CARDS_LABEL -> df
    java.lang.String SAVED_GAME_STRING_OPPONENT_THREE_STRATEGY -> dg
    java.lang.String SAVED_GAME_STRING_OPPONENT_TWO_STRATEGY -> dh
    java.lang.String SAVED_GAME_STRING_OPPONENT_ONE_STRATEGY -> di
    java.lang.String SAVED_GAME_STRING_OPPONENT_THREE_HAND -> dj
    java.lang.String SAVED_GAME_STRING_OPPONENT_TWO_HAND -> dk
    java.lang.String SAVED_GAME_STRING_OPPONENT_ONE_HAND -> dl
    java.lang.String SAVED_GAME_STRING_PLAYER_HAND -> dm
    java.lang.String SAVED_GAME_STRING_OPPONENT_THREE_NAME -> dn
    java.lang.String SAVED_GAME_STRING_OPPONENT_TWO_NAME -> do
    java.lang.String SAVED_GAME_STRING_OPPONENT_ONE_NAME -> dp
    java.lang.String SAVED_GAME_STRING_PLAYER_NAME -> dq
    java.lang.String SAVED_GAME_STRING_LISTMODEL -> dr
    java.lang.String SAVED_GAME_STRING_LAST_BID -> ds
    java.lang.String SAVED_GAME_STRING_PLAYER_REVEALED_CARD -> dt
    java.lang.String SAVED_GAME_STRING_OPPONENT_ONE_REVEALED_CARD -> du
    java.lang.String SAVED_GAME_STRING_OPPONENT_TWO_REVEALED_CARD -> dv
    java.lang.String SAVED_GAME_STRING_OPPONENT_THREE_REVEALED_CARD -> dw
    java.lang.String SAVED_GAME_BOOLEAN_EXITED_ON_CHALLENGE -> dx
    java.lang.String SAVED_GAME_BOOLEAN_FIRST_ROUND -> dy
    java.lang.String SAVED_GAME_BOOLEAN_INCLUDE_JOKERS -> dz
    java.lang.String SAVED_GAME_BOOLEAN_CHALLENGE_ENABLED -> dA
    java.lang.String SAVED_GAME_BOOLEAN_ILLEGAL_ENABLED -> dB
    java.lang.String SAVED_GAME_BOOLEAN_INCLUDE_STARS -> dC
    java.lang.String SAVED_GAME_BOOLEAN_INCLUDE_MOONS -> dD
    java.lang.String SAVED_GAME_BOOLEAN_CHEAT_USED -> dE
    java.lang.String SAVED_GAME_BOOLEAN_VIEW_CARDS_VISIBLE -> dF
    java.lang.String SAVED_GAME_BOOLEAN_HAS_ACTED_BLIND_THIS_GAME -> dG
    java.lang.String SAVED_GAME_BOOLEAN_HAS_VIEWED_HAND_THIS_GAME -> dH
    java.lang.String SAVED_GAME_BOOLEAN_PLAY_WITH_HANDICAP -> dI
    java.lang.String SAVED_GAME_BOOLEAN_PLAY_BLIND -> dJ
    java.lang.String SAVED_GAME_BOOLEAN_OPPONENT_THREE_ENABLED -> dK
    java.lang.String SAVED_GAME_BOOLEAN_OPPONENT_TWO_ENABLED -> dL
    java.lang.String SAVED_GAME_BOOLEAN_OPPONENT_ONE_ENABLED -> dM
    java.lang.String SAVED_GAME_BOOLEAN_PLAYER_ENABLED -> dN
    java.lang.String SAVED_GAME_BOOLEAN_IS_GAME_TO_CONTINUE -> dO
    java.lang.String SAVED_GAME_BOOLEAN_HAS_OVERBID -> dP
    java.lang.String SAVED_GAME_BOOLEAN_CAVEMAN -> dQ
    java.lang.String SAVED_GAME_BOOLEAN_BURGLAR -> dR
    java.lang.String SAVED_GAME_BOOLEAN_LION -> dS
    java.lang.String SAVED_GAME_BOOLEAN_GARDENER -> dT
    java.lang.String SAVED_GAME_BOOLEAN_MATHEMATICIAN -> dU
    java.lang.String SAVED_GAME_BOOLEAN_NEGATIVE_JACKS -> dV
    java.lang.String SAVED_GAME_BOOLEAN_CARD_REVEAL -> dW
    java.lang.String SAVED_GAME_BOOLEAN_REVEAL_LISTENER -> dX
    java.lang.String SAVED_GAME_INT_OPPONENT_THREE_CARDS_TO_SUBTRACT -> dY
    java.lang.String SAVED_GAME_INT_OPPONENT_TWO_CARDS_TO_SUBTRACT -> dZ
    java.lang.String SAVED_GAME_INT_OPPONENT_ONE_CARDS_TO_SUBTRACT -> ea
    java.lang.String SAVED_GAME_INT_PLAYER_CARDS_TO_SUBTRACT -> eb
    java.lang.String SAVED_GAME_INT_CURRENT_PLAYER -> ec
    java.lang.String SAVED_GAME_INT_JOKER_QUANTITY -> ed
    java.lang.String SAVED_GAME_INT_JOKER_VALUE -> ee
    java.lang.String SAVED_GAME_INT_PERSON_TO_START -> ef
    java.lang.String SAVED_GAME_INT_SLIDER_MINIMUM -> eg
    java.lang.String SAVED_GAME_INT_SLIDER_VALUE -> eh
    java.lang.String SAVED_GAME_INT_MAX_BID -> ei
    java.lang.String SAVED_GAME_INT_LAST_BID_AMOUNT -> ej
    java.lang.String SAVED_GAME_INT_LAST_BID_SUIT_CODE -> ek
    java.lang.String SAVED_GAME_INT_BID_SUIT_CODE -> el
    java.lang.String SAVED_GAME_INT_HANDICAP_AMOUNT -> em
    java.lang.String SAVED_GAME_INT_OPPONENT_THREE_NUMBER_OF_CARDS -> en
    java.lang.String SAVED_GAME_INT_OPPONENT_TWO_NUMBER_OF_CARDS -> eo
    java.lang.String SAVED_GAME_INT_OPPONENT_ONE_NUMBER_OF_CARDS -> ep
    java.lang.String SAVED_GAME_INT_PLAYER_NUMBER_OF_CARDS -> eq
    java.lang.String SAVED_GAME_INT_HISTORY_SIZE -> er
    java.lang.String SAVED_GAME_INT_GAME_MODE -> es
    java.lang.String TWO_COLOURS -> et
    java.lang.String FOUR_COLOURS -> eu
    java.lang.String DECK_DIRECTORY_CLASSIC -> ev
    java.lang.String DECK_DIRECTORY_ALTERNATE -> ew
    java.lang.String JOKER_DIRECTORY_CLASSIC -> ex
    java.lang.String JOKER_DIRECTORY_DEVELOPERS -> ey
    java.lang.String BACK_CODE_CLASSIC_BLUE -> ez
    java.lang.String DEFAULT_LOOK_AND_FEEL -> eA
    int OPEN_ON_FIRST_ROUND -> eB
    int OPEN_ON_LAST_ROUND -> eC
util.RegistryUtil -> c.E:
    13:19:void clearNode(java.util.prefs.Preferences) -> a
    23:24:org.w3c.dom.Document getAttributeXml(java.util.prefs.Preferences,java.lang.String) -> a
    29:31:void setAttributeXml(java.util.prefs.Preferences,java.lang.String,org.w3c.dom.Document) -> a
util.ReplayConverter -> c.F:
    int REPLAY_VERSION -> a
    21:49:void startReplayConversionIfNecessary() -> a
    53:74:boolean convertReplaysInSeparateThread(java.lang.String) -> d
    80:134:void convertReplays(java.lang.String) -> e
    139:170:void convertReplay(java.io.File,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
    174:182:int getReplayVersion(java.lang.String) -> a
    187:208:boolean convertReplay(java.lang.String,int) -> a
    218:219:boolean replayIsOldVersion(java.lang.String) -> b
    77:77:void access$0(java.lang.String) -> c
util.ReplayConverter$1 -> c.F$1:
    java.lang.String val$folder -> a
    59:60:void run() -> run
util.ReplayConverterVersion0 -> c.G:
    18:43:boolean convertReplay(org.w3c.dom.Element) -> a
    47:57:void convertRound(org.w3c.dom.Element,int,boolean,boolean) -> a
    62:102:java.lang.String convertBidStr(java.lang.String,int,boolean,boolean) -> a
    107:182:object.Bid getBidFromString(java.lang.String,boolean,boolean,boolean) -> a
util.ReplayFileUtil -> c.H:
    java.lang.String FOLDER_PERSONAL_REPLAYS -> a
    java.lang.String FOLDER_IMPORTED_REPLAYS -> b
    javax.swing.ImageIcon PERFECT_FLAG -> c
    javax.swing.ImageIcon BLIND_FLAG -> d
    javax.swing.ImageIcon PARTIALLY_BLIND_FLAG -> e
    javax.swing.ImageIcon HANDICAP_ONE_FLAG -> f
    javax.swing.ImageIcon HANDICAP_TWO_FLAG -> g
    javax.swing.ImageIcon HANDICAP_THREE_FLAG -> h
    javax.swing.ImageIcon HANDICAP_FOUR_FLAG -> i
    javax.swing.ImageIcon ONLINE_FLAG -> j
    javax.swing.ImageIcon MOON_FLAG -> k
    javax.swing.ImageIcon STAR_FLAG -> l
    javax.swing.ImageIcon MOON_AND_STAR_FLAG -> m
    javax.swing.ImageIcon CHEAT_FLAG -> n
    javax.swing.ImageIcon NO_FLAG -> o
    java.lang.String CODE_PERFECT -> p
    java.lang.String CODE_BLIND -> q
    java.lang.String CODE_PARTIALLY_BLIND -> r
    java.lang.String CODE_HANDICAP_FOUR -> s
    java.lang.String CODE_HANDICAP_THREE -> t
    java.lang.String CODE_HANDICAP_TWO -> u
    java.lang.String CODE_HANDICAP_ONE -> v
    java.lang.String CODE_ONLINE -> w
    java.lang.String CODE_MOON_AND_STAR -> z
    java.lang.String CODE_STAR -> A
    java.lang.String CODE_MOON -> B
    java.lang.String CODE_CHEATS -> C
    java.lang.String XML_REPLAY_INT_VERSION -> eD
    java.lang.String XML_REPLAY_INT_GAME_MODE -> eE
    java.lang.String XML_REPLAY_INT_TOTAL_ROUNDS -> eF
    java.lang.String XML_REPLAY_INT_JOKER_VALUE -> eG
    java.lang.String XML_REPLAY_INT_PLAYER_WON -> eH
    java.lang.String XML_REPLAY_INT_GAME_COMPLETE -> eI
    java.lang.String XML_REPLAY_STRING_PLAYER_NAME -> eJ
    java.lang.String XML_REPLAY_STRING_OPPONENT_ONE_NAME -> eK
    java.lang.String XML_REPLAY_STRING_OPPONENT_TWO_NAME -> eL
    java.lang.String XML_REPLAY_STRING_OPPONENT_THREE_NAME -> eM
    java.lang.String XML_REPLAY_STRING_OPPONENT_ONE_STRATEGY -> eN
    java.lang.String XML_REPLAY_STRING_OPPONENT_TWO_STRATEGY -> eO
    java.lang.String XML_REPLAY_STRING_OPPONENT_THREE_STRATEGY -> eP
    java.lang.String XML_REPLAY_STRING_ROOM_NAME -> eQ
    java.lang.String XML_REPLAY_BOOLEAN_PLAY_BLIND -> eR
    java.lang.String XML_REPLAY_BOOLEAN_PLAY_WITH_HANDICAP -> eS
    java.lang.String XML_REPLAY_INT_HANDICAP_AMOUNT -> eT
    java.lang.String XML_REPLAY_BOOLEAN_HAS_ACTED_BLIND_THIS_GAME -> eU
    java.lang.String XML_REPLAY_BOOLEAN_HAS_VIEWED_HAND_THIS_GAME -> eV
    java.lang.String XML_REPLAY_BOOLEAN_INCLUDE_MOONS -> eW
    java.lang.String XML_REPLAY_BOOLEAN_INCLUDE_STARS -> eX
    java.lang.String XML_REPLAY_BOOLEAN_CHEAT_USED -> eY
    java.lang.String REPLAY_ELEMENT_ROUND -> eZ
    java.lang.String ROUND_INT_NUMBER -> fa
    java.lang.String ROUND_INT_PERSON_TO_START -> fb
    java.lang.String ROUND_BOOLEAN_PLAYER_ENABLED -> fc
    java.lang.String ROUND_BOOLEAN_OPPONENT_ONE_ENABLED -> fd
    java.lang.String ROUND_BOOLEAN_OPPONENT_TWO_ENABLED -> fe
    java.lang.String ROUND_BOOLEAN_OPPONENT_THREE_ENABLED -> ff
    java.lang.String ROUND_INT_PLAYER_NUMBER_OF_CARDS -> fg
    java.lang.String ROUND_INT_OPPONENT_ONE_NUMBER_OF_CARDS -> fh
    java.lang.String ROUND_INT_OPPONENT_TWO_NUMBER_OF_CARDS -> fi
    java.lang.String ROUND_INT_OPPONENT_THREE_NUMBER_OF_CARDS -> fj
    java.lang.String ROUND_INT_LAST_BID_SUIT_CODE -> fk
    java.lang.String ROUND_ELEMENT_HAND -> fl
    java.lang.String HAND_INT_PLAYER_NUMBER -> fm
    java.lang.String HAND_STRING_CARD -> fn
    java.lang.String ROUND_ELEMENT_BID_HISTORY -> fo
    java.lang.String BID_HISTORY_INT_HISTORY_SIZE -> fp
    java.lang.String BID_HISTORY_STRING_HISTORY -> fq
    java.lang.String ROUND_ELEMENT_CHAT_HISTORY -> fr
    java.lang.String CHAT_HISTORY_ELEMENT_MESSAGE -> fs
    java.lang.String MESSAGE_STRING_NUMBER -> ft
    java.lang.String MESSAGE_STRING_USERNAME -> fu
    java.lang.String MESSAGE_STRING_COLOUR -> fv
    java.lang.String MESSAGE_STRING_CONTENT -> fw
    117:118:void saveInGameReplayToFile() -> a
    122:124:void saveOnlineReplayToFile(java.lang.String,java.lang.String) -> a
    128:145:void saveReplayToFile(java.util.prefs.Preferences) -> a
    149:154:void exportReplay(java.lang.String) -> a
    158:172:java.lang.String saveImportedReplay() -> b
    178:183:void encodeAndSaveToFile(java.nio.file.Path,java.lang.String) -> a
    187:244:java.lang.String getXmlStringFromReplay(java.util.prefs.Preferences) -> b
    249:295:void appendStandardVariablesToXml(java.util.prefs.Preferences,org.w3c.dom.Element) -> a
    300:329:void addHandElement(java.util.prefs.Preferences,org.w3c.dom.Document,org.w3c.dom.Element,int,int) -> a
    334:346:void addListmodelElement(java.util.prefs.Preferences,org.w3c.dom.Document,org.w3c.dom.Element,int) -> a
    351:371:void addChatHistoryElement(java.util.prefs.Preferences,org.w3c.dom.Document,org.w3c.dom.Element,int) -> b
    375:375:java.lang.String getDirectoryFromPreferences() -> c
    380:425:java.lang.String factoryFileNameForReplay(java.util.prefs.Preferences) -> c
    430:436:java.lang.String getFormattedDateFromFileName(java.lang.String) -> b
    441:441:java.lang.String getComparableDateFromFileName(java.lang.String) -> c
    446:448:java.lang.String getNumberOfPlayersFromFileName(java.lang.String) -> d
    453:454:java.lang.String getNumberOfCardsFromFileName(java.lang.String) -> e
    459:530:boolean filenameIsValid(java.io.File) -> a
    537:608:boolean successfullyFilledRegistryFromFile(java.lang.String,java.util.prefs.Preferences) -> a
    614:634:org.w3c.dom.Document getXmlDocumentFromFile(java.lang.String) -> f
    640:662:util.ReplayRowWrapper factoryRowWrapper(java.lang.String,java.lang.String) -> b
    667:765:object.FlagImage createFlagFromFile(java.lang.String,org.w3c.dom.Element) -> a
    770:815:boolean addRoundsToRegistry(java.util.prefs.Preferences,org.w3c.dom.Element,boolean,boolean) -> a
    819:855:void saveHandsToRegistry(org.w3c.dom.Element,int,java.util.prefs.Preferences) -> a
    858:869:void saveListModelToRegistry(org.w3c.dom.Element,int,java.util.prefs.Preferences) -> b
    872:891:void saveChatHistoryToRegistry(org.w3c.dom.Element,int,java.util.prefs.Preferences) -> c
    897:922:void moveReplays(java.io.File[],java.io.File[],java.lang.String,java.lang.String) -> a
    927:939:void moveFiles(java.io.File[],java.lang.String,java.lang.String) -> a
    943:964:java.lang.String deleteCorruptReplays(java.util.ArrayList) -> a
    969:1008:java.lang.String deleteReplays(java.lang.String) -> g
util.ReplayRowWrapper -> c.I:
    java.lang.String filename -> a
    java.lang.String playerWon -> b
    java.lang.String gameComplete -> c
    java.lang.String gameMode -> d
    java.lang.String roomName -> e
    java.lang.String rounds -> f
    java.lang.String date -> g
    java.lang.String name -> h
    java.lang.String numberOfPlayers -> i
    java.lang.String numberOfCards -> j
    boolean fromCache -> k
    object.FlagImage flag -> l
    45:46:java.lang.Object[] getAsRow() -> a
    50:50:java.lang.String getFilename() -> b
    54:55:void setFilename(java.lang.String) -> a
    58:58:java.lang.String getPlayerWon() -> c
    62:63:void setPlayerWon(java.lang.String) -> b
    66:66:java.lang.String getGameComplete() -> d
    70:71:void setGameComplete(java.lang.String) -> c
    74:74:java.lang.String getGameMode() -> e
    78:79:void setGameMode(java.lang.String) -> d
    82:82:java.lang.String getRoomName() -> f
    86:87:void setRoomName(java.lang.String) -> e
    90:90:java.lang.String getRounds() -> g
    94:95:void setRounds(java.lang.String) -> f
    98:98:java.lang.String getDate() -> h
    102:103:void setDate(java.lang.String) -> g
    106:106:java.lang.String getName() -> i
    110:111:void setName(java.lang.String) -> h
    114:114:java.lang.String getNumberOfPlayers() -> j
    118:119:void setNumberOfPlayers(java.lang.String) -> i
    122:122:java.lang.String getNumberOfCards() -> k
    126:127:void setNumberOfCards(java.lang.String) -> j
    130:130:object.FlagImage getFlag() -> l
    134:135:void setFlag(object.FlagImage) -> a
    139:139:boolean isFromCache() -> m
    143:144:void setFromCache(boolean) -> a
util.RevealListener -> c.J:
    void cardRevealed(java.lang.String) -> d
util.SimulationException -> c.K:
util.SimulationParms -> c.L:
    int gameMode -> a
    boolean opponentTwoEnabled -> b
    boolean opponentThreeEnabled -> c
    java.lang.String opponentZeroStrategy -> d
    java.lang.String opponentOneStrategy -> e
    java.lang.String opponentTwoStrategy -> f
    java.lang.String opponentThreeStrategy -> g
    int numberOfCards -> h
    boolean includeJokers -> i
    int jokerValue -> j
    int jokerQuantity -> k
    boolean includeMoons -> l
    boolean includeStars -> m
    boolean negativeJacks -> n
    boolean cardReveal -> o
    boolean logging -> p
    boolean randomiseOrder -> q
    boolean forceStart -> r
    39:54:util.StrategyParms getStrategyParms() -> a
    62:62:int getGameMode() -> b
    66:67:void setGameMode(int) -> a
    70:70:boolean getOpponentTwoEnabled() -> c
    74:75:void setOpponentTwoEnabled(boolean) -> a
    78:78:boolean getOpponentThreeEnabled() -> d
    82:83:void setOpponentThreeEnabled(boolean) -> b
    86:86:java.lang.String getOpponentZeroStrategy() -> e
    90:91:void setOpponentZeroStrategy(java.lang.String) -> a
    94:94:java.lang.String getOpponentOneStrategy() -> f
    98:99:void setOpponentOneStrategy(java.lang.String) -> b
    102:102:java.lang.String getOpponentTwoStrategy() -> g
    106:107:void setOpponentTwoStrategy(java.lang.String) -> c
    110:110:java.lang.String getOpponentThreeStrategy() -> h
    114:115:void setOpponentThreeStrategy(java.lang.String) -> d
    118:118:int getNumberOfCards() -> i
    122:123:void setNumberOfCards(int) -> b
    126:126:boolean getIncludeJokers() -> j
    130:131:void setIncludeJokers(boolean) -> c
    134:134:int getJokerValue() -> k
    138:139:void setJokerValue(int) -> c
    142:142:int getJokerQuantity() -> l
    146:147:void setJokerQuantity(int) -> d
    150:150:boolean getIncludeMoons() -> m
    154:155:void setIncludeMoons(boolean) -> d
    158:158:boolean getIncludeStars() -> n
    162:163:void setIncludeStars(boolean) -> e
    166:166:boolean getNegativeJacks() -> o
    170:171:void setNegativeJacks(boolean) -> f
    174:174:boolean getCardReveal() -> p
    178:179:void setCardReveal(boolean) -> g
    182:182:boolean getLogging() -> q
    186:187:void setLogging(boolean) -> h
    190:190:boolean getRandomiseOrder() -> r
    194:195:void setRandomiseOrder(boolean) -> i
    198:198:boolean getForceStart() -> s
    202:203:void setForceStart(boolean) -> j
util.SimulationResults -> c.M:
    double wins -> a
    double perfectGames -> b
    double goodChallenges -> c
    double totalChallenges -> d
    double opportunitiesToChallenge -> e
    16:17:void incrementWins() -> a
    21:22:void incrementPerfectGames() -> b
    26:27:void incrementGoodChallenges() -> c
    31:32:void incrementTotalChallenges() -> d
    36:37:void incrementOpportunitiesToChallenge() -> e
    41:54:java.util.Vector generateRow(int,java.lang.String,double) -> a
    59:66:java.lang.String formatPercent(double,double) -> a
util.StrategyParms -> c.N:
    int gameMode -> a
    int playerCards -> b
    int opponentOneCards -> c
    int opponentTwoCards -> d
    int opponentThreeCards -> e
    int jokerQuantity -> f
    int jokerValue -> g
    boolean includeMoons -> h
    boolean includeStars -> i
    boolean negativeJacks -> j
    boolean cardReveal -> k
    object.Bid lastBid -> l
    boolean logging -> m
    java.util.ArrayList cardsOnShowFromOpponents -> n
    36:36:int getTotalNumberOfCards() -> a
    44:44:int getPlayerCards() -> b
    48:49:void setPlayerCards(int) -> a
    52:52:int getOpponentOneCards() -> c
    56:57:void setOpponentOneCards(int) -> b
    60:60:int getOpponentTwoCards() -> d
    64:65:void setOpponentTwoCards(int) -> c
    68:68:int getOpponentThreeCards() -> e
    72:73:void setOpponentThreeCards(int) -> d
    76:76:int getJokerQuantity() -> f
    80:81:void setJokerQuantity(int) -> e
    84:84:int getJokerValue() -> g
    88:89:void setJokerValue(int) -> f
    92:92:boolean getIncludeMoons() -> h
    96:97:void setIncludeMoons(boolean) -> a
    100:100:boolean getIncludeStars() -> i
    104:105:void setIncludeStars(boolean) -> b
    108:108:boolean getNegativeJacks() -> j
    112:113:void setNegativeJacks(boolean) -> c
    116:116:boolean getCardReveal() -> k
    120:121:void setCardReveal(boolean) -> d
    124:124:object.Bid getLastBid() -> l
    128:129:void setLastBid(object.Bid) -> a
    132:132:int getGameMode() -> m
    136:137:void setGameMode(int) -> g
    140:140:boolean getLogging() -> n
    144:145:void setLogging(boolean) -> e
    148:148:java.util.ArrayList getCardsOnShowFromOpponents() -> o
    152:159:void appendCardsOnShowFromOpponent(object.Player,object.Player) -> a
    162:163:void setCardsOnShowFromOpponents(java.util.ArrayList) -> a
    167:200:util.StrategyParms factoryFromXml(org.w3c.dom.Element) -> a
    205:212:object.Bid factoryBidFromXmlTag(org.w3c.dom.Element,util.StrategyParms) -> a
util.StrategyUtil -> c.O:
    9:37:int getRandomSuit(boolean,boolean) -> a
util.StringUtil -> c.P:
    9:12:int countOccurences(java.lang.String,java.lang.String) -> a
    17:41:java.util.ArrayList getListFromDelims(java.lang.String,java.lang.String) -> b
    46:58:java.lang.String toDelims(java.util.ArrayList,java.lang.String) -> a
util.TableUtil -> c.Q:
    javax.swing.table.DefaultTableCellRenderer FLAG_RENDERER -> a
    java.util.Comparator DATE_COMPARATOR -> b
    javax.swing.table.DefaultTableCellRenderer TIME_RENDERER -> c
    java.util.Comparator FLAG_COMPARATOR -> d
    java.util.Comparator INT_COMPARATOR -> e
    java.util.Comparator LONG_COMPARATOR -> f
    java.util.Comparator PLAYERS_COMPARATOR -> g
    115:126:java.lang.String convertDateForSorting(java.lang.String) -> b
    111:111:java.lang.String access$0(java.lang.String) -> a
util.TableUtil$1 -> c.Q$1:
    51:62:void setValue(java.lang.Object) -> setValue
    67:69:java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
util.TableUtil$2 -> c.Q$2:
    78:81:int compare(java.lang.String,java.lang.String) -> a
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
util.TableUtil$3 -> c.Q$3:
    90:100:void setValue(java.lang.Object) -> setValue
    105:107:java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
util.TableUtil$4 -> c.Q$4:
    135:138:int compare(object.FlagImage,object.FlagImage) -> a
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
util.TableUtil$5 -> c.Q$5:
    147:160:int compare(java.lang.String,java.lang.String) -> a
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
util.TableUtil$6 -> c.Q$6:
    171:184:int compare(java.lang.Long,java.lang.Long) -> a
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
util.TableUtil$7 -> c.Q$7:
    195:221:int compare(java.lang.String,java.lang.String) -> a
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
util.TableUtil$CentreRenderer -> c.Q$a:
    java.awt.Font font -> a
    30:42:java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
util.TableUtil$DefaultModel -> c.Q$b:
    230:230:boolean isCellEditable(int,int) -> isCellEditable
    235:240:java.lang.Class getColumnClass(int) -> getColumnClass
util.VectCpuStrategies -> c.R:
    java.lang.String STRATEGY_RANDOMISE_PER_MOVE -> a
    java.lang.String[] STRATEGIES_TO_CHOOSE_AT_RANDOM -> b
    19:25:java.util.Vector getAllStrategies() -> a
    30:31:object.Bid processOpponentTurn(object.Player,util.StrategyParms) -> a
    35:49:object.Bid processOpponentTurn(java.lang.String,object.Player,util.StrategyParms) -> a
    55:166:object.Bid processBasicTurn(object.Player,util.StrategyParms) -> b
    174:176:object.Bid processEvTurnAndRevealCard(object.Player,util.StrategyParms) -> c
    181:257:object.Bid processEvTurn(object.Player,util.StrategyParms) -> d
    264:283:int getOpeningBidForSuitBasedOnEv(int,java.util.HashMap) -> a
    288:288:object.VectropyBid opponentMinBidSuit(object.VectropyBid,int) -> a
util.VectropyUtil -> c.S:
    15:20:boolean isOverbid(object.VectropyBid,java.util.concurrent.ConcurrentHashMap,int) -> a
    25:37:boolean isOverbid(object.VectropyBid,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],int) -> a
    43:48:java.lang.String getResult(java.util.concurrent.ConcurrentHashMap,int,int,boolean,boolean) -> a
    54:113:java.lang.String getResult(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],int,int,boolean,boolean) -> a
    118:137:java.lang.String getReadableString(double[]) -> a
    143:168:double[] getDifferenceVector(object.VectropyBid,java.lang.String[],int,boolean,boolean) -> a
    174:192:int getSuitWithMostPositiveDifference(double[],boolean) -> a
    198:207:boolean canSeeBid(double[]) -> b
    212:221:boolean shouldAutoChallengeForIndividualSuit(double[],double) -> a
    226:232:boolean shouldAutoChallengeForOverallBid(double[],double) -> b
    237:254:boolean bidIsSensible(double[],double,boolean) -> a
    259:259:object.VectropyBid getEmptyBid(boolean,boolean) -> a
    268:293:double[] getEvDifferenceVector(object.VectropyBid,java.util.HashMap,boolean,boolean) -> a
    298:298:boolean isBelowEvInAllSuits(double[]) -> c
    302:312:boolean shouldAutoChallengeForEvOfIndividualSuit(double[]) -> d
    316:328:boolean shouldAutoChallengeForOverallEvOfBid(double[]) -> e
    333:343:boolean shouldAutoChallengeForMultipleSuitsOverEv(double[]) -> f
    348:363:int getSuitWithHighestValue(java.util.HashMap) -> a
util.XmlConstants -> c.T:
    java.lang.String ROOT_TAG_NEW_SYMMETRIC_KEY -> c
    java.lang.String ROOT_TAG_CRC_CHECK -> d
    java.lang.String ROOT_TAG_CLIENT_MAIL -> e
    java.lang.String ROOT_TAG_HEARTBEAT -> f
    java.lang.String ROOT_TAG_NEW_ACCOUNT_REQUEST -> g
    java.lang.String ROOT_TAG_CHANGE_EMAIL_REQUEST -> h
    java.lang.String ROOT_TAG_CHANGE_PASSWORD_REQUEST -> i
    java.lang.String ROOT_TAG_CONNECTION_REQUEST -> j
    java.lang.String ROOT_TAG_RESET_PASSWORD_REQUEST -> k
    java.lang.String ROOT_TAG_DISCONNECT_REQUEST -> l
    java.lang.String ROOT_TAG_ACHIEVEMENTS_UPDATE -> m
    java.lang.String ROOT_TAG_NEW_CHAT -> n
    java.lang.String ROOT_TAG_ROOM_JOIN_REQUEST -> o
    java.lang.String ROOT_TAG_CLOSE_ROOM_REQUEST -> p
    java.lang.String ROOT_TAG_OBSERVER_REQUEST -> q
    java.lang.String ROOT_TAG_NEW_GAME_REQUEST -> r
    java.lang.String ROOT_TAG_BID -> s
    java.lang.String ROOT_TAG_LEADERBOARD_REQUEST -> t
    java.lang.String SOCKET_NAME_SUFFIX -> u
    java.lang.String SOCKET_NAME_GAME -> v
    java.lang.String SOCKET_NAME_CHAT -> w
    java.lang.String SOCKET_NAME_LOBBY -> x
    java.lang.String RESPONSE_TAG_LOBBY_NOTIFICATION -> y
    java.lang.String RESPONSE_TAG_CHAT_NOTIFICATION -> z
    java.lang.String RESPONSE_TAG_PLAYER_NOTIFICATION -> A
    java.lang.String RESPONSE_TAG_BID_NOTIFICATION -> B
    java.lang.String RESPONSE_TAG_NEW_ROUND_NOTIFICATION -> C
    java.lang.String RESPONSE_TAG_GAME_OVER_NOTIFICATION -> D
    java.lang.String RESPONSE_TAG_STATISTICS_NOTIFICATION -> E
    java.lang.String RESPONSE_TAG_SYMMETRIC_KEY -> F
    java.lang.String RESPONSE_TAG_CHANGE_PORT -> G
    java.lang.String RESPONSE_TAG_KICK_OFF -> H
    java.lang.String RESPONSE_TAG_NO_UPDATES -> I
    java.lang.String RESPONSE_TAG_UPDATE_AVAILABLE -> J
    java.lang.String RESPONSE_TAG_NEW_ACCOUNT -> K
    java.lang.String RESPONSE_TAG_RESET_PASSWORD -> L
    java.lang.String RESPONSE_TAG_CHANGE_PASSWORD -> M
    java.lang.String RESPONSE_TAG_CHANGE_EMAIL -> N
    java.lang.String RESPONSE_TAG_CONNECT_SUCCESS -> O
    java.lang.String RESPONSE_TAG_CONNECT_FAILURE -> P
    java.lang.String RESPONSE_TAG_LEADERBOARD -> Q
    java.lang.String RESPONSE_TAG_JOIN_ROOM_RESPONSE -> R
    java.lang.String RESPONSE_TAG_CLOSE_ROOM_RESPONSE -> S
    java.lang.String RESPONSE_TAG_OBSERVER_RESPONSE -> T
    java.lang.String RESPONSE_TAG_NEW_GAME -> U
    java.lang.String RESPONSE_TAG_ACKNOWLEDGEMENT -> V
    java.lang.String RESPONSE_TAG_STACK_TRACE -> W
    java.lang.String RESPONSE_TAG_SOCKET_TIME_OUT -> X
    java.lang.String REMOVAL_REASON_SERVER_OFFLINE -> Y
    java.lang.String REMOVAL_REASON_FAILED_USERNAME_CHECK -> Z
util.XmlUtil -> c.U:
    27:35:org.w3c.dom.Document factoryNewDocument() -> a
    41:45:org.w3c.dom.Document factorySimpleMessage(java.lang.String) -> a
    52:65:java.lang.String getStringFromDocument(org.w3c.dom.Document) -> a
    73:80:org.w3c.dom.Document getDocumentFromXmlString(java.lang.String) -> b
    86:97:int getAttributeIntCompulsory(org.w3c.dom.Element,java.lang.String) -> a
    102:109:java.lang.String getCompulsoryAttribute(org.w3c.dom.Element,java.lang.String) -> b
    114:114:int getAttributeInt(org.w3c.dom.Element,java.lang.String) -> c
    119:136:int getAttributeInt(org.w3c.dom.Element,java.lang.String,int) -> a
    141:148:long getAttributeLong(org.w3c.dom.Element,java.lang.String) -> d
    153:160:double getAttributeDouble(org.w3c.dom.Element,java.lang.String) -> e
    165:166:boolean getAttributeBoolean(org.w3c.dom.Element,java.lang.String) -> f
    171:175:void setAttributeBoolean(org.w3c.dom.Element,java.lang.String,boolean) -> a
    179:198:java.util.ArrayList getListFromElement(org.w3c.dom.Element,java.lang.String,java.lang.String) -> a
    203:223:java.lang.String escapeHtml(java.lang.String) -> c
    228:240:org.w3c.dom.Element getElementIfExists(org.w3c.dom.Element,java.lang.String) -> g
